{
	"name": "DeltaChanges",
	"properties": {
		"folder": {
			"name": "Delta"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "XXL",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "400g",
			"driverCores": 64,
			"executorMemory": "400g",
			"executorCores": 64,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_spark",
				"display_name": "Synapse Spark"
			},
			"language_info": {
				"name": "scala"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/XXL",
				"name": "XXL",
				"type": "Spark",
				"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/XXL",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 64,
				"memory": 400,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"case class Data(key: String, value: String)\r\n",
					"\r\n",
					"case class ChangeData(key: String, newValue: String, deleted: Boolean, time: Long) {\r\n",
					"  assert(newValue != null ^ deleted)\r\n",
					"}"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val changeDataSource = Seq(\n",
					"  ChangeData(\"a\", \"10\", deleted = false, time = 0),\n",
					"  ChangeData(\"a\", null, deleted = true, time = 1),   // a was updated and then deleted\n",
					"  ChangeData(\"b\", null, deleted = true, time = 2),   // b was just deleted once\n",
					"  ChangeData(\"c\", null, deleted = true, time = 3),   // c was deleted and then updated twice\n",
					"  ChangeData(\"c\", \"20\", deleted = false, time = 4),\n",
					"  ChangeData(\"c\", \"200\", deleted = false, time = 5)\n",
					").toDF().createOrReplaceTempView(\"changes\")\n",
					"\n",
					"// read from last checkpoint \n",
					"\n",
					"// val changeDataSource = Seq(\n",
					"//   ChangeData(\"d\", \"82\", deleted = false, time = 6),\n",
					"//   ChangeData(\"e\", \"19\", deleted = false, time = 7),\n",
					"//   ChangeData(\"f\", \"12\", deleted = false, time = 8),\n",
					"//   ChangeData(\"g\", null, deleted = true, time = 9),\n",
					"//   ChangeData(\"d\", \"21\", deleted = false, time = 10)\n",
					"// ).toDF().createOrReplaceTempView(\"changes\")"
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val changesDF = spark.sql(\"select * from changes\")"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"val latestChangeForEachKey = changesDF.selectExpr(\"key\", \"struct(time, newValue, deleted) as otherCols\").groupBy(\"key\").agg(max(\"otherCols\").as(\"latest\")).selectExpr(\"key\", \"latest.*\")\r\n",
					"latestChangeForEachKey.show()"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"latestChangeForEachKey.createOrReplaceTempView(\"lastchanges\")"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"latestChangeForEachKey.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"lastchanges\") "
				],
				"attachments": null,
				"execution_count": 7
			}
		]
	}
}