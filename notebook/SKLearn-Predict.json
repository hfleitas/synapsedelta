{
	"name": "SKLearn-Predict",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "XXL",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "400g",
			"driverCores": 64,
			"executorMemory": "400g",
			"executorCores": 64,
			"numExecutors": 4,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "4",
				"spark.dynamicAllocation.maxExecutors": "4",
				"spark.autotune.trackingId": "194a4768-c097-4faa-b057-991d1fd8cc08"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/XXL",
				"name": "XXL",
				"type": "Spark",
				"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/XXL",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 64,
				"memory": 400,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import fsspec\r\n",
					"import pandas\r\n",
					"from fsspec.core import split_protocol\r\n",
					"\r\n",
					"adls_account_name = 'wplushiramsynapseadlsv2' #Provide exact ADLS account name\r\n",
					"adls_account_key = 'AyxPBEqzImzT7KN1Nv5H62MuUEiin18fF75OBhU8pN0eFctrgc2o7gs0xezvJzRF9ZpBR7sgAWItmAxALzcMwg==' #Provide exact ADLS account key\r\n",
					"\r\n",
					"fsspec_handle = fsspec.open('abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/dominicks_OJ_train.csv', account_name=adls_account_name, account_key=adls_account_key)\r\n",
					"\r\n",
					"with fsspec_handle.open() as f:\r\n",
					"    train_df = pandas.read_csv(f)"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import fsspec\r\n",
					"import pandas\r\n",
					"from fsspec.core import split_protocol\r\n",
					"\r\n",
					"data_path = spark.read.load('abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/dominicks_OJ_train.csv', format='csv', header=True)\r\n",
					"\r\n",
					"traindf = data_path.toPandas()"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}