{
	"name": "04-Formula1",
	"properties": {
		"content": {
			"query": "// .add database f1 ingestors ('aadapp=2caaaf98-567e-426e-a7c3-1392a31de3a2;microsoft.com') 'formula1adx'\n\n// .add database f1 viewers ('aadapp=2caaaf98-567e-426e-a7c3-1392a31de3a2;microsoft.com') 'formula1adx'\n\n.add database f1 users ('aadapp=2caaaf98-567e-426e-a7c3-1392a31de3a2;microsoft.com') 'formula1adx'\n\n.show tables \n\nCarTelemetry\n| limit 10 \n\nCarTelemetry\n| union CarStatus, Lap, Participant, Session\n// | where $__timeFilter(Timestamp)\n| count\n\n\nEXPLAIN\nSELECT * FROM [CarTelemetry]\n\nSELECT count(*) FROM CarTelemetry where Timestamp > '5/23/2022';\n\n\nParticipant\n| limit 100 \n\n//make Participant a DW dimension. AdventureWorks racing team\n\n#connect cluster('adxpm10774.eastus').database(IoTAnalytics)\n\n//sqlmi\nevaluate sql_request(\n  'Server=tcp:oceanmi.public.ddc9e22985bb.database.windows.net,3342;'\n    'Authentication=\"Active Directory Integrated\";'\n    'Initial Catalog=OceanMI;',\n  'select * from [dbo].[facttable]')\n| where id > 0\n| project value\n\n// mix kql telemetry with DW/Lakedb or in PBI model. -> stretch. wow. all-up synapse. \n// viz in PBI\n// ai model train/score/ops. 2nd presentation.\n\n\n//cross cluster query-ingest\n.set-or-replace dxpooltable1 <| cluster('help').database('Samples').demo_make_series1\n\n.drop table dxpooltable1 ifexists ",
			"metadata": {
				"language": "kql"
			},
			"currentConnection": {
				"poolName": "formula1",
				"databaseName": "f1"
			}
		},
		"type": "KqlQuery"
	}
}