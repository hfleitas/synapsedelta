{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "wplushiramsynapse"
		},
		"LaptopFact_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LaptopFact'"
		},
		"SQLOnDemand_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLOnDemand'"
		},
		"adbhf_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'adbhf'"
		},
		"iotmonitoringsa10774_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'iotmonitoringsa10774'"
		},
		"wplushiramsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wplushiramsynapse-WorkspaceDefaultSqlServer'"
		},
		"wplushiramsynapseLoaderXL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wplushiramsynapseLoaderXL'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://synapseAKV.vault.azure.net/"
		},
		"LabFilesZip_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pbiworkshoplabsgvw.blob.core.windows.net/synapse/LabFiles.zip"
		},
		"LaptopFact_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:/hiram-msft/ws-SynapseSQLPools"
		},
		"LaptopFact_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "LAPTOP-RRU3V9OS\\dwloader"
		},
		"PublicDataset_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'PublicDataset'"
		},
		"freeadx_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "MyDatabase"
		},
		"nyctaxistaging_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://wplushiramsynapseadlsv2.dfs.core.windows.net/"
		},
		"powerapps_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "powerappssqlconnectionstring"
		},
		"sqldbedgeoulvzyml_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "e4e06275-58d1-4081-8f1b-be12462eb701"
		},
		"sqldbedgeoulvzyml_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "wind"
		},
		"wplushiramsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://wplushiramsynapseadlsv2.dfs.core.windows.net"
		},
		"Daily_properties_DevOpsCICD_parameters_environment": {
			"type": "string",
			"defaultValue": "dev"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/13456789123456789123456789123456789123456789')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADFOrcIntoDW')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"description": "Would like to use wildcard path for diff partition folders and additional column for filepath month.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OrcSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "orc_sample",
									"wildcardFileName": "*.*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"preCopyScript": "truncate table staging.orcsample",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Orc_Sample",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OrcSample",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:07Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Orc_Sample')]",
				"[concat(variables('workspaceId'), '/datasets/OrcSample')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSV to ADX')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": false,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LengthOfStay_cooked_small",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "freeadx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Kusto"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-22T22:23:40Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/LengthOfStay_cooked_small')]",
				"[concat(variables('workspaceId'), '/datasets/freeadx')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CrimeData-ADB')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_dpx",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Key from AKV",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "training/crime-data-2016/"
							},
							{
								"name": "Destination",
								"value": "dwtemp/03.02/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "PublicDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_nuj",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LabNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Get Key from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hiramfleitas@microsoft.com/hiramdatabricks/Includes/Databricks-Data-Transformations",
							"baseParameters": {
								"accountName": "wplushiramsynapseadlsv2",
								"accountKey": {
									"value": "@string(activity('Get Key from AKV').output.value)",
									"type": "Expression"
								},
								"containerName": "dwtemp"
							}
						},
						"linkedServiceName": {
							"referenceName": "adbhf",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Key from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/accountkey/?api-version=7.0')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"KeyVaultDNSName": {
						"type": "string",
						"defaultValue": "https://synapseakv.vault.azure.net/"
					}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:14Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/PublicDataset')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_nuj')]",
				"[concat(variables('workspaceId'), '/linkedServices/adbhf')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-AutoDemo')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "FromScratch",
						"description": "Reset, make Delta table, and initial load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delta-FromScratch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Changes",
						"description": "Make Delta changes, stage and merge",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FromScratch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delta-Changes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T04:49:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Delta-FromScratch')]",
				"[concat(variables('workspaceId'), '/pipelines/Delta-Changes')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-Changes')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Target",
						"description": "overwrites staging table in SQL Pools from Serverless",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delta-Changes",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "exec DeltaDropTarget",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"path": "wplushiramsynapsefs"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "key",
											"type": "String"
										},
										"sink": {
											"name": "key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "value",
											"type": "String"
										},
										"sink": {
											"name": "value",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "vDeltaTarget",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LoaderXLTarget",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delta-Changes",
						"description": "Includes CDC",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Delta-Changes",
								"type": "NotebookReference"
							},
							"snapshot": true,
							"sparkPool": {
								"referenceName": "threetwo",
								"type": "BigDataPoolReference"
							},
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					},
					{
						"name": "LastChanges",
						"description": "overwrites staging table in SQL Pools from Serverless",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delta-Changes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "exec DeltaDropLastChanges",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"path": "wplushiramsynapsefs"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "key",
											"type": "String"
										},
										"sink": {
											"name": "key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "time",
											"type": "Int64"
										},
										"sink": {
											"name": "time",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "newValue",
											"type": "String"
										},
										"sink": {
											"name": "newValue",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "deleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "deleted",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "vDeltaLastChanges",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LoaderXLLastChanges",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MergeLatest",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LastChanges",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[MegreLatest]"
						},
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "check",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "MergeLatest",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select * from reporttarget"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"kvurl": {
						"type": "String",
						"defaultValue": "https://synapseakv.vault.azure.net/"
					}
				},
				"folder": {
					"name": "Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:17Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/vDeltaTarget')]",
				"[concat(variables('workspaceId'), '/datasets/LoaderXLTarget')]",
				"[concat(variables('workspaceId'), '/notebooks/Delta-Changes')]",
				"[concat(variables('workspaceId'), '/bigDataPools/threetwo')]",
				"[concat(variables('workspaceId'), '/datasets/vDeltaLastChanges')]",
				"[concat(variables('workspaceId'), '/datasets/LoaderXLLastChanges')]",
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapseLoaderXL')]",
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-FromScratch')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Reset-delete",
						"description": "clear tables",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "delete from target;\ndelete from reporttarget;\ndelete from lastchanges;"
								}
							]
						}
					},
					{
						"name": "DeltaTarget-NewAPI",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "Reset-delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Delta-FromScratch",
								"type": "NotebookReference"
							},
							"snapshot": true,
							"sparkPool": {
								"referenceName": "threetwo",
								"type": "BigDataPoolReference"
							},
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					},
					{
						"name": "FoldTarget",
						"description": "ctas to hash for merge",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "DeltaTarget-NewAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "if object_id('reporttarget') is not null drop table [reporttarget];\n\n  --ctas to hash for merge\ncreate table [reporttarget]\n    with (\n        distribution = hash([key]),\n        clustered columnstore index\n    ) as select * from [target];\n"
								}
							]
						}
					},
					{
						"name": "check",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "FoldTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select * from reporttarget"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T04:49:35Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapseLoaderXL')]",
				"[concat(variables('workspaceId'), '/notebooks/Delta-FromScratch')]",
				"[concat(variables('workspaceId'), '/bigDataPools/threetwo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-ReadLog-ADB')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ReadDeltaLog",
						"description": "",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Get Key from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get ConnectionString from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hiramfleitas@microsoft.com/hiramdatabricks/Includes/DeltaChanges",
							"baseParameters": {
								"accountName": "wplushiramsynapseadlsv2",
								"accountKey": {
									"value": "@string(activity('Get Key from AKV').output.value)",
									"type": "Expression"
								},
								"containerName": "wplushiramsynapsefs",
								"jdbcConnectionString": {
									"value": "@string(activity('Get ConnectionString from AKV').output.value)",
									"type": "Expression"
								},
								"deltaPath": "synapse/workspaces/wplushiramsynapse/warehouse/lastchanges"
							}
						},
						"linkedServiceName": {
							"referenceName": "adbhf",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Key from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/accountkey/?api-version=7.0')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get ConnectionString from AKV",
						"description": "jdbc",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/ConnectionString/?api-version=7.0')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "MergeLatest",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ReadDeltaLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[MegreLatest]"
						},
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"KeyVaultDNSName": {
						"type": "string",
						"defaultValue": "https://synapseakv.vault.azure.net/"
					}
				},
				"variables": {
					"KeyVaultDNSName": {
						"type": "String",
						"defaultValue": "https://synapseakv.vault.azure.net/"
					}
				},
				"folder": {
					"name": "Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T04:43:03Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adbhf')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapseLoaderXL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-ReadLog')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Key from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(variables('kvurl'),'secrets/accountkey/?api-version=7.0')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get ConnectionString from AKV",
						"description": "jdbc",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(variables('kvurl'),'secrets/ConnectionString/?api-version=7.0')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Delta-ReadLog",
						"description": "Includes CDC",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "Get ConnectionString from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Key from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Delta-ReadLog",
								"type": "NotebookReference"
							},
							"parameters": {
								"accountName": {
									"value": "wplushiramsynapseadlsv2",
									"type": "string"
								},
								"accountKey": {
									"value": {
										"value": "@string(activity('Get Key from AKV').output.value)",
										"type": "Expression"
									},
									"type": "string"
								},
								"containerName": {
									"value": "wplushiramsynapsefs",
									"type": "string"
								},
								"deltaPath": {
									"value": "synapse/workspaces/wplushiramsynapse/warehouse/lastchanges",
									"type": "string"
								}
							},
							"snapshot": true,
							"sparkPool": {
								"referenceName": "threetwo",
								"type": "BigDataPoolReference"
							},
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					},
					{
						"name": "MergeLatest",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Delta-ReadLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[MegreLatest]"
						},
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "check",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "MergeLatest",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "wplushiramsynapseLoaderXL",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select * from reporttarget"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"kvurl": {
						"type": "String",
						"defaultValue": "https://synapseakv.vault.azure.net/"
					}
				},
				"folder": {
					"name": "Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:20Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/notebooks/Delta-ReadLog')]",
				"[concat(variables('workspaceId'), '/bigDataPools/threetwo')]",
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapseLoaderXL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DevOpsCICD')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "ExposureControl",
				"activities": [
					{
						"name": "FeatureFlag",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.environment, 'disabled')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"environment": {
						"type": "string",
						"defaultValue": "dev"
					}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/E2E_MLFLOW_Sklearn_ADLS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "E2E_MLFLOW_Sklearn_ADLS",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "E2E_MLFLOW_Sklearn_ADLS",
								"type": "NotebookReference"
							},
							"snapshot": true,
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:28Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/E2E_MLFLOW_Sklearn_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GetLabFilesFromHTTP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "HTTPtoBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HTTPLabFilesZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blobLabFilesZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "M01L05Lab01"
				},
				"annotations": [
					"Workshop"
				],
				"lastPublishTime": "2022-03-22T22:23:44Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/HTTPLabFilesZip')]",
				"[concat(variables('workspaceId'), '/datasets/blobLabFilesZip')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MoveUnzippedFiles')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@pipeline().parameters.hiram",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"hiram": {
						"type": "string",
						"defaultValue": "select 10 as wait"
					}
				},
				"folder": {
					"name": "M01L05Lab01"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-22T22:16:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Params')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Params",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Params",
								"type": "NotebookReference"
							},
							"parameters": {
								"p1": {
									"value": {
										"value": "@pipeline().parameters.p1",
										"type": "Expression"
									},
									"type": "int"
								}
							},
							"snapshot": true,
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"p1": {
						"type": "int",
						"defaultValue": 3
					}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:33Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/Params')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Primer')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "IfPausedThenOnline",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals('Online',string(activity('GetStatus').output.properties.status)))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Resume",
									"description": "Start",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Sql/servers/',pipeline().parameters.Server,'/databases/',pipeline().parameters.DW,'/resume?api-version=2018-06-01-preview')",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@string('')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.core.windows.net/"
										}
									}
								},
								{
									"name": "ScaleAPI",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Resume",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Sql/servers/',pipeline().parameters.Server,'/databases/',pipeline().parameters.DW,'?api-version=2018-06-01-preview')",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@concat('{\"location\":\"eastus2\",\"sku\":{\"name\": \"',pipeline().parameters.SLO,'\"}}')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.core.windows.net/"
										}
									}
								}
							]
						}
					},
					{
						"name": "GetStatus",
						"description": "Start",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Sql/servers/',pipeline().parameters.Server,'/databases/',pipeline().parameters.DW,'?api-version=2018-06-01-preview')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"value": "@string('')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.core.windows.net/"
							}
						}
					},
					{
						"name": "UntilOnline",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "IfPausedThenOnline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals('Online',string(activity('GetStatusOnline').output.properties.status))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetStatusOnline",
									"description": "Start",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Sql/servers/',pipeline().parameters.Server,'/databases/',pipeline().parameters.DW,'?api-version=2018-06-01-preview')",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {},
										"body": {
											"value": "@string('')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.core.windows.net/"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "execTrollhunters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UntilOnline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delta-Changes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "IfOnlinePause",
						"description": "Sacle down and Pause",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetStatusEnd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals('Online',string(activity('GetStatusEnd').output.properties.status))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ScaleWebhook",
									"description": "",
									"type": "WebHook",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"url": "https://s1events.azure-automation.net/webhooks?token=EnUcmPAqjmhXx7uKcLIj%2bN%2fNkzod6WPU6CaGc%2bhaPQI%3d",
										"method": "POST",
										"headers": {},
										"body": {
											"WebhookName": "scaledw"
										},
										"timeout": "00:10:00"
									}
								},
								{
									"name": "Pause",
									"description": "Pause",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "ScaleWebhook",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Sql/servers/',pipeline().parameters.Server,'/databases/',pipeline().parameters.DW,'/pause?api-version=2018-06-01-preview')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@string('')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.core.windows.net/"
										}
									}
								}
							]
						}
					},
					{
						"name": "GetStatusEnd",
						"description": "Start",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "execTrollhunters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Sql/servers/',pipeline().parameters.Server,'/databases/',pipeline().parameters.DW,'?api-version=2018-06-01-preview')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"value": "@string('')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.core.windows.net/"
							}
						}
					},
					{
						"name": "Notify",
						"description": "",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "execTrollhunters",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.eastus2.logic.azure.com:443/workflows/a3b71278fcd74578912de49da8f0cc41/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=hDohhaBVFqS07vlHEOhum2ZLvhUnvyi1u9oqKBO5fRc",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-type": "application/json"
							},
							"body": {
								"value": "@concat('{\n   \"DataFactoryName\": \"',pipeline().DataFactory,'\",\n   \"PipelineName\": \"',pipeline().Pipeline,'\",\n   \"Subject\": \"An error has occurred!\",\n   \"ErrorMessage\": \"The ADF pipeline failed. Please check the activity log.\",\n   \"EmailTo\": \"',pipeline().parameters.Notify,'\"\n}')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SubscriptionID": {
						"type": "string",
						"defaultValue": "eaab21d5-8ecd-4ef0-a0c4-92fac2e22875"
					},
					"ResourceGroup": {
						"type": "string",
						"defaultValue": "dw"
					},
					"Server": {
						"type": "string",
						"defaultValue": "hiramdw"
					},
					"DW": {
						"type": "string",
						"defaultValue": "dw"
					},
					"SLO": {
						"type": "string",
						"defaultValue": "DW1000c"
					},
					"Notify": {
						"type": "string",
						"defaultValue": "hiramfleitas@microsoft.com"
					}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:51Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/pipelines/Delta-Changes')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UnzipLabFiles')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "UnzipLabFiles",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "blobLabFilesZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "bloblUnzipLabFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "M01L05Lab01"
				},
				"annotations": [
					"workshop"
				],
				"lastPublishTime": "2022-03-22T22:23:01Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/blobLabFilesZip')]",
				"[concat(variables('workspaceId'), '/datasets/bloblUnzipLabFiles')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copy')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LengthOfStay_cooked_small",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "copyLoS2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-10T14:39:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/LengthOfStay_cooked_small')]",
				"[concat(variables('workspaceId'), '/datasets/copyLoS2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dominicks_oj_train-RegressionOnnx')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dominicks_oj_train-RegressionOnnx",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "dominicks_oj_train-RegressionOnnx",
								"type": "NotebookReference"
							},
							"snapshot": true,
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/dominicks_oj_train-RegressionOnnx')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparkjob')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "wordcount",
						"type": "SparkJob",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"sparkJob": {
								"referenceName": "wordcount",
								"type": "SparkJobDefinitionReference"
							},
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					},
					{
						"name": "helloworld",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "wordcount",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "helloworld",
								"type": "NotebookReference"
							},
							"snapshot": true,
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					},
					{
						"name": "Copy Result",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "wordcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "result",
									"wildcardFileName": "part-*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "resultwordcounttxt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "resultwordcountparquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sparkJobDefinitions/wordcount')]",
				"[concat(variables('workspaceId'), '/notebooks/helloworld')]",
				"[concat(variables('workspaceId'), '/datasets/resultwordcounttxt')]",
				"[concat(variables('workspaceId'), '/datasets/resultwordcountparquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wait')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 15
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"test": {
						"type": "string",
						"defaultValue": "SELECT PATINDEX('%schools%', 'W3Schools.com');"
					}
				},
				"folder": {
					"name": "_adhoc"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-23T05:25:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapseLoaderXL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": "orcsample"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapseLoaderXL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Binary1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000",
						"folderPath": "result",
						"fileSystem": "wplushiramsynapsefs"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "resultcsv",
						"fileSystem": "wplushiramsynapsefs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_nuj')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "03.02",
						"fileSystem": "dwtemp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTTPLabFilesZip')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LabFilesZip",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LabFilesZip')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HolCSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "user/trusted-service-user/hol.csv",
						"fileSystem": "wplushiramsynapsefs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LastChanges')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "lastchanges"
				},
				"sqlPool": {
					"referenceName": "wplussynapsedw",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/wplussynapsedw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LengthOfStay_cooked_small')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "LengthOfStay_cooked_small.csv",
						"fileSystem": "wplushiramsynapsefs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "hematocrit",
						"type": "String"
					},
					{
						"name": "neutrophils",
						"type": "String"
					},
					{
						"name": "sodium",
						"type": "String"
					},
					{
						"name": "glucose",
						"type": "String"
					},
					{
						"name": "bloodureanitro",
						"type": "String"
					},
					{
						"name": "creatinine",
						"type": "String"
					},
					{
						"name": "bmi",
						"type": "String"
					},
					{
						"name": "pulse",
						"type": "String"
					},
					{
						"name": "respiration",
						"type": "String"
					},
					{
						"name": "number_of_issues",
						"type": "String"
					},
					{
						"name": "asthma",
						"type": "String"
					},
					{
						"name": "depress",
						"type": "String"
					},
					{
						"name": "dialysisrenalendstage",
						"type": "String"
					},
					{
						"name": "fibrosisandother",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "hemo",
						"type": "String"
					},
					{
						"name": "irondef",
						"type": "String"
					},
					{
						"name": "malnutrition",
						"type": "String"
					},
					{
						"name": "pneum",
						"type": "String"
					},
					{
						"name": "psychologicaldisordermajor",
						"type": "String"
					},
					{
						"name": "psychother",
						"type": "String"
					},
					{
						"name": "secondarydiagnosisnonicd9",
						"type": "String"
					},
					{
						"name": "substancedependence",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "lengthofstay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoaderXLLastChanges')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapseLoaderXL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "varchar"
					},
					{
						"name": "time",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "newValue",
						"type": "varchar"
					},
					{
						"name": "deleted",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "lastchanges"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapseLoaderXL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoaderXLTarget')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapseLoaderXL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "varchar"
					},
					{
						"name": "value",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportTarget"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapseLoaderXL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrcSample')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": "orcsample"
				},
				"sqlPool": {
					"referenceName": "wplussynapsedw",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/wplussynapsedw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Orc_Sample')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Orc",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*.*",
						"folderPath": "orc_sample",
						"fileSystem": "wplushiramsynapsefs"
					},
					"enablePhysicalSchema": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PublicDataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PublicDataset",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime-data-2016",
						"container": "training"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/PublicDataset')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_nuj')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PublicDataset",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "crime-data-2016",
						"container": "training"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/PublicDataset')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Target')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Target"
				},
				"sqlPool": {
					"referenceName": "wplussynapsedw",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/wplussynapsedw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/blobLabFilesZip')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "LabFiles.zip",
						"fileSystem": "wplushiramsynapsefs"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bloblUnzipLabFiles')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "nyctaxistaging"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copyLoS2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "dwtemp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dominicks_oj_train')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dominicks_OJ_train.csv",
						"fileSystem": "wplushiramsynapsefs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WeekStarting",
						"type": "String"
					},
					{
						"name": "Store",
						"type": "String"
					},
					{
						"name": "Brand",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Advert",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "Age60",
						"type": "String"
					},
					{
						"name": "COLLEGE",
						"type": "String"
					},
					{
						"name": "INCOME",
						"type": "String"
					},
					{
						"name": "Hincome150",
						"type": "String"
					},
					{
						"name": "Large HH",
						"type": "String"
					},
					{
						"name": "Minorities",
						"type": "String"
					},
					{
						"name": "WorkingWoman",
						"type": "String"
					},
					{
						"name": "SSTRDIST",
						"type": "String"
					},
					{
						"name": "SSTRVOL",
						"type": "String"
					},
					{
						"name": "CPDIST5",
						"type": "String"
					},
					{
						"name": "CPWVOL5",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/freeadx')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "freeadx",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [],
				"typeProperties": {
					"table": "LengthOfStay_cooked_small"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/freeadx')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/moviesCSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PublicDataset",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "moviesDB.csv",
						"folderPath": "SampleData",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "RottenTomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/PublicDataset')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/resultwordcountparquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "@concat('resultparquet_', string(utcnow()))",
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "resultparquet",
						"fileSystem": "wplushiramsynapsefs"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/resultwordcounttxt')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wplushiramsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "result",
						"fileSystem": "wplushiramsynapsefs"
					},
					"columnDelimiter": "$",
					"escapeChar": "$",
					"quoteChar": "'"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wplushiramsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vDeltaLastChanges')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLOnDemand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "vDeltaLastChanges"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQLOnDemand')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vDeltaTarget')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLOnDemand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "vDeltaTarget"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQLOnDemand')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LabFilesZip')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LabFilesZip_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LaptopFact')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LaptopFact_properties_typeProperties_host')]",
					"userId": "[parameters('LaptopFact_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LaptopFact_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PublicDataset')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('PublicDataset_sasUri')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLOnDemand')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLOnDemand_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adbhf')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1962311870977623.3.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('adbhf_accessToken')]"
					},
					"existingClusterId": "0910-004205-suede164"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/freeadx')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "https://kvc43f0ee6600e24ef2b0e.southcentralus.kusto.windows.net",
					"database": "[parameters('freeadx_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/iotmonitoringsa10774')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('iotmonitoringsa10774_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/nyctaxistaging')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('nyctaxistaging_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/powerapps')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('powerapps_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqldbedgeoulvzyml')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('sqldbedgeoulvzyml_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('sqldbedgeoulvzyml_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "sqldbedgeoulvzyml",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wplushiramsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('wplushiramsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wplushiramsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('wplushiramsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wplushiramsynapseLoaderXL')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('wplushiramsynapseLoaderXL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Daily')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MoveUnzippedFiles",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "DevOpsCICD",
							"type": "PipelineReference"
						},
						"parameters": {
							"environment": "[parameters('Daily_properties_DevOpsCICD_parameters_environment')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-07-22T19:58:00Z",
						"endTime": "2021-07-23T19:58:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/MoveUnzippedFiles')]",
				"[concat(variables('workspaceId'), '/pipelines/DevOpsCICD')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Hourly')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2021-09-02T15:00:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Last Day of Month')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "wait",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 15,
						"startTime": "2021-07-01T18:53:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								58
							],
							"hours": [
								8
							],
							"monthDays": [
								-1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntime1')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Laptop')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Self-hosted')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AddSam')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create user [samerc@microsoft.com] from EXTERNAL PROVIDER ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "samdemo",
						"poolName": "samdemo"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyIntoDevs')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = 'devs' AND O.TYPE = 'U' AND S.NAME = 'dbo')\nCREATE TABLE dbo.devs\n\t(\n\t [C1] nvarchar(4000),\n\t [C2] nvarchar(4000)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_devs\n--AS\n--BEGIN\nCOPY INTO dbo.devs\n(C1 1, C2 2)\nFROM 'https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/devs.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,ERRORFILE = 'https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM dbo.devs\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Create external table with SQL')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "/* Note: this script is filtered on a specific month. You can modify the location to read the entire dataset. */\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat')\n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat]\n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'nyctlc_azureopendatastorage_blob_core_windows_net')\n\tCREATE EXTERNAL DATA SOURCE [nyctlc_azureopendatastorage_blob_core_windows_net]\n\tWITH (\n\t\tLOCATION = 'wasbs://nyctlc@azureopendatastorage.blob.core.windows.net',\n\t\tTYPE     = HADOOP\n\t)\nGO\n\nCREATE EXTERNAL TABLE nyc_tlc_yellow_trip_ext (\n\t[vendorID] varchar(8000),\n\t[tpepPickupDateTime] datetime2(7),\n\t[tpepDropoffDateTime] datetime2(7),\n\t[passengerCount] int,\n\t[tripDistance] float,\n\t[puLocationId] varchar(8000),\n\t[doLocationId] varchar(8000),\n\t[startLon] float,\n\t[startLat] float,\n\t[endLon] float,\n\t[endLat] float,\n\t[rateCodeId] int,\n\t[storeAndFwdFlag] varchar(8000),\n\t[paymentType] varchar(8000),\n\t[fareAmount] float,\n\t[extra] float,\n\t[mtaTax] float,\n\t[improvementSurcharge] varchar(8000),\n\t[tipAmount] float,\n\t[tollsAmount] float,\n\t[totalAmount] float\n\t)\n\tWITH (\n    LOCATION = 'yellow/puYear=2014/puMonth=3/',\n    -- LOCATION = 'yellow'\n\tDATA_SOURCE = [nyctlc_azureopendatastorage_blob_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat],\n\tREJECT_TYPE = VALUE,\n\tREJECT_VALUE = 0\n\t)\nGO\n\nSELECT TOP 100 * FROM nyc_tlc_yellow_trip_ext\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateLogins')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "M01L05Lab01"
				},
				"content": {
					"query": "--use master \nCREATE LOGIN DWLoader WITH PASSWORD = 'Str0ng_password';\nCREATE LOGIN dwloaderrc10 WITH PASSWORD = 'Str0ng_password';\n\nCREATE USER DWLoader FOR LOGIN DWLoader;\nCREATE USER dwloaderrc10 FOR LOGIN dwloaderrc10;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateUser')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "M01L05Lab01"
				},
				"content": {
					"query": "--use wplussynapsedw\nCREATE USER DWLoader FOR LOGIN DWLoader;\nCREATE USER dwloaderrc10 FOR LOGIN dwloaderrc10;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dateformats')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- string to date\nif object_id('dateformats') is not null drop table dateformats \ngo\n\ncreate table dateformats (\n    id int,\n    createdate varchar(120)\n) with \n(\n    distribution = round_robin,\n    clustered columnstore index\n)\ngo \n\ninsert into dateformats\nselect 1, getutcdate() --implicit \n\nselect * from dateformats\n\nselect convert(datetime,createdate,126) from dateformats\n\n-- back to string\nif object_id('dateformats2') is not null drop table dateformats2 \n\ncreate table dateformats2 with \n(\n    distribution = round_robin,\n    clustered columnstore index\n) as \nselect 1 as id , getutcdate() as createdate\n\nselect convert(varchar(120),createdate,126) from dateformats2\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaDropTarget')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"content": {
					"query": "--  1. DeltaDropTarget\nif object_id('DeltaDropTarget') is not null drop proc DeltaDropTarget\ngo \ncreate proc DeltaDropTarget\nas \n    if object_id('target') is not null\n    begin\n        drop table target\n    end \ngo\n\n-- 2. DeltaDropLastChanges\nif object_id('DeltaDropLastChanges') is not null drop proc DeltaDropLastChanges\ngo \ncreate proc DeltaDropLastChanges\nas \n    if object_id('LastChanges') is not null\n    begin\n        drop table LastChanges\n    end \ngo\n\n--3. ShakeNBake\nif object_id('ShakeNBake') is not null drop proc ShakeNBake\ngo \ncreate proc ShakeNBake\nas \n    -- rename object target2hash TO ReportTarget;\n    \n    --ctas to merge\n    if object_id('target2hash') is not null drop table [target2hash];\n    create table [target2hash]\n    with (\n        distribution = hash([key]),\n        clustered columnstore index\n    ) as select * from [target];\n\n    --merge\n    merge into [target2hash] as t\n    using (select * from [lastchanges]) as lc ([key], [time], [newvalue], [deleted])\n    on lc.[key] = t.[key]\n    when matched and lc.[deleted] = 1 \n        then delete\n    when matched\n        then update set t.[key] = lc.[key], t.[value] = lc.[newValue]\n    when not matched and lc.[deleted] = 0 \n        then insert ([key], [value]) values(lc.[key], lc.[newValue]);\n\n    --rename\n    if object_id('ReportTarget') is not null drop table [ReportTarget];\n    rename object target2hash TO ReportTarget;\ngo",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaSQLPoolMerge')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"content": {
					"query": "-- Merge statements with a WHEN NOT MATCHED [BY TARGET] clause must target a hash distributed table.\n\nif object_id('target2hash') is not null drop table [target2hash];\n\ncreate table [target2hash]\nwith (\n    distribution = hash([key]),\n    clustered columnstore index\n)\nas\nselect * from [target]\ngo \n\nmerge into [target2hash] as t\nusing (select * from [lastchanges]) as lc ([key], [time], [newvalue], [deleted])\non lc.[key] = t.[key]\nwhen matched and lc.[deleted] = 1 \n    then delete\nwhen matched\n    then update set t.[key] = lc.[key], t.[value] = lc.[newValue]\nwhen not matched and lc.[deleted] = 0 \n    then insert ([key], [value]) values(lc.[key], lc.[newValue]);\n\nselect * from target2hash;\n\n-- remarks: https://docs.microsoft.com/en-us/sql/t-sql/statements/merge-transact-sql?view=azure-sqldw-latest#remarks",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaSrvlessViews')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"content": {
					"query": "create credential [https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs] \nwith \n    identity = 'Managed Identity'\ngo \n\nselect * from sys.credentials;\ngo\n\ndrop view if exists vDeltaTarget;\ngo\ncreate view vDeltaTarget\nas\nSELECT [key], [value]\nFROM OPENROWSET(\n    BULK 'abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/synapse/workspaces/wplushiramsynapse/warehouse/target',\n    FORMAT = 'delta') as rows\ngo\n\ndrop view if exists vDeltaLastChanges;\ngo\ncreate view vDeltaLastChanges\nas\nSELECT [key], [time], [newvalue], [deleted]\nFROM OPENROWSET(\n    BULK 'abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/synapse/workspaces/wplushiramsynapse/warehouse/lastchanges',\n    FORMAT = 'delta') as rows \ngo\n\nselect * from vDeltaTarget\nselect * from vDeltaLastChanges\n\n/*\n{\n    \"errorCode\": \"2200\",\n    \"message\": \"Failure happened on 'Source' side. ErrorCode=SqlOperationFailed,\n    'Type=Microsoft.DataTransfer.Common.Shared.HybridDeliveryException,\n    Message=A database operation failed with the following error: 'Invalid column name 'value'.',\n    Source=,''Type=System.Data.SqlClient.SqlException,Message=Invalid column name 'value'.,\n    Source=.Net SqlClient Data Provider,SqlErrorNumber=207,Class=16,ErrorCode=-2146232060,State=1,Errors=[{Class=16,Number=207,State=1,Message=Invalid column name 'value'.,},],'\",\n    \"failureType\": \"UserError\",\n    \"target\": \"LastChanges\",\n    \"details\": []\n}\n\n{\n    \"errorCode\": \"2200\",\n    \"message\": \"Failure happened on 'Source' side. ErrorCode=SqlOperationFailed,\n    'Type=Microsoft.DataTransfer.Common.Shared.HybridDeliveryException,\n    Message=A database operation failed with the following error: 'Invalid column name 'value'.',\n    Source=,''Type=System.Data.SqlClient.SqlException,Message=Invalid column name 'value'.,\n    Source=.Net SqlClient Data Provider,SqlErrorNumber=207,Class=16,ErrorCode=-2146232060,State=1,\n    Errors=[{Class=16,Number=207,State=1,Message=Invalid column name 'value'.,},],'\",\n    \"failureType\": \"UserError\",\n    \"target\": \"LastChanges\",\n    \"details\": []\n}\n*/",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "hiram",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ExternalStuff')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create database scoped credential wplushiramsynapsefs_cred\nwith \n     identity = 'wplushiramsynapseadlsv2', \n     secret = '' --my storage key, sas not needed\ngo \n\n-- if behind private endpoint, in order to auth FW need to use Service Idendity. Using the key wont work.\n\ncreate database scoped credential msi_cred\nwith \n     identity = 'Managed Identity' -- same as 'Managed Service Identity'\ngo \n\ndrop external data source wplushiramsynapsefs\ngo \n\ncreate external data source wplushiramsynapsefs\nwith (    \n    location = 'abfs://wplushiramsynapsefs@wplushiramsynapseadlsv2.blob.core.windows.net/',\n    credential = msi_cred,\n    type = HADOOP\n)\n\n-- Ref: abfs recommened for big data workloads & adls gen2.\n-- https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction#key-features-of-data-lake-storage-gen2\n\ndrop external file format skipHeader_CSV\ngo \n\ncreate external file format skipHeader_CSV\nwith (FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS(\n          FIELD_TERMINATOR = ',',\n          STRING_DELIMITER = '\"',\n          FIRST_ROW = 2, \n          USE_TYPE_DEFAULT = True)\n)\n\nif object_id('extDevs') is not null drop external table extDevs\ngo \n\nCREATE EXTERNAL TABLE extDevs (\n    [first] varchar(50),\n    [last] varchar(50)\n)  \nWITH (\n    LOCATION = 'devs.csv',\n    DATA_SOURCE = wplushiramsynapsefs,  \n    FILE_FORMAT = skipHeader_CSV\n)\nGO\n\nSELECT TOP 10 * FROM extDevs",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GetRowCounts')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "dw not supported",
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "if object_id('GetRowCounts') is not null drop proc GetRowCounts;\ngo \n\ncreate proc GetRowCounts --'SRUSSegmentedPolicyRecords_Final2017Revised, HLRSegmentedPolicyRecords_Final2017Revised, BrockSegmentedPolicyRecords_Final2017Revised'\n    @tables nvarchar(max)\nas \nset nocount on;\n    \n    declare @sql nvarchar(max), @cnt int, @cnt2 int, @name nvarchar(128);\n\n    if object_id('tempdb.dbo.#t') is not null drop table #t\n    create table #t (\n        name        nvarchar(128),\n        rows        char(20),\n        reserved    varchar(18),\n        data        varchar(18),\n        index_size  varchar(18),\n        unused      varchar(18)\n    );\n\n    if object_id('tempdb.dbo.#tables') is not null drop table #tables\n    create table #tables (\n        name        nvarchar(128)\n    );\n    insert into #tables (name) select trim(value) from string_split(@tables,',');\n    \n    select @cnt = count(*) from information_schema.tables where table_name in (select name from #tables);\n    select @cnt2 = count(*) from #t;\n   \n    while @cnt>@cnt2\n    begin\n        select  top 1 @sql='insert into #t exec sp_spaceused '''+table_name+'''', @name=table_name\n        from    information_schema.tables \n        where   table_name in (select top 1 name from #tables);\n        \n        exec sp_executesql @sql; --print @sql;\n        \n        delete from #tables where name = @name;\n        select  @cnt2 = count(*) from #t;\n    end\n    select * from #t\ngo\n\nexec GetRowCounts 'reporttarget'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoaderXL')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "--dw master\n\nif exists (select 1 from sys.sql_logins where name='LoaderXL') drop login LoaderXL;\ncreate login LoaderXL with password = 'XL!sqlPools2021'\nalter login LoaderXL enable\ngo \ndrop user LoaderXL;\ngo\ncreate user LoaderXL for login LoaderXL\nalter role dbmanager add member LoaderXL\n\n-- use hiramdw\ndrop user LoaderXL;\ncreate user LoaderXL for login LoaderXL\ngo\nexec sp_addrolemember db_owner, LoaderXL;\nEXEC sp_addrolemember 'xlargerc', 'LoaderXL'\n\ngrant view definition to public;\ngrant showplan to LoaderXL;\ngrant connect to LoaderXL\ngo ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MegreLatest')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"content": {
					"query": "if object_id('MegreLatest') is not null drop proc [dbo].[MegreLatest]\ngo \n\ncreate proc [dbo].[MegreLatest] \nas \n\n    merge into [ReportTarget] as t\n    using (select * from [lastchanges]) as lc ([key], [time], [newvalue], [deleted])\n    on lc.[key] = t.[key]\n    when matched and lc.[deleted] = 1 \n        then delete\n    when matched\n        then update set t.[key] = lc.[key], t.[value] = lc.[newValue]\n    when not matched and lc.[deleted] = 0 \n        then insert ([key], [value]) values(lc.[key], lc.[newValue]);\n\ngo ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PDWBackups')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "select   *\nfrom     sys.pdw_loader_backup_runs\norder by run_id desc\n;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/QueryActivity')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "if object_id('QueryActivity') is not null drop proc QueryActivity;\ngo\ncreate proc [dbo].[QueryActivity] AS \n-- + -------------- +\n-- | Query Activity |\n-- + -------------- +\nwith cte as (\n    select      top 100\n                request_id, \n                status, \n                total_elapsed_time/60000 as TotalElapsedMinutes, \n                resource_class, \n                importance\n    from        sys.dm_pdw_exec_requests \n    where       status not in ('Completed','Failed','Cancelled','Suspended')\n                -- and request_id in ('QID3187802','QID3188080')\n    and         session_id <> session_id()\n    order by    submit_time desc\n)\nselect      es.app_name,\n            rs.request_id, \n            rs.step_index, \n            rs.operation_type, \n            rs.distribution_type, \n            rs.location_type, \n            rs.status, \n            rs.error_id, \n            rs.start_time, \n            rs.end_time, \n            case when rs.end_time is not null then cast(rs.end_time - rs.start_time as time) end as duration, \n            rs.total_elapsed_time/60000 as TotalElapsedMinutes, \n            rs.total_elapsed_time/3600000 as TotalElapsedHours, \n            rs.row_count, \n            rs.command, \n            cte.*\nfrom        sys.dm_pdw_request_steps rs\ninner join  cte \n    on rs.request_id = cte.request_id\nleft join  sys.dm_pdw_exec_sessions es \n    on rs.request_id = es.request_id\nwhere       rs.status<>'complete'\norder by    step_index;\n\n--request_id\tstep_index\toperation_type\tdistribution_type\tlocation_type\tstatus\terror_id\tstart_time\tend_time\tduration\tTotalElapsedMinutes\tTotalElapsedHours\trow_count\tcommand\trequest_id\tstatus\tTotalElapsedMinutes\tresource_class\timportance\n--QID827319\t3\tOnOperation\tAllDistributions\tCompute\tRunning\tNULL\t2019-09-05 21:30:07.010\tNULL\tNULL\t199\t3\t-1\tINSERT INTO [sql-eastus2-int-dev-reboot-analytics_wh].[dbo].[Inforce12New] WITH (TABLOCK) ([JOIN_KEY_ACTUALS], [SourceTableName], [BLOCK], [Date_Incurred], [Date_Reported], [Date_Posted], [YRMO], [InforceQuarter], [TLID], [TLID_SecondInsd], [Treaty_Sage_ID], [Treaty_TRS_ID], [Policy_Number], [Policy_Record_Number], [Policy_Rider_Number], [Coverage_Sage_CCID], [ConversionFlag], [OriginalCCID], [OriginalCCID_2], [OriginalPolicy], [OriginalPolicy_2], [FACE], [ReinsuredFace], [NAR], [sourceTableNameInput], [sourceTableNameInputTS], [sourceFileName], [IssueAgeL1], [SmokerL1], [BusinessBlockShort], [mosesBand], [mosesSeries], [mosesClassL1], [GenderL1], [mosesPlan], [IssueDate], [FalloutType1], [Treaty_Model_ID], [Treaty_PeopleSoft_ID], [BusinessBlock], [JOIN_KEY_MODEL], [JOIN_KEY_NO_DATE], [BenefitType])SELECT [T1_1].[JOIN_KEY_ACTUALS], [T1_1].[SourceTableName], [T1_1].[BLOCK], [T1_1].[Date_Incurred], [T1_1].[Date_Reported], [T1_1].[Date_Posted], [T1_1].[YRMO], [T1_1].[InforceQuarter], [T1_1].[TLID], [T1_1].[TLID_SecondInsd], [T1_1].[Treaty_Sage_ID], [T1_1].[Treaty_TRS_ID], [T1_1].[Policy_Number], [T1_1].[Policy_Record_Number], [T1_1].[Policy_Rider_Number], [T1_1].[Coverage_Sage_CCID], [T1_1].[ConversionFlag], [T1_1].[OriginalCCID], [T1_1].[OriginalCCID_2], [T1_1].[OriginalPolicy], [T1_1].[OriginalPolicy_2], [T1_1].[FACE], [T1_1].[ReinsuredFace], [T1_1].[NAR], [T1_1].[sourceTableNameInput], [T1_1].[sourceTableNameInputTS], [T1_1].[sourceFileName], [T1_1].[IssueAgeL1], [T1_1].[SmokerL1], [T1_1].[BusinessBlockShort], [T1_1].[mosesBand], [T1_1].[mosesSeries], [T1_1].[mosesClassL1], [T1_1].[GenderL1], [T1_1].[mosesPlan], [T1_1].[IssueDate], [T1_1].[FalloutType1], [T1_1].[Treaty_Model_ID], [T1_1].[col], [T1_1].[BusinessBlock], [T1_1].[JOIN_KEY_MODEL], [T1_1].[JOIN_KEY_NO_DATE], [T1_1].[BenefitType] FROM (SELECT CASE WHEN ([T2_1].[Treaty_PeopleSoft_ID] LIKE CAST (N'HA%' COLLATE SQL_Latin1_General_CP1_CI_AS AS VARCHAR (3)) COLLATE SQL_Latin1_General_CP1_CI_AS) THEN concat([T2_1].[Treaty_PeopleSoft_ID], CAST (N'-001' COLLATE SQL_Latin1_General_CP1_CI_AS AS VARCHAR (4)) COLLATE SQL_Latin1_General_CP1_CI_AS) ELSE [T2_1].[Treaty_PeopleSoft_ID]END AS [col], [T2_1].[JOIN_KEY_ACTUALS] AS [JOIN_KEY_ACTUALS], [T2_1].[SourceTableName] AS [SourceTableName], [T2_1].[BLOCK] AS [BLOCK], [T2_1].[Date_Incurred] AS [Date_Incurred], [T2_1].[Date_Reported] AS [Date_Reported], [T2_1].[Date_Posted] AS [Date_Posted], [T2_1].[YRMO] AS [YRMO], [T2_1].[InforceQuarter] AS [InforceQuarter], [T2_1].[TLID] AS [TLID], [T2_1].[TLID_SecondInsd] AS [TLID_SecondInsd], [T2_1].[Treaty_Sage_ID] AS [Treaty_Sage_ID], [T2_1].[Treaty_TRS_ID] AS [Treaty_TRS_ID], [T2_1].[Policy_Number] AS [Policy_Number], [T2_1].[Policy_Record_Number] AS [Policy_Record_Number], [T2_1].[Policy_Rider_Number] AS [Policy_Rider_Number], [T2_1].[Coverage_Sage_CCID] AS [Coverage_Sage_CCID], [T2_1].[ConversionFlag] AS [ConversionFlag], [T2_1].[OriginalCCID] AS [OriginalCCID], [T2_1].[OriginalCCID_2] AS [OriginalCCID_2], [T2_1].[OriginalPolicy] AS [OriginalPolicy], [T2_1].[OriginalPolicy_2] AS [OriginalPolicy_2], [T2_1].[FACE] AS [FACE], [T2_1].[ReinsuredFace] AS [ReinsuredFace], [T2_1].[NAR] AS [NAR], [T2_1].[sourceTableNameInput] AS [sourceTableNameInput], [T2_1].[sourceTableNameInputTS] AS [sourceTableNameInputTS], [T2_1].[sourceFileName] AS [sourceFileName], [T2_1].[IssueAgeL1] AS [IssueAgeL1], [T2_1].[SmokerL1] AS [SmokerL1], [T2_1].[BusinessBlockShort] AS [BusinessBlockShort], [T2_1].[mosesBand] AS [mosesBand], [T2_1].[mosesSeries] AS [mosesSeries], [T2_1].[mosesClassL1] AS [mosesClassL1], [T2_1].[GenderL1] AS [GenderL1], [T2_1].[mosesPlan] AS [mosesPlan], [T2_1].[IssueDate] AS [IssueDate], [T2_1].[FalloutType1] AS [FalloutType1], [T2_1].[Treaty_Model_ID] AS [Treaty_Model_ID], [T2_1].[BusinessBlock] AS [BusinessBlock], [T2_1].[JOIN_KEY_MODEL] AS [JOIN_KEY_MODEL], [T2_1].[JOIN_KEY_NO_DATE] AS [JOIN_KEY_NO_DATE], [T2_1].[BenefitType] AS [BenefitType] FROM [sql-eastus2-int-dev-reboot-analytics_w\tQID827319\tRunning\t199\txlargerc\tnormal\n/*\nSELECT * FROM sys.dm_pdw_sql_requests WHERE request_id = 'QID891260' AND status <>'Complete' -- and step_index = 3;\nDBCC PDW_SHOWEXECUTIONPLAN(57, 192);\nSELECT 'DBCC PDW_SHOWEXECUTIONPLAN(',distribution_id,',',spid,')' FROM sys.dm_pdw_sql_requests WHERE request_id = 'QID891260' AND step_index = 3;\n\ndbcc pdw_showspaceused(ctasSuperTableSum)\ndbcc pdw_showspaceused(mapTreatyTermsReplicate)\n*/\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Reset')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"content": {
					"query": "--reset table\nselect * from [target]\ngo \ninsert [target] values('a','0')\ninsert [target] values('b','1')\ninsert [target] values('c','2')\ninsert [target] values('d','3')\ngo  \nselect * from [target];\n\n--set target back to post merged 3rd changes.\ndelete from [target]; \ngo \ninsert [target] values('d','3')\ninsert [target] values('c','200')\ngo\n\n--reset lastchanges\nselect * from lastchanges;\ndelete from [lastchanges];\ninsert [lastchanges] values ('a','1',NULL,1)\ninsert [lastchanges] values ('c','5','200',0)\ninsert [lastchanges] values ('b','2',NULL,1)\ngo\n\n--reset reporttarget\nselect * from [reporttarget];\ndelete from [reporttarget]; \ngo \ninsert [reporttarget] values('a','0')\ninsert [reporttarget] values('b','1')\ninsert [reporttarget] values('c','2')\ninsert [reporttarget] values('d','3')\ngo  \n\nexec mergelatest",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ServerlessOpenRowsetDevs')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- devs.csv\n-- first,last\n-- hiram,fleitas\n-- christina,sosa\n-- brent,carpenetti\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/devs.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0'\n    ) AS [result]\n\ngo \n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/user/trusted-service-user/hol.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0'\n    ) AS [result]\ngo",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ServerlessVersion')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "select @@servername, @@version",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ShakeNBake')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"content": {
					"query": "if object_id('ShakeNBake') is not null DROP PROCEDURE [dbo].[ShakeNBake]\nGO\n\nCREATE PROC [dbo].[ShakeNBake] AS \n    -- rename object target2hash TO ReportTarget;\n    \n    --ctas to merge\n    if object_id('target2hash') is not null drop table [target2hash];\n    create table [target2hash]\n    with (\n        distribution = hash([key]),\n        clustered columnstore index\n    ) as select * from [target];\n\n    --merge\n    merge into [target2hash] as t\n    using (select * from [lastchanges]) as lc ([key], [time], [newvalue], [deleted])\n    on lc.[key] = t.[key]\n    when matched and lc.[deleted] = 1 \n        then delete\n    when matched\n        then update set t.[key] = lc.[key], t.[value] = lc.[newValue]\n    when not matched and lc.[deleted] = 0 \n        then insert ([key], [value]) values(lc.[key], lc.[newValue]);\n\n    --rename\n    if object_id('ReportTarget') is not null drop table [ReportTarget];\n    rename object target2hash TO ReportTarget;\n    \n\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TrollHunters')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Pixies"
				},
				"content": {
					"query": "--  Troll Hunters: http://trollhunters.wikia.com/wiki/Trollhunters_Wiki , https://en.wikipedia.org/wiki/Trollhunters\n--  :connect localhost\n--  :connect TrollHunters\n--  By: Hiram Fleitas, hiramfleitas@hotmail.com. Special thx to Andy and Dmitri.\ngo\n\n--  +------+\n--  | Lore |\n--  +------+\nif db_id(N'ᕙ༼,இܫஇ,༽ᕗ') is not null --drop/create db \nbegin\n\talter database [ᕙ༼,இܫஇ,༽ᕗ] set single_user with rollback immediate \n\tdrop database [ᕙ༼,இܫஇ,༽ᕗ] end\nelse begin \n\tcreate database [ᕙ༼,இܫஇ,༽ᕗ]\n\ton primary (name='TrollHunters',filename='C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\DATA\\TrollHunters.mdf', size=64MB, maxsize=unlimited, filegrowth=64MB) --S:\\SQLDATA\\, C:\\Program Files\\Microsoft SQL Server\\MSSQL13.MSSQLSERVER\\MSSQL\\DATA\\\n\tlog on (name='TrollHunters_log',filename='C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\DATA\\TrollHunters_log.ldf', size=8MB, filegrowth=64MB) --L:\\SQLLOGS\\, C:\\Program Files\\Microsoft SQL Server\\MSSQL13.MSSQLSERVER\\MSSQL\\DATA\\\nend\t\ngo\n\nuse [ᕙ༼,இܫஇ,༽ᕗ]\ngo \ncreate table [Character] ( \n\tCharacterId\t\tint \tnot null,\n    FullName\t\tvarchar(50)\t\t\tnot null,\n\tAffiliation\t\tvarchar(60)\t\t\tnull, \n\tCategory\t\tvarchar(10)\t\t\tnull, \n\tAka\t\t\t\tvarchar(300)\t\tnull, --*\n\t[Status]\t\tvarchar(35)\t\t\tnull,\n\tRace\t\t\tvarchar(50)\t\t\tnull,\n\tAge\t\t\t\tint\t\t\t\t\tnull,\n\tHome\t\t\tvarchar(50)\t\t\tnull,\n\tRelatives\t\tvarchar(300)\t\tnull, --*\n\tWeapons\t\t\tvarchar(100)\t\tnull, --*\n\tEyeColor\t\tvarchar(20)\t\t\tnull,\n\tHairColor\t\tvarchar(50)\t\t\tnull,\n\tMinions\t\t\tvarchar(100)\t\tnull,\n\tVoicedBy\t\tvarchar(50)\t\t\tnull)\n\tconstraint pk_Character primary key clustered (CharacterId asc));\ngo\ncreate table [Locations] ( LocationId int not null, LocationName varchar(50), CharacterId int )\n-- , constraint pk_Locations primary key clustered (LocationId asc));\n--create table Aka (AkaId int identity(1,1) not null, Aka varchar(50), CharacterId int foreign key references [Character](CharacterId), ByCharacterId int foreign key references [Character](CharacterId), constraint pk_Aka primary key clustered (AkaId asc));\n--create table Relatives (RelativeId int identity(1,1) not null, CharacterId int foreign key references [Character](CharacterId), RelativeCharacterId int foreign key references [Character](CharacterId), Relation varchar(50), constraint pk_Relative primary key clustered (RelativeId asc));\n--create table Weapons (WeaponId int identity(1,1) not null, CharacterId int foreign key references [Character](CharacterId), WeaponName varchar(50), [Type] varchar(20), Origin varchar(20), constraint pk_Weapons primary key clustered (WeaponId asc));\n--create table WeaponUser (WeaponUserId int identity(1,1) not null, CharacterId int foreign key references [Character](CharacterId), Occurrance varchar(50), Victims varchar(50), constraint pk_WeaponUser primary key clustered (WeaponUserId asc)); \ngo\ncreate table [Episode] ( \n    CharacterId\t\tint           not null,\n    FullName\t\tnvarchar(64)  not null,\n    VoicedBy\t\tnvarchar(64)  not null,\n\tBirthYear\t\tint\t\t\t  not null, \n\tCategory\t\tnvarchar(64)  not null,\n\t[Status]\t\tnvarchar(64)  not null,\n    Age\t\t\t\tint\t\t\t  not null)\n    constraint PK_Episode primary key clustered (CharacterId asc));\ngo\nset identity_insert [Character] on; --drop table [Character] \n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values \n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (1,'Jim Lake Jr.','Good','Hero','Young Atlas, Jimbo, Master Jim, Fleshbag, Jim \"Fake\" Jr., Jimmy Jam, Little Gynt','Alive','Human',16,'Arcadia Oaks','Jim Lake Sr., Barbara Lake, Claire Nuñez','Sword of Daylight, Sword of Eclipse','Blue','Black','Toby Domzalski','Anton Yelchin')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (2,'Claire Maria Nuñez','Good (cursed by overpowering the shadow staff)','Hero','C-bomb, Shadowdancer','Alive','Human',15,'Arcadia','Mr. Nuñez, Mrs. Nuñez, Baby Enrique, Jim Lake Jr.','Shadow Staff','Brown','Black with white and purple streaks','NotEnrique','Lexi Medrano')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (3,'Gunmar the Black','Evil, Gumm-Gumm Army, The Janus Order','Villain','Dark Underlord, Skullcrusher','Alive','Gumm-Gumm',null,'Darklands, Trollmarket','Bular','Decimaar Blade','Blue','Black','Otto Scaarbach, Stricklander, Nomura, Gladys, NotEnrique, Stalklings, Various Changeling Trolls','Clancy Brown')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (4,'Ararghaumont','Gunmar, Heartstone Trollmarket, Trollhunters','Hero','AAARRRGGHH!!!, Wingman','Alive','Krubera Troll',null,'Deep Caverns, Heartstone Trollmarket',null,'Fists and Strength','Green','Dark green',null,'Fred Tatasciore')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (5,'Stricklander','Gunmar, The Janus Order, Bular, Barbara Lake, Jim','Villain','Strikler, Impure, Boss man','Alive','Changeling Troll',null,'Arcadia','Walter Strickler','Knives','Green','Black','NotEnrique, Angor Rot, Antamonstrum, Gladys, Goblins, Fragwa','Jonathan Hyde')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (6,'Angor Rot',null,'Villain',null,'Deceased','Troll',null,null,'his village','Shadow Staff, Creeper Sun Blade, Sword of Daylight','Yellow, White',null,'Pixies','Ike Amadi')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (7,'Zelda Nomura','The Janus Order, Gunmar, Bular, Stricklander','Villain','Impure, Nomura','Alive','Changeling',null,'Arcadia Oaks',null,'Dual-Khopesh','Green','Black',null,'Lauren Tom')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (8,'Draal the Deadly','Good','Hero',null,'Cursed by Gunmar''s Decimer Blade','Troll',null,'Heartstone Trollmarket','Kanjigar','Fists','Yellow and Red',null,null,'Matthew Waterson')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (9,'Morgana','Herself','Villain','Argante, Lady Pale, Eldritch Queen, Baba Yaga','Alive',null,null,'Forests of the Black Sea, Bulgaria',null,'Sorcery',null,'Gray','Angor Rot','Lena Headey')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (10,'Blinkous Galadrigal','Good','Hero','Blinky','Alive','Troll',600,'Heartstone Trollmarket','Dictatious Maximus Galadrigal',null,'Brown','Blue',null,'Kelsey Grammer')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (11,'Bular','Evil','Villain','Son of Gunmar','Deceased','Gumm-Gumm',null,'Darklands','Gunmar','Sword, Horns','Orange',null,'Changeling Trolls, NotEnrique, Nomura, Otto Scaarbach, Gladys, Customs Agent, Stalkling','Ron Perlman')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (12,'Dictatious Maximus Galadrigal','Bad','Villain',null,'Alive','Troll',4999,'Trollmarket, Darklands','Blinky',null,null,null,'Draal the Deadly (possessed by Gunmar), Gumm-Gumm Warriors, Krubera Warriors','Mark Hamill')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (13,'Tobias Domzalski','Good','Hero','Tobes, Toby-Pie, Wingman, T.P., Dumbzalski','Alive','Human',15,'Arcadia','Nana, Mr. Domzalski, Mrs. Domzalski','Warhammer, Glamour Mask','Green','Brown',null,'Charlie Saxton')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (14,'Usurna','Gumm-Gumm','Villain',null,'Alive','Krubera',null,null,null,'Poison Knives',null,null,'Krubera soldiers, Krax','Anjelica Huston')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (15,'Elijah Leslie Pepperjack','Good, Creepslayerz','Hero','Eli Pepperjack','Alive','Human',15,'Arcadia',null,'Mace, shurikens, umbrellas','Green','Black',null,'Cole Sand')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (16,'Steve Palchuk','Neutral, Good, Creepslayerz, The Trollhunters','Ally',null,'Alive','Human',16,'Arcadia',null,'His fists','Brown','Light brown','Various jocks','Steven Yeun')\n\t-- http://trollhunters.wikia.com/wiki/Category:Characters?page=2\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (17,'Vendel','Good','Hero',null,'Deceased','Troll',9000,'Heartstone Trollmarket','Rundle, Kilfred','Staff','White','Grayish brown',null,'Victor Raider-Wexler')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (18,'Kanjigar the Courageous','Good','Hero',null,'Dead','Troll',null,'The Void, The Hero''s Forge', 'Draal','Sword of Daylight','Yellow',null,null,'James Purefoy')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (19,'Merlin','Good',null,null,null,'Wizard',null,'Camelot',null,'Sorcery',null,null,'Trollhunters','David Bradley')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (20,'Jim Lake Sr.',null,null,null,null,'Human',null,null,'Jim Lake Jr., Barbara Lake',null,'Green','Black',null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (21,'Otto Scaarbach','Gunmar, The Janus Order','Villain','Otto, Mr. Evilman','Deceased','Changeling',null,null,null,'Polymorph abilities','Blue','Black','Goblins, Lower-ranking Changelings, NotEnrique','Tom Kenny')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (22,'Gladysgro','Gunmar, Bular, The Janus Order, Stricklander','Villain','Gladys','Deceased','Changeling',null,'Arcadia',null,'Dental tools','Blue','Brown',null,'Melanie Paxson')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (23,'Darci Scott','Good','Ally',null,'Alive','Human',15,'Arcadia',null,null,'Brown','Brown','Mary Wang','Yara Shahidi')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (24,'Mary J. Wang','Good','Hero','Maria, Mare','Alive','Human',15,'Arcadia',null,null,'Brown','Black',null,'Lauren Tom')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (25,'Deya the Deliverer','Good','Hero','Deya \"The Deliverer\"','Dead','Troll',null,'The Void, The Hero''s Forge',null,'Sword of Daylight',null,null,null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (26,'Unkar the Unfortunate','Good','Hero',null,'Deceased','Troll',null,'The Void, The Hero''s Forge',null,'Sword of Daylight',null,null,null,'Wallace Shawn')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (27,'Barbara Lake','Good','Hero',null,'Alive','Human',null,'Arcadia Oaks','Jim Lake Jr.',null,'Blue','Brown',null,'Amy Landecker')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (28,'Enrique Nuñez','Good',null,'Baby Enrique','Alive','Human',1,'Arcadia Oaks, Darklands','Claire Nuñez, Mr. Nuñez, Mrs. Nuñez',null,null,'Blonde',null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (29,'Gnome Chompsky','Good','Hero',null,'Alive','Gnome',null,'Hearstone Trollmarket, Toby''s dollhouse','Space Girldoll','Teeth',null,null,null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (30,'Waltolemew Strickler','Good',null,'Baby Strickler','Alive','Human',1,'Darklands',null,null,'Green','Brown',null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (31,'Goblins','Gumm-Gumm','Villain',null,'Alive','Trolls',null,'Arcadia','Large groups, Teeth',null,null,'Blue, Green',null,null)\n\t-- http://trollhunters.wikia.com/wiki/Category:Characters?page=3\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (32,'Gatto','Neutral',null,null,'Alive','Volcanic Troll',null,'Argentina',null,'Lava, His Stomach',null,null,null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (33,'Señor Uhl',null,'Teacher','Uhl the unforgiving','Alive','Human',38,'Arcadia',null,null,null,'Blonde',null,'Fred Tatasciore')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (34,'Shannon Longhannon','Good','Ally',null,'Alive','Human',15,'Arcadia',null,null,'Blue','Brown',null,'Bebe Wood')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (35,'Wumpa','Quagawumps','Ally',null,'Alive','Quagawump Troll',null,'Swamps of Florida','Blungo, Quagawumps','Spears','Green','Green','Quagawumps',null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (36,'Nyarlagroth','Gumm-Gumm','Bad',null,'Deceased','Huge Black Snake',null,'Darklands',null,'Large horns, Thick scales, Teeth, Tongues',null,null,null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (37,'Mrs. Nuñez',null,null,'Mom','Alive','Human',null,'Arcadia','Claire Nuñez, Enrique Nuñez, Mr. Nuñez','Politics, Soy Sausage','Brown','Black',null,'Andrea Navedo')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (38,'Mr. Nuñez',null,null,'Dad','Alive','Human',null,'Arcadia','Claire Nuñez, Enrique Nuñez, Mrs. Nuñez','BBQ','Brown','Black',null,'Tom Kenny')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (39,'Bagdwella','Good',null,null,'Alive','Troll',null,'Heartstone Trollmarket',null,null,'Orange','Red',null,'Fred Tatasciore')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (40,'Coach Lawrence',null,'Teacher','Coach','Alive','Human',56,'Arcadia',null,null,'Blue','Black',null,'Tom Wilson')\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (41,'Gnomes','Thieves',null,'Scum of the earth','Alive','Gnome',null,'Hearstone Trollmarket',null,'Speed, Size, Teeth',null,null,null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (42,'The Pixies','Bad',null,null,'Alive','Pixies',null,'Container',null,'Size, Speed, Hallucination',null,null,null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (43,'Blood Goblins','Gumm-Gumm','Villain',null,'Alive','Trolls',null,'Draklands, Arcadia','Large groups, Teeth',null,null,'White',null,null)\n\tinsert into [Character] (CharacterId, FullName, Affiliation, Category, Aka, [Status], Race, Age, Home, Relatives, Weapons, EyeColor, HairColor, Minions, VoicedBy) values (44,'Nana','Good',null,null,'Alive','Human',null,'Arcadia','Toby Domzalski','Lack of sight','Blue','Gray',null,null);\nset identity_insert [Character] off;\ngo \nset identity_insert [Locations] on; --drop table [Locations] \n\tinsert into Locations (LocationId, LocationName, CharacterId) values\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(1,'Arcadia Oaks High', 5)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(2,'Arcadia Oaks High', 40)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(3,'Arcadia Oaks High', 33)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(4,'Arcadia Oaks High', 1)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(5,'Arcadia Oaks High', 13)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(6,'Arcadia Oaks High', 2)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(7,'Arcadia Oaks High', 16)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(8,'Arcadia Oaks High', 15)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(9,'Arcadia Oaks High', 24)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(10,'Arcadia Oaks High', 23)\n\tinsert into Locations (LocationId, LocationName, CharacterId) values(11,'Arcadia Oaks High', 34);\nset identity_insert Locations off;\ngo \ninsert\t[Episode] --drop table [Episode] \nselect\tc.CharacterId, FullName, VoicedBy, year(dateadd(year,-age,getdate())), Category, [Status], Age \nfrom\t[Character] c \njoin\t[Locations] l on c.CharacterId=l.CharacterId \nand\t\tc.Race='Human'\nand\t\tl.LocationName='Arcadia Oaks High'\norder by c.CharacterId;\ngo\n\n--  +-----------------------------+------------------------------------------------+\n--  | Angor spies on Trollhunters | Summon SHARK ! Kernel prevents local-to-local. |\n--  +-----------------------------+------------------------------------------------+\n--  :connect TrollHunters\nselect\t'Angor spies on Jim and friends', getdate(), * \nfrom\tdbo.[Character] c \njoin\t[Locations] l on c.CharacterId=l.CharacterId \nand\t\tc.Race='Human'\nand\t\tl.LocationName='Arcadia Oaks High';\ngo\n\n--  +---------------------------------------------+-------------------------------------------------------------------------------+\n--  | Angor releases Pixies, goes in for the kill | Release Pixies c# console app. 1101100000111011000010000001100011100111001000 |\n--  +---------------------------------------------+-------------------------------------------------------------------------------+\n--  :connect Pixes10101\n-- use [ᕙ༼,இܫஇ,༽ᕗ];\nselect 'Angor releases the Pixies', getdate(), * from dbo.Episode;\ngo\nselect 'Angor goes in for the kill', getdate(), * \nfrom\tdbo.[Character] c \njoin\tLocations l on c.CharacterId=l.CharacterId \nand\t\tc.Race='Human'\nand\t\tl.LocationName='Arcadia Oaks High';\ngo\n\n--  +----------------+\n--  | Toby saves Jim |\n--  +----------------+\n--  Turn on Force Encryption, with Certificate. Restart mssql svc.\n--  no more hallucinations. Jim and Toby kick Angor's butt and save Arcadia.\n--  :connect Pixes10101\ndrop login angor\ngo\n\n--  +----------+\n--  | Lore DDM |\n--  +----------+\n--  :connect localhost\n-- use [ᕙ༼,இܫஇ,༽ᕗ]\n-- go \n-- add users with select\ndeclare @sql nvarchar(max), @count int\nselect @count = count(*) from [Character] c inner join sysusers su on c.FullName = su.name where Race = 'Human';\nwhile @count < 17\nbegin\n\tselect top 1 @sql = 'create user ['+FullName+'] without login; grant select on [Character] to ['+FullName+'];' \n\tfrom [Character] where FullName not in (select name from sysusers) and Race = 'Human';\n\texec sp_executesql @sql;\n\tselect @count = count(*) from [Character] c inner join sysusers su on c.FullName = su.name where Race = 'Human';\nend\t\ngo\nselect name from sysusers su inner join [Character] c on c.FullName = su.name;\ngo\n--drop users \n/*\nuse [ᕙ༼,இܫஇ,༽ᕗ]\ngo \ndeclare @sql nvarchar(max), @count int\nselect @count = count(*) from [Character] c inner join sysusers su on c.FullName = su.name where Race = 'Human';\nwhile @count between 1 and 17 \nbegin\n\tselect top 1 @sql = 'drop user if exists ['+FullName+'] ;' from [Character] where FullName in (select name from sysusers) and Race = 'Human';\n\texec sp_executesql @sql;\n\tselect @count = count(*) from [Character] c inner join sysusers su on c.FullName = su.name where Race = 'Human';\nend\t\ngo*/\n-- Mask the Agent column with DDM.\ngo\n\n--  +------------------+\n--  | Killahead Bridge |\n--  +------------------+\nalter table [Character] alter column FullName\tadd masked with (function = 'Partial(0, \"---\", 0)');\nalter table [Character] alter column Aka\t\tadd masked with (function = 'Partial(0, \"---\", 0)');\nalter table [Character] alter column Race\t\tadd masked with (function = 'Partial(0, \"---\", 0)');\nalter table [Character] alter column Age\t\tadd masked with (function = 'default()'); --random(0,0)\nalter table [Character] alter column Relatives\tadd masked with (function = 'Partial(0, \"---\", 0)');\nalter table [Character] alter column EyeColor\tadd masked with (function = 'Partial(0, \"---\", 0)');\nalter table [Character] alter column HairColor\tadd masked with (function = 'Partial(0, \"---\", 0)');\nalter table [Character] alter column Minions\tadd masked with (function = 'Partial(0, \"---\", 0)');\ngo \n\n--  +-------------------------------------------------------+\n--  | For the glory of Merlin, Daylight is mine to command! |\n--  +-------------------------------------------------------+\ngrant unmask to [Jim Lake Jr.];\ngo\n\n--  +-----------------------------+\n--  | Jim becomes the Trollhunter |\n--  +-----------------------------+\nexecute as user = 'Jim Lake Jr.';\n\tselect 'Seen as Jim' as Person, * from [Character]; \nrevert;\ngo\n-- Mom doesn't know.\nexecute as user = 'Barbara Lake';\n\tselect 'Seen as Barbara' as Person, * from [Character]; \nrevert;\ngo\n-- Mom senses something's up.\nexecute as user = 'Barbara Lake';\n\tselect 'Seen as Barbara' as Person, *\n\tfrom [Character]\n\twhere FullName like '%Jim%' \nrevert;\ngo\n\n--  +---------------+\n--  | Mom finds out | --SAFEGUARD: DENY CREATE TABLE TO READ ONLY USERS\n--  +---------------+\ncreate table Letters (\n\tLetter \tvarchar(1) \tnot null)\n\t\ngo --drop table letters\n\ninsert Letters (Letter) values ('A')\ninsert Letters (Letter) values ('B')\ninsert Letters (Letter) values ('C')\ninsert Letters (Letter) values ('D')\ninsert Letters (Letter) values ('E')\ninsert Letters (Letter) values ('F')\ninsert Letters (Letter) values ('G')\ninsert Letters (Letter) values ('H')\ninsert Letters (Letter) values ('I')\ninsert Letters (Letter) values ('J')\ninsert Letters (Letter) values ('K')\ninsert Letters (Letter) values ('L')\ninsert Letters (Letter) values ('M')\ninsert Letters (Letter) values ('N')\ninsert Letters (Letter) values ('Ñ')\ninsert Letters (Letter) values ('O')\ninsert Letters (Letter) values ('P')\ninsert Letters (Letter) values('Q')\ninsert Letters (Letter) values ('R')\ninsert Letters (Letter) values ('S')\ninsert Letters (Letter) values('T')\ninsert Letters (Letter) values ('U')\ninsert Letters (Letter) values ('V')\ninsert Letters (Letter) values('W')\ninsert Letters (Letter) values ('X')\ninsert Letters (Letter) values ('Y')\ninsert Letters (Letter) values ('Z')\ninsert Letters (Letter) values(' ')\ninsert Letters (Letter) values ('.')\ninsert Letters (Letter) values ('0')\ninsert Letters (Letter) values ('1')\ninsert Letters (Letter) values ('3');\ngo\ngrant select on Letters to [Barbara Lake]; \ngo\nexecute as user = 'Barbara Lake';\n\tselect \t'Seen as Barbara' as Person\n\t,c.FullName\n\t,L01.Letter as L01\t,L02.Letter as L02\t,L03.Letter as L03\t,L04.Letter as L04\n\t,L05.Letter as L05\t,L06.Letter as L06\t,L07.Letter as L07\t,L08.Letter as L08\n\t,L09.Letter as L09\t,L10.Letter as L10\t,L11.Letter as L11\t,L12.Letter as L12\n\t,L13.Letter as L13\t,L14.Letter as L14\t,L15.Letter as L15\t,L16.Letter as L16\n\t,L17.Letter as L17\t,L18.Letter as L18\t,L19.Letter as L19\t,L20.Letter as L20\n\t,L21.Letter as L21\t,L22.Letter as L22\t,L23.Letter as L23\t,L24.Letter as L24\n\t,L25.Letter as L25\t,L26.Letter as L26\t,L27.Letter as L27\t,L28.Letter as L28\n\t,L29.Letter as L29\n\tfrom \t[Character] c\n\tinner join Letters L01 on (L01.Letter = substring(c.FullName,01,1))\n\tinner join Letters L02 on (L02.Letter = substring(c.FullName,02,1))\n\tinner join Letters L03 on (L03.Letter = substring(c.FullName,03,1))\n\tinner join Letters L04 on (L04.Letter = substring(c.FullName,04,1))\n\tinner join Letters L05 on (L05.Letter = substring(c.FullName,05,1))\n\tinner join Letters L06 on (L06.Letter = substring(c.FullName,06,1))\n\tinner join Letters L07 on (L07.Letter = substring(c.FullName,07,1))\n\tinner join Letters L08 on (L08.Letter = substring(c.FullName,08,1))\n\tinner join Letters L09 on (L09.Letter = substring(c.FullName,09,1))\n\tinner join Letters L10 on (L10.Letter = substring(c.FullName,10,1))\n\tinner join Letters L11 on (L11.Letter = substring(c.FullName,11,1))\n\tinner join Letters L12 on (L12.Letter = substring(c.FullName,12,1))\n\tinner join Letters L13 on (L13.Letter = substring(c.FullName,13,1))\n\tinner join Letters L14 on (L14.Letter = substring(c.FullName,14,1))\n\tinner join Letters L15 on (L15.Letter = substring(c.FullName,15,1))\n\tinner join Letters L16 on (L16.Letter = substring(c.FullName,16,1))\n\tinner join Letters L17 on (L17.Letter = substring(c.FullName,17,1))\n\tinner join Letters L18 on (L18.Letter = substring(c.FullName,18,1))\n\tinner join Letters L19 on (L19.Letter = substring(c.FullName,19,1))\n\tinner join Letters L20 on (L20.Letter = substring(c.FullName,20,1))\n\tinner join Letters L21 on (L21.Letter = substring(c.FullName,21,1))\n\tinner join Letters L22 on (L22.Letter = substring(c.FullName,22,1))\n\tinner join Letters L23 on (L23.Letter = substring(c.FullName,23,1))\n\tinner join Letters L24 on (L24.Letter = substring(c.FullName,24,1))\n\tinner join Letters L25 on (L25.Letter = substring(c.FullName,25,1))\n\tinner join Letters L26 on (L26.Letter = substring(c.FullName,26,1))\n\tinner join Letters L27 on (L27.Letter = substring(c.FullName,27,1))\n\tinner join Letters L28 on (L28.Letter = substring(c.FullName,28,1))\n\tinner join Letters L29 on (L29.Letter = substring(c.FullName,29,1))\nrevert;\ngo\n\n--  +--------------------------+\n--  | Killahead Bridge Dropped | --WE FINISHED DDM HACK.\n--  +--------------------------+\nalter table [Character] alter column FullName\tdrop masked ;\nalter table [Character] alter column Aka\t\tdrop masked ;\nalter table [Character] alter column Race\t\tdrop masked ;\nalter table [Character] alter column Age\t\tdrop masked ;\nalter table [Character] alter column Relatives\tdrop masked ;\nalter table [Character] alter column EyeColor\tdrop masked ;\nalter table [Character] alter column HairColor\tdrop masked ;\nalter table [Character] alter column Minions\tdrop masked ;\ngo \n\n--  +----------+\n--  | Lore RLS |\n--  +----------+\n--  :connect localhost\n--  add users with select. lines 172-181.\ndrop security policy if exists PortalPolicy;\ndrop function if exists Portal.fn_PortalAccess;\ndrop schema if exists Portal;\ndrop view if exists [Humans];\ngo\ncreate view [Humans] as \n\tselect\tFullName, [Status], Age, Home, Relatives, EyeColor, HairColor\n\tfrom\t[Character]\n\twhere\t( FullName = user_name() or Relatives like '%'+user_name()+'%' )\n\tor\t\tuser_name()='Jim Lake Jr.';\ngo\n--  Everyone in Arcadia knows eachother.\ndeclare @sql nvarchar(max)=null, @count int = null;\nselect @count = count(*) from sys.database_permissions where permission_name = 'select' and object_name(major_id) = 'Humans' and user_name(grantee_principal_id) in (select FullName from [Character] where Race = 'Human')\nwhile @count < 17\nbegin\n\tselect top 1 @sql = 'grant select on [Humans] to ['+FullName+'];'\n\tfrom [Character] where FullName in (select name from sysusers) and Race = 'Human' \n\tand FullName not in (select user_name(grantee_principal_id) from sys.database_permissions where permission_name = 'select' and object_name(major_id) = 'Humans');\n\texec sp_executesql @sql;\n\tselect @count = count(*) from sys.database_permissions where permission_name = 'select' and object_name(major_id) = 'Humans' and user_name(grantee_principal_id) in (select FullName from [Character] where Race = 'Human')\nend\t\ngo\nselect\tuser_name(grantee_principal_id) as [User], permission_name, object_name(major_id) as [OnObject] \nfrom\tsys.database_permissions \nwhere\tpermission_name = 'select' \nand\t\tobject_name(major_id) = 'Humans' \nand\t\tuser_name(grantee_principal_id) in (select\tFullName \n\t\t\t\t\t\t\t\t\t\t\tfrom\t[Character] \n\t\t\t\t\t\t\t\t\t\t\twhere\tRace = 'Human')\ngo\n--  Mom doesn't know about the Trolls.\nexecute as user = 'Barbara Lake';\n\tselect 'Seen as Barbara' as Person, * from [Humans]; \nrevert;\ngo\n--  By the glory of Merlin, Daylight is mine to command!\nexecute as user = 'Jim Lake Jr.';\n\tselect 'Seen as Jim' as Person, * from [Humans]; \nrevert;\ngo\n--  Only the heartstone can open the portal to Trollmarkert.\ncreate schema Portal; \ngo\ncreate function Portal.fn_PortalAccess (@FullName as sysname, @Relatives as sysname) \nreturns table with schemabinding as\nreturn\tselect\t1 as PortalAccess \n\t\twhere\t( @FullName = user_name() or @Relatives like '%'+user_name()+'%' )\n\t\tor\t\tuser_name() = 'Jim Lake Jr.';\ngo \ncreate security policy PortalPolicy\nadd filter predicate Portal.fn_PortalAccess (FullName, Relatives) on dbo.[Character] with (state = on);\ngo \n--  Trollhunters check if an RLS enchantment exists.\nselect object_name(object_id) as ObjectName, * from sys.security_policies;\nselect object_name(object_id) as ObjectName, * from sys.security_predicates;\ngo\n--  Mom doesn't know about the Trolls.\nexecute as user = 'Barbara Lake';\n\tselect 'Seen as Barbara' as Person, * from [Character]; \nrevert;\ngo\n--  By the glory of Merlin, Daylight is mine to command!\nexecute as user = 'Jim Lake Jr.';\n\tselect 'Seen as Jim' as Person, * from [Character]; \nrevert;\ngo\n--  Gunmar gets the heartstone.\nalter security policy PortalPolicy with (state = off);\ngo\n--  Trollhunters check if an RLS enchantment exists.\nselect object_name(object_id) as ObjectName, * from sys.security_policies;\nselect object_name(object_id) as ObjectName, * from sys.security_predicates;\ngo\n--  Mom learns the trolls when Gunmar attacked Arcadia.\nexecute as user = 'Barbara Lake';\n\tselect 'Seen as Barbara' as Person, * from [Character]; \nrevert; \ngo\n--  Mom helps the trollhunters save Arcadia from the Gum-Gum army.\nexecute as user = 'Barbara Lake';\n\tselect * from sys.partitions where object_id = object_id('dbo.Character');\nrevert;\ngo\nexecute as user = 'Barbara Lake';\n    select 'Seen as Barbara' as Person, 1 / (Age - 16), * from [Character]; --Divide by zero error encountered.\nrevert;\ngo\n--Jim and the trollhunters fight the gum-gum army.\nalter security policy PortalPolicy with (state = on); --Command(s) completed successfully.\ngo\n--  Mom continues to help Jim save Arcadia.\nexecute as user = 'Barbara Lake';\n    select 'Seen as Barbara' as Person, 1 / (Age - 16), * from [Character]; --Patched error in SQL2016 CUs. SQL2017 RTM still occurs.\nrevert;\ngo\nexecute as user = 'Barbara Lake';\n    select 'Seen as Barbara' as Person, * from [Character]\n\twhere 1 = 1 / (Age - 56); --Divide by zero error encountered. \nrevert; --9000, 4999, 600, 56, 38, 16, 15, 1\ngo\nexecute as user = 'Barbara Lake';\n\texec sp_columns [Character]; \n\texec sp_pkeys [Character]; \n\texec sp_fkeys [Character];\nrevert;\ngo\n\n--  +--------------------------------------------------------------------+\n--  | Barbara can brute-force devide by 0 to identify every integer.     |\n--  | Barbara can use the DDM letters table to identify every character. |\n--  | When all seems lost, our hero...\t\t\t\t\t\t\t\t\t |\n--\t| Jim the Trollhunter has the Amulet Of Daylight!\t\t\t\t\t |\n--  +--------------------------------------------------------------------+",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WhoConnected')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "if object_id('WhoConnected') is not null drop proc WhoConnected;\ngo\ncreate proc WhoConnected \nas\n    select \n        min(cast(login_time as date)) as MinLoginDate, \n        max(cast(login_time as date)) as MaxLoginDate\n    from sys.dm_pdw_exec_sessions \n    where session_id <> session_id()\n\n    select \n        cast(login_time as date) as LoginDate, \n        login_name, \n        client_id, \n        app_name, \n        status\n    from sys.dm_pdw_exec_sessions \n    where session_id <> session_id()\n    group by \n        cast(login_time as date),\n        login_name, \n        client_id, \n        app_name, \n        status\n    order by LoginDate desc\ngo\n\nexec WhoConnected",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WordCountResult')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--use serverless: default db\n\nSELECT count(*)\nFROM OPENROWSET(\nBULK 'https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/resultparquet',\nFORMAT = 'parquet') as resultparquet\n\n\n/* fails due to unicode and \nSELECT *\nFROM OPENROWSET(\n    BULK 'https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/result/part-00000',\n    FORMAT = 'csv',\n    FIELDTERMINATOR ='',\n    PARSER_VERSION='2.0'\n) WITH ( C1 nVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n    C2 nVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8,\n    C3 nVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8   ) as results\n\nSELECT *\nFROM OPENROWSET(\n    BULK 'https://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/resultcsv',\n    FORMAT = 'csv',\n    PARSER_VERSION='2.0',\n    -- FIELDTERMINATOR = '$',\n    FIELDQUOTE = '-',\n    ESCAPECHAR = '$'\n)  as results\n*/",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "default",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkloadMgmt')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "--https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-how-to-convert-resource-classes-workload-groups\n\nSELECT Request_min_resource_grant_percent = Effective_request_min_resource_grant_percent\n  FROM sys.dm_workload_management_workload_groups_stats\n  WHERE name = 'staticrc40'\n\n\nCREATE WORKLOAD GROUP wgDataLoads WITH  \n( REQUEST_MIN_RESOURCE_GRANT_PERCENT = 10\n ,MIN_PERCENTAGE_RESOURCE = 10\n ,CAP_PERCENTAGE_RESOURCE = 40\n ,QUERY_EXECUTION_TIMEOUT_SEC = 3600)\n\n\nCREATE WORKLOAD CLASSIFIER wcDataLoads WITH  \n( WORKLOAD_GROUP = 'wgDataLoads'\n ,MEMBERNAME = 'AdfLogin'\n ,WLM_LABEL = 'factloads')\n\n\n--Test as sql login\nSELECT SUSER_SNAME() --should be 'AdfLogin'\n\n--change to a valid table AdfLogin has access to\nSELECT TOP 10 *\n  FROM nation\n  OPTION (label='factloads')\n\nSELECT request_id, [label], classifier_name, group_name, command\n  FROM sys.dm_pdw_exec_requests\n  WHERE [label] = 'factloads'\n  ORDER BY submit_time DESC",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/alterdw')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "-- use master\n\nalter database wplussynapsedw set READ_COMMITTED_SNAPSHOT on with NO_WAIT\nalter database wplussynapsedw set RESULT_SET_CACHING on with NO_WAIT   ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dominicks_OJ_train')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) \n [WeekStarting]\n,[Store]\n,[Brand]\n,[Quantity]\n,[Advert]\n,[Price]\n,[Age60]\n,[COLLEGE]\n,[INCOME]\n,[Hincome150]\n,[Large_HH]\n,[Minorities]\n,[WorkingWoman]\n,[SSTRDIST]\n,[SSTRVOL]\n,[CPDIST5]\n,[CPWVOL5]\n FROM [default].[dbo].[dominicks_oj_train]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "default",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ext_dominicks_OJ_train')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create schema ext\ngo \n\nselect * from sys.database_scoped_credentials\ngo\nselect * from sys.external_data_sources\ngo \nselect * from sys.external_file_formats\ngo\n\ncreate external table ext.dominicks_OJ_train\n(\n\t[WeekStarting] date,\n\t[Store] int,\n\t[Brand] nvarchar(4000),\n\t[Quantity] bigint,\n\t[Advert] bit,\n\t[Price] float,\n\t[Age60] float,\n\t[COLLEGE] float,\n\t[INCOME] float,\n\t[Hincome150] float,\n\t[Large HH] float,\n\t[Minorities] float,\n\t[WorkingWoman] float,\n\t[SSTRDIST] float,\n\t[SSTRVOL] float,\n\t[CPDIST5] float,\n\t[CPWVOL5] float\n)\nWITH\n(\n\tLOCATION = 'dominicks_OJ_train.csv',\n\tDATA_SOURCE = wplushiramsynapsefs,\n\tFILE_FORMAT = skipHeader_CSV\n)\n\nselect count(*) from  ext.dominicks_OJ_train\nSELECT TOP 100 * FROM ext.dominicks_OJ_train\nGO\n\ncreate table dominicks_OJ_train \nwith (distribution = Round_Robin)\nas select * from ext.dominicks_OJ_train \n\nselect count(*) from dominicks_OJ_train",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/fwrules')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "-- DW / Dedicated SQL Pool\n-- use master\n\nselect * from master.sys.firewall_rules;\n\nexec sp_delete_firewall_rule 'AllowAllWindowsAzureIps';  ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sp_spaceused_all')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "dw not supported",
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "if object_id('sp_spaceused_all') is not null drop proc sp_spaceused_all;\ngo\n\ncreate procedure sp_spaceused_all\n    @SourceDB nvarchar(max)\nas\nset nocount on\n\ndeclare @sql nvarchar(max)\n    create table #tables(name varchar(128))\n    \n    select @sql = 'insert #tables select TABLE_NAME from ' + @SourceDB + '.INFORMATION_SCHEMA.TABLES where TABLE_TYPE = ''BASE TABLE'''\n    exec (@sql)\n    \n    create table #SpaceUsed (name varchar(128), rows varchar(11), reserved varchar(18), data varchar(18), index_size varchar(18), unused varchar(18))\n    declare @name varchar(128)\n    select @name = ''\n    while exists (select * from #tables where name > @name)\n    begin\n        select @name = min(name) from #tables where name > @name\n        select @sql = N'exec ' + @SourceDB + N'..sp_executesql N''insert #SpaceUsed exec sp_spaceused ' + @name + ''''\n        exec (@sql)\n    end\n    select * from #SpaceUsed\n    drop table #tables\n    drop table #SpaceUsed\ngo\n\nexec sp_spaceused_all 'wplussynapsedw'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vTableSizes')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Tools"
				},
				"content": {
					"query": "if object_id('vTableSizes') is not null drop view vTableSizes;\ngo\nCREATE VIEW dbo.vTableSizes\nAS\nWITH base AS (\n    --https://docs.microsoft.com/en-us/azure/sql-data-warehouse/sql-data-warehouse-tables-overview\n    SELECT \n    GETDATE()                                                             AS  [execution_time]\n    , DB_NAME()                                                            AS  [database_name]\n    , s.name                                                               AS  [schema_name]\n    , t.name                                                               AS  [table_name]\n    , QUOTENAME(s.name)+'.'+QUOTENAME(t.name)                              AS  [two_part_name]\n    , nt.[name]                                                            AS  [node_table_name]\n    , ROW_NUMBER() OVER(PARTITION BY nt.[name] ORDER BY (SELECT NULL))     AS  [node_table_name_seq]\n    , tp.[distribution_policy_desc]                                        AS  [distribution_policy_name]\n    , c.[name]                                                             AS  [distribution_column]\n    , nt.[distribution_id]                                                 AS  [distribution_id]\n    , i.[type]                                                             AS  [index_type]\n    , i.[type_desc]                                                        AS  [index_type_desc]\n    , nt.[pdw_node_id]                                                     AS  [pdw_node_id]\n    , pn.[type]                                                            AS  [pdw_node_type]\n    , pn.[name]                                                            AS  [pdw_node_name]\n    , di.name                                                              AS  [dist_name]\n    , di.position                                                          AS  [dist_position]\n    , nps.[partition_number]                                               AS  [partition_nmbr]\n    , nps.[reserved_page_count]                                            AS  [reserved_space_page_count]\n    , nps.[reserved_page_count] - nps.[used_page_count]                    AS  [unused_space_page_count]\n    , nps.[in_row_data_page_count] \n        + nps.[row_overflow_used_page_count] \n        + nps.[lob_used_page_count]                                        AS  [data_space_page_count]\n    , nps.[reserved_page_count] \n    - (nps.[reserved_page_count] - nps.[used_page_count]) \n    - ([in_row_data_page_count] \n            + [row_overflow_used_page_count]+[lob_used_page_count])       AS  [index_space_page_count]\n    , nps.[row_count]                                                      AS  [row_count]\n    from sys.schemas s\n    INNER JOIN sys.tables t\n        ON s.[schema_id] = t.[schema_id]\n    INNER JOIN sys.indexes i\n        ON  t.[object_id] = i.[object_id]\n        AND i.[index_id] <= 1\n    INNER JOIN sys.pdw_table_distribution_properties tp\n        ON t.[object_id] = tp.[object_id]\n    INNER JOIN sys.pdw_table_mappings tm\n        ON t.[object_id] = tm.[object_id]\n    INNER JOIN sys.pdw_nodes_tables nt\n        ON tm.[physical_name] = nt.[name]\n    INNER JOIN sys.dm_pdw_nodes pn\n        ON  nt.[pdw_node_id] = pn.[pdw_node_id]\n    INNER JOIN sys.pdw_distributions di\n        ON  nt.[distribution_id] = di.[distribution_id]\n    INNER JOIN sys.dm_pdw_nodes_db_partition_stats nps\n        ON nt.[object_id] = nps.[object_id]\n        AND nt.[pdw_node_id] = nps.[pdw_node_id]\n        AND nt.[distribution_id] = nps.[distribution_id]\n    LEFT OUTER JOIN (select * from sys.pdw_column_distribution_properties where distribution_ordinal = 1) cdp\n        ON t.[object_id] = cdp.[object_id]\n    LEFT OUTER JOIN sys.columns c\n        ON cdp.[object_id] = c.[object_id]\n        AND cdp.[column_id] = c.[column_id]\n), size AS (\n    SELECT\n    [execution_time]\n    ,  [database_name]\n    ,  [schema_name]\n    ,  [table_name]\n    ,  [two_part_name]\n    ,  [node_table_name]\n    ,  [node_table_name_seq]\n    ,  [distribution_policy_name]\n    ,  [distribution_column]\n    ,  [distribution_id]\n    ,  [index_type]\n    ,  [index_type_desc]\n    ,  [pdw_node_id]\n    ,  [pdw_node_type]\n    ,  [pdw_node_name]\n    ,  [dist_name]\n    ,  [dist_position]\n    ,  [partition_nmbr]\n    ,  [reserved_space_page_count]\n    ,  [unused_space_page_count]\n    ,  [data_space_page_count]\n    ,  [index_space_page_count]\n    ,  [row_count]\n    ,  ([reserved_space_page_count] * 8.0)                                 AS [reserved_space_KB]\n    ,  ([reserved_space_page_count] * 8.0)/1000                            AS [reserved_space_MB]\n    ,  ([reserved_space_page_count] * 8.0)/1000000                         AS [reserved_space_GB]\n    ,  ([reserved_space_page_count] * 8.0)/1000000000                      AS [reserved_space_TB]\n    ,  ([unused_space_page_count]   * 8.0)                                 AS [unused_space_KB]\n    ,  ([unused_space_page_count]   * 8.0)/1000                            AS [unused_space_MB]\n    ,  ([unused_space_page_count]   * 8.0)/1000000                         AS [unused_space_GB]\n    ,  ([unused_space_page_count]   * 8.0)/1000000000                      AS [unused_space_TB]\n    ,  ([data_space_page_count]     * 8.0)                                 AS [data_space_KB]\n    ,  ([data_space_page_count]     * 8.0)/1000                            AS [data_space_MB]\n    ,  ([data_space_page_count]     * 8.0)/1000000                         AS [data_space_GB]\n    ,  ([data_space_page_count]     * 8.0)/1000000000                      AS [data_space_TB]\n    ,  ([index_space_page_count]  * 8.0)                                   AS [index_space_KB]\n    ,  ([index_space_page_count]  * 8.0)/1000                              AS [index_space_MB]\n    ,  ([index_space_page_count]  * 8.0)/1000000                           AS [index_space_GB]\n    ,  ([index_space_page_count]  * 8.0)/1000000000                        AS [index_space_TB]\n    FROM base \n)\nSELECT * FROM size;\ngo \n\nSELECT \n     distribution_policy_name, table_name\n,    SUM(row_count)                as table_type_row_count\n,    SUM(reserved_space_GB)        as table_type_reserved_space_GB\n,    SUM(data_space_GB)            as table_type_data_space_GB\n,    SUM(index_space_GB)           as table_type_index_space_GB\n,    SUM(unused_space_GB)          as table_type_unused_space_GB\nFROM dbo.vTableSizes\nGROUP BY distribution_policy_name, table_name\norder by table_type_data_space_GB desc ;\n\ngo \nselect * from dbo.vTableSizes\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "wplussynapsedw",
						"poolName": "wplussynapsedw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/01-CrossClusterDB')]",
			"type": "Microsoft.Synapse/workspaces/kqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "cluster(\"help\").database(\"Samples\").StormEvents\n| count",
					"metadata": {
						"language": "kql"
					},
					"currentConnection": {
						"poolName": "codesmall1",
						"databaseName": "db1"
					}
				},
				"type": "KqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/02-configDB')]",
			"type": "Microsoft.Synapse/workspaces/kqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": ".create table ['StageIoTRawData'] (['deviceId']:string, ['enqueuedTime']:datetime, ['messageProperties']:dynamic, ['messageSource']:string, ['telemetry']:dynamic, ['templateId']:string, ['schema']:string)\n\n.alter table StageIoTRawData policy ingestionbatching @'{\"MaximumBatchingTimeSpan\":\"00:00:30\"}'\n\n.create table ['StageIoTRawData'] ingestion json mapping 'StageIoTRawData_mapping' '[{\"column\":\"deviceId\", \"Properties\":{\"Path\":\"$[\\'deviceId\\']\"}},{\"column\":\"enqueuedTime\", \"Properties\":{\"Path\":\"$[\\'enqueuedTime\\']\"}},{\"column\":\"messageProperties\", \"Properties\":{\"Path\":\"$[\\'messageProperties\\']\"}},{\"column\":\"messageSource\", \"Properties\":{\"Path\":\"$[\\'messageSource\\']\"}},{\"column\":\"telemetry\", \"Properties\":{\"Path\":\"$[\\'telemetry\\']\"}},{\"column\":\"templateId\", \"Properties\":{\"Path\":\"$[\\'templateId\\']\"}},{\"column\":\"schema\", \"Properties\":{\"Path\":\"$[\\'schema\\']\"}}]'\n\n.create table Thermostats (EnqueuedTimeUTC: datetime, DeviceId: string, BatteryLevel: long, Temp: real, Humidity: real) \n\n.create table ['Thermostats'] ingestion csv mapping 'Thermostats_mapping' '[{\"column\":\"EnqueuedTimeUTC\", \"Properties\":{\"Ordinal\":\"0\"}},{\"column\":\"DeviceId\", \"Properties\":{\"Ordinal\":\"1\"}},{\"column\":\"BatteryLevel\", \"Properties\":{\"Ordinal\":\"2\"}},{\"column\":\"Temp\", \"Properties\":{\"Ordinal\":\"3\"}},{\"column\":\"Humidity\", \"Properties\":{\"Ordinal\":\"4\"}}]'\n\n.create-or-alter function with (docstring = \"Used for Thermostats Update Policy\",folder = \"Functions\") ExtractThermostatData {\n\tStageIoTRawData\n\t| where telemetry has 'temp'\n\t| project \n\tEnqueuedTimeUTC=enqueuedTime,\n\tDeviceId=deviceId,\n\tBatteryLevel = tolong(telemetry.['BatteryLevel']), \n\tTemp =  toreal(telemetry.['temp']),\n\tHumidity =  toreal(telemetry.['humidity'])\n}\n\n.create-or-alter function with (folder = \"Analytics/IoT\", skipvalidation = \"true\") GetDevicesbyStore(Office:string) {\n\tlet ADTendpoint = \"https://<dtURI>\";\n\tlet ADTquery = strcat(\"SELECT T.$dtId as Office, F.$dtId as Floor, D.$dtId as DeviceId FROM DIGITALTWINS T JOIN F RELATED T.officecontainsfloors JOIN D RELATED F.floorcontainsdevices where T.$dtId='\", Office, \"'\"); \n\tevaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)\n    | project Office=tostring(Office), Floor=tostring(Floor), DeviceId=tostring(DeviceId)\n} \n\n// .create-or-alter function with (folder = \"Analytics/IoT\", skipvalidation = \"true\") GetDevicesbyStoreFloor(Office:string, Floor:string) {\n// \tlet ADTendpoint = \"https://<dtURI>\";\n// \tlet ADTquery = strcat(\"SELECT T.$dtId as Office, F.$dtId as Floor, D.$dtId as DeviceId FROM DIGITALTWINS T JOIN F RELATED T.officecontainsfloors JOIN D RELATED F.floorcontainsdevices where T.$dtId='\", Office, \"' AND F.$dtId = '\", Floor, \"'\"); \n// \tevaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)\n//     | project Office=tostring(Office), Floor=tostring(Floor), DeviceId=tostring(DeviceId)\n// }\n\n.alter table Thermostats policy update \n@'[{ \"IsEnabled\": true, \"Source\": \"StageIoTRawData\", \"Query\": \"ExtractThermostatData()\", \"IsTransactional\": false, \"PropagateIngestionProperties\": false}]'\n\n",
					"metadata": {
						"language": "kql"
					},
					"currentConnection": {
						"poolName": "codesmall1",
						"databaseName": "db1"
					}
				},
				"type": "KqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03-Thermostat')]",
			"type": "Microsoft.Synapse/workspaces/kqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "//setup data ingestion via portal\n\nStageIoTRawData | count \n\nStageIoTRawData | sample 10\n\n\nStageIoTRawData\n| project enqueuedTime, deviceId,\nBatteryLevel = tolong(telemetry.['BatteryLevel']), \nTemp =  toreal(telemetry.['temp']),\nHumidity =  toreal(telemetry.['humidity'])\n\n\n.create-or-alter function  ExtractThermostatData {\n//same here...\n}\n\n\nThermostats | sample 10\n\n//count of rows in table\nThermostats | count \n\n\n//What is the average temp every 1 min?\nThermostats\n| where EnqueuedTimeUTC > ago(7d)\n| where DeviceId == 'dd5f1451-9e9a-43a6-ad02-32bed6877f20'\n| summarize avg(Temp) by bin(EnqueuedTimeUTC,1m)\n| render timechart \n\n\n//Is there any missing data? \n//make-series\n//Create series of specified aggregated values along specified axis.\nThermostats\n| where EnqueuedTimeUTC > ago(6h)\n| where DeviceId == 'dd5f1451-9e9a-43a6-ad02-32bed6877f20'\n| make-series AvgTemp=avg(Temp) on EnqueuedTimeUTC from ago(6h) to now() step 1m   \n| render timechart \n\n\n//How can I fill the missing values?\n//series_fill_linear()\n//Performs linear interpolation of missing values in a series.\nThermostats\n| where EnqueuedTimeUTC > ago(6h)\n| where DeviceId == 'dd5f1451-9e9a-43a6-ad02-32bed6877f20'\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(6h) to now() step 1m   \n| extend NoGapsTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, NoGapsTemp\n| render timechart \n\n\n\n//What will be the temprature for next one hour?\nThermostats\n| where EnqueuedTimeUTC > ago(2d)\n| where DeviceId == 'dd5f1451-9e9a-43a6-ad02-32bed6877f20'\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(2d) to now()+15m step 1m   \n| extend NoGapsTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, NoGapsTemp\n| extend forecast = series_decompose_forecast(NoGapsTemp, 15)\n| render timechart with(title='Forecasting the next 15min by Time Series Decmposition')\n\n\n//Are there any anomalies for this device?\nThermostats\n| where EnqueuedTimeUTC > ago(3d)\n| where DeviceId == 'dd5f1451-9e9a-43a6-ad02-32bed6877f20'\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(3d) to now() step 1m   \n| extend NoGapsTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, NoGapsTemp\n| extend anomalies = series_decompose_anomalies(NoGapsTemp,1) \n| render anomalychart with(anomalycolumns=anomalies)\n\n\n//What the anomalies I should focus on across all devices?\nThermostats\n| where EnqueuedTimeUTC > ago(3d)\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(3d) to now() step 1m by DeviceId\n| extend NoGapsTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, DeviceId, NoGapsTemp\n| extend anomalies = series_decompose_anomalies(NoGapsTemp, 1)\n| mv-expand EnqueuedTimeUTC, anomalies, NoGapsTemp\n| where anomalies == 1\n\n//10 devices\nThermostats\n| summarize count(DeviceId) by DeviceId\n| count\n\n//Hilo & Axceta\n//30days of all devices in \nThermostats\n| where ingestion_time() > ago(30d)\n| project EnqueuedTimeUTC, ingestion_time(), latency=(ingestion_time()-EnqueuedTimeUTC) //get latency\n| summarize latency=percentile(latency, 95) by timewindow=bin(ingestion_time(), 15m) //get percentile by buckets\n| summarize timewindow=make_list(timewindow), latency=make_list(latency), anomaly=series_decompose_anomalies(make_list(latency)) //get anomalies\n| project timewindow, latency, anomaly //keep needed columns for chart\n| render anomalychart with(anomalycolumns = anomaly)\n\n.show materialized-views\n\n.create-or-alter materialized-view Hourly_Average_Mview on table Thermostats {\nThermostats | summarize avg_Battery_Level=avg(BatteryLevel),avg_Temp=avg(Temp), avg_Humidity=avg(Humidity) by DeviceId, bin(EnqueuedTimeUTC,1h)\n}\n\n.create-or-alter materialized-view Current_Mview on table Thermostats {\nThermostats | summarize (curr_Event_Time,curr_Battery_Level,curr_Temp, curr_Humidity)=arg_max(EnqueuedTimeUTC,BatteryLevel,Temp,Humidity) by DeviceId\n}\n\n//Materialized views\nHourly_Average_Mview\n| where EnqueuedTimeUTC > ago(1h)\n| take 1000 \n\nCurrent_Mview\n\n\n.show external tables\n\n\n\nexternal_table(\"ext_Thermostats\")\n| where EnqueuedTimeUTC between (datetime('03-01-2020 11:00 am') .. datetime('03-01-2020 01:00 pm')) and DeviceId == '637086754472373714'\n| project EnqueuedTimeUTC, BatteryLevel, Temp, Humidity",
					"metadata": {
						"language": "kql"
					},
					"currentConnection": {
						"poolName": "codesmall1",
						"databaseName": "db1"
					}
				},
				"type": "KqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/04-Formula1')]",
			"type": "Microsoft.Synapse/workspaces/kqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": ".show tables \n\nCarTelemetry\n| limit 10 \n\nEXPLAIN\nSELECT * FROM [CarTelemetry]\n\nSELECT count(*) FROM CarTelemetry where Timestamp > '5/23/2022';\n\n\nParticipant\n| limit 100 \n\n//make Participant a DW dimension. AdventureWorks racing team\n\n#connect cluster('adxpm10774.eastus').database(IoTAnalytics)\n\n//sqlmi\nevaluate sql_request(\n  'Server=tcp:oceanmi.public.ddc9e22985bb.database.windows.net,3342;'\n    'Authentication=\"Active Directory Integrated\";'\n    'Initial Catalog=OceanMI;',\n  'select * from [dbo].[facttable]')\n| where id > 0\n| project value\n\n// mix kql telemetry with DW/Lakedb or in PBI model. -> stretch. wow. all-up synapse. \n// viz in PBI\n// ai model train/score/ops. 2nd presentation.\n\n\n//cross cluster query-ingest\n.set-or-replace dxpooltable1 <| cluster('help').database('Samples').demo_make_series1\n\n.drop table dxpooltable1 ifexists ",
					"metadata": {
						"language": "kql"
					},
					"currentConnection": {
						"poolName": "formula1",
						"databaseName": "f1"
					}
				},
				"type": "KqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wordcount')]",
			"type": "Microsoft.Synapse/workspaces/sparkJobDefinitions",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"targetBigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"requiredSparkVersion": "3.2",
				"language": "python",
				"jobProperties": {
					"name": "wordcount",
					"file": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/wordcount.py",
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "d8640e8c-77b1-4624-90bd-ee197dbca54f"
					},
					"args": [
						"abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/shakespeare.txt",
						"abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/result"
					],
					"jars": [],
					"pyFiles": [],
					"files": [],
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-Changes')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "9fd9c382-7255-441f-8fd3-4208daf298c3"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "scala"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## 0. Create the class"
						]
					},
					{
						"cell_type": "code",
						"source": [
							"case class Data(key: String, value: String)\r\n",
							"\r\n",
							"case class ChangeData(key: String, newValue: String, deleted: Boolean, time: Long) {\r\n",
							"assert(newValue != null ^ deleted)\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## 1. Add sequence of changes"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changeDataSource = Seq(\n",
							"  ChangeData(\"a\", \"10\", deleted = false, time = 0),\n",
							"  ChangeData(\"a\", null, deleted = true, time = 1),   // a was updated and then deleted\n",
							"  ChangeData(\"b\", null, deleted = true, time = 2),   // b was just deleted once\n",
							"  ChangeData(\"c\", null, deleted = true, time = 3),   // c was deleted and then updated twice\n",
							"  ChangeData(\"c\", \"20\", deleted = false, time = 4),\n",
							"  ChangeData(\"c\", \"200\", deleted = false, time = 5)\n",
							").toDF().createOrReplaceTempView(\"changes\")"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## 2. Read changes into DF"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changesDF = spark.sql(\"select * from changes\")"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## 3. Expression for only latest changes"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val latestChangeForEachKey = changesDF.selectExpr(\"key\", \"struct(time, newValue, deleted) as otherCols\").groupBy(\"key\").agg(max(\"otherCols\").as(\"latest\")).selectExpr(\"key\", \"latest.*\")\r\n",
							"latestChangeForEachKey.show()"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## 4. Temp view of latest changes"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.createOrReplaceTempView(\"lastchanges\")"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## 5. Save delta table"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"lastchanges\") "
						],
						"outputs": [],
						"execution_count": 23
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-FromScratch')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "1c86c96b-91c0-42b1-83ba-91d03fb222dc"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "scala"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.version"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"case class Data(key: String, value: String)\r\n",
							"\r\n",
							"case class ChangeData(key: String, newValue: String, deleted: Boolean, time: Long) {\r\n",
							"  assert(newValue != null ^ deleted)\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val target = Seq(\r\n",
							"  Data(\"a\", \"0\"),\r\n",
							"  Data(\"b\", \"1\"),\r\n",
							"  Data(\"c\", \"2\"),\r\n",
							"  Data(\"d\", \"3\")\r\n",
							").toDF()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sql(\"drop table if exists target\")\r\n",
							"target.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"target\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val targetDF = spark.sqlContext.sql(\"select * from target\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## New API docs\r\n",
							"https://docs.microsoft.com/en-us/azure/synapse-analytics/spark/synapse-spark-sql-pool-import-export"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"//Add required imports\r\n",
							"import org.apache.spark.sql.DataFrame\r\n",
							"import org.apache.spark.sql.SaveMode\r\n",
							"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"//new write options\r\n",
							"val writeOptions:Map[String, String] = Map(Constants.SERVER -> \"wplushiramsynapse.sql.azuresynapse.net\", \r\n",
							"Constants.TEMP_FOLDER -> \"abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/synapse/workspaces/wplushiramsynapse/temp\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"//Set up optional callback/feedback function that can receive post write metrics of the job performed.\r\n",
							"var errorDuringWrite:Option[Throwable] = None\r\n",
							"val callBackFunctionToReceivePostWriteMetrics: (Map[String, Any], Option[Throwable]) => Unit =\r\n",
							"    (feedback: Map[String, Any], errorState: Option[Throwable]) => {\r\n",
							"    println(s\"Feedback map - ${feedback.map{case(key, value) => s\"$key -> $value\"}.mkString(\"{\",\",\\n\",\"}\")}\")\r\n",
							"    errorDuringWrite = errorState\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"//write to Synapse Dedicated SQL Pool (note - default SaveMode is set to ErrorIfExists)\r\n",
							"targetDF.\r\n",
							"    write.\r\n",
							"    options(writeOptions).\r\n",
							"    mode(SaveMode.Overwrite).\r\n",
							"    synapsesql(tableName = \"wplussynapsedw.dbo.target\", \r\n",
							"                tableType = Constants.INTERNAL, //For external table type value is Constants.EXTERNAL\r\n",
							"                location = None, //Not required for writing to an internal table\r\n",
							"                callBackHandle = Some(callBackFunctionToReceivePostWriteMetrics))\r\n",
							"\r\n",
							"//If write request has failed, raise an error and fail the Cell's execution.\r\n",
							"if(errorDuringWrite.isDefined) throw errorDuringWrite.get   "
						],
						"outputs": [],
						"execution_count": 13
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-Guide-Py')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "65c82832-f94d-4389-8283-908aa2a9ddab"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Hitchhiker's Guide to Delta Lake (Python)\n",
							"\n",
							"This tutorial has been adapted for more clarity from its original counterpart [here](https://docs.delta.io/latest/quick-start.html). This notebook helps you quickly explore the main features of [Delta Lake](https://github.com/delta-io/delta). It provides code snippets that show how to read from and write to Delta Lake tables from interactive, batch, and streaming queries.\n",
							"\n",
							"Here's what we will cover:\n",
							"* Create a table\n",
							"* Understanding meta-data\n",
							"* Read data\n",
							"* Update table data\n",
							"* Overwrite table data\n",
							"* Conditional update without overwrite\n",
							"* Read older versions of data using Time Travel\n",
							"* Write a stream of data to a table\n",
							"* Read a stream of changes from a table"
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Configuration\n",
							"Make sure you modify this as appropriate."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"import random\n",
							"\n",
							"session_id = random.randint(0,1000000)\n",
							"delta_table_path = \"/delta/delta-table-{0}\".format(session_id)\n",
							"\n",
							"delta_table_path"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Create a table\n",
							"To create a Delta Lake table, write a DataFrame out in the **delta** format. You can use existing Spark SQL code and change the format from parquet, csv, json, and so on, to delta.\n",
							"\n",
							"These operations create a new Delta Lake table using the schema that was inferred from your DataFrame. For the full set of options available when you create a new Delta Lake table, see Create a table and Write to a table (subsequent cells in this notebook)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"data = spark.range(0,5)\n",
							"data.show()\n",
							"data.write.format(\"delta\").save(delta_table_path)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Understanding Meta-data\n",
							"\n",
							"In Delta Lake, meta-data is no different from data i.e., it is stored next to the data. Therefore, an interesting side-effect here is that you can peek into meta-data using regular Spark APIs. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"[log_line.value for log_line in spark.read.text(delta_table_path + \"/_delta_log/\").collect()]"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read data\n",
							"\n",
							"You read data in your Delta Lake table by specifying the path to the files."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"df = spark.read.format(\"delta\").load(delta_table_path)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Update table data\n",
							"\n",
							"Delta Lake supports several operations to modify tables using standard DataFrame APIs. This example runs a batch job to overwrite the data in the table.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"data = spark.range(5,10)\n",
							"data.write.format(\"delta\").mode(\"overwrite\").save(delta_table_path)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"source": [
							"When you now inspect the meta-data, what you will notice is that the original data is over-written. Well, not in a true sense but appropriate entries are added to Delta's transaction log so it can provide an \"illusion\" that the original data was deleted. We can verify this by re-inspecting the meta-data. You will see several entries indicating reference removal to the original data."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"[log_line.value for log_line in spark.read.text(delta_table_path + \"/_delta_log/\").collect()]"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Save as catalog tables\n",
							"\n",
							"Delta Lake can write to managed or external catalog tables."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"# Write data to a new managed catalog table.\n",
							"data.write.format(\"delta\").saveAsTable(\"ManagedDeltaTable\")"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"source": [
							"# Define an external catalog table that points to the existing Delta Lake data in storage.\n",
							"spark.sql(\"CREATE TABLE ExternalDeltaTable USING DELTA LOCATION '{0}'\".format(delta_table_path))"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"source": [
							"# List the 2 new tables.\n",
							"spark.sql(\"SHOW TABLES\").show()\n",
							"\n",
							"# Explore their properties.\n",
							"spark.sql(\"DESCRIBE EXTENDED ManagedDeltaTable\").show(truncate=False)\n",
							"spark.sql(\"DESCRIBE EXTENDED ExternalDeltaTable\").show(truncate=False)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Conditional update without overwrite\n",
							"\n",
							"Delta Lake provides programmatic APIs to conditional update, delete, and merge (upsert) data into tables. For more information on these operations, see [Table Deletes, Updates, and Merges](https://docs.delta.io/latest/delta-update.html)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from delta.tables import *\n",
							"from pyspark.sql.functions import *\n",
							"\n",
							"delta_table = DeltaTable.forPath(spark, delta_table_path)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"source": [
							"# Update every even value by adding 100 to it\n",
							"delta_table.update(\n",
							"  condition = expr(\"id % 2 == 0\"),\n",
							"  set = { \"id\": expr(\"id + 100\") })\n",
							"delta_table.toDF().show()"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"source": [
							"# Delete every even value\n",
							"delta_table.delete(\"id % 2 == 0\")\n",
							"delta_table.toDF().show()"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"source": [
							"# Upsert (merge) new data\n",
							"new_data = spark.range(0,20).alias(\"newData\")\n",
							"\n",
							"delta_table.alias(\"oldData\")\\\n",
							"    .merge(new_data.alias(\"newData\"), \"oldData.id = newData.id\")\\\n",
							"    .whenMatchedUpdate(set = { \"id\": lit(\"-1\")})\\\n",
							"    .whenNotMatchedInsert(values = { \"id\": col(\"newData.id\") })\\\n",
							"    .execute()\n",
							"\n",
							"delta_table.toDF().show(100)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "markdown",
						"source": [
							"## History\n",
							"Delta's most powerful feature is the ability to allow looking into history i.e., the changes that were made to the underlying Delta Table. The cell below shows how simple it is to inspect the history."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"delta_table.history().show(20, 1000, False)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read older versions of data using Time Travel\n",
							"\n",
							"You can query previous snapshots of your Delta Lake table by using a feature called Time Travel. If you want to access the data that you overwrote, you can query a snapshot of the table before you overwrote the first set of data using the versionAsOf option.\n",
							"\n",
							"Once you run the cell below, you should see the first set of data, from before you overwrote it. Time Travel is an extremely powerful feature that takes advantage of the power of the Delta Lake transaction log to access data that is no longer in the table. Removing the version 0 option (or specifying version 1) would let you see the newer data again. For more information, see [Query an older snapshot of a table (time travel)](https://docs.delta.io/latest/delta-batch.html#deltatimetravel)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"df = spark.read.format(\"delta\").option(\"versionAsOf\", 0).load(delta_table_path)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Write a stream of data to a table\n",
							"\n",
							"You can also write to a Delta Lake table using Spark's Structured Streaming. The Delta Lake transaction log guarantees exactly-once processing, even when there are other streams or batch queries running concurrently against the table. By default, streams run in append mode, which adds new records to the table.\n",
							"\n",
							"For more information about Delta Lake integration with Structured Streaming, see [Table Streaming Reads and Writes](https://docs.delta.io/latest/delta-streaming.html).\n",
							"\n",
							"In the cells below, here's what we are doing:\n",
							"\n",
							"1. *Cell 28* Setup a simple Spark Structured Streaming job to generate a sequence and make the job write into our Delta Table\n",
							"2. *Cell 30* Show the newly appended data\n",
							"3. *Cell 31* Inspect history\n",
							"4. *Cell 32* Stop the structured streaming job\n",
							"5. *Cell 33* Inspect history <-- You'll notice appends have stopped"
						]
					},
					{
						"cell_type": "code",
						"source": [
							"streaming_df = spark.readStream.format(\"rate\").load()\n",
							"stream = streaming_df\\\n",
							"    .selectExpr(\"value as id\")\\\n",
							"    .writeStream\\\n",
							"    .format(\"delta\")\\\n",
							"    .option(\"checkpointLocation\", \"/tmp/checkpoint-{0}\".format(session_id))\\\n",
							"    .start(delta_table_path)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read a stream of changes from a table\n",
							"\n",
							"While the stream is writing to the Delta Lake table, you can also read from that table as streaming source. For example, you can start another streaming query that prints all the changes made to the Delta Lake table."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"delta_table.toDF().sort(col(\"id\").desc()).show(100)"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"source": [
							"delta_table.history().drop(\"userId\", \"userName\", \"job\", \"notebook\", \"clusterId\", \"isolationLevel\", \"isBlindAppend\").show(20, 1000, False)"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"source": [
							"stream.stop()"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"source": [
							"delta_table.history().drop(\"userId\", \"userName\", \"job\", \"notebook\", \"clusterId\", \"isolationLevel\", \"isBlindAppend\").show(100, 1000, False)"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Compaction\n",
							"\n",
							"If a Delta Table is growing too large, you can compact it by repartitioning into a smaller number of files.\n",
							"\n",
							"The option `dataChange = false` is an optimization that tells Delta Lake to do the repartition without marking the underlying data as \"modified\". This ensures that any other concurrent operations (such as streaming reads/writes) aren't negatively impacted.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"partition_count = 2\n",
							"\n",
							"spark.read\\\n",
							"    .format(\"delta\")\\\n",
							"    .load(delta_table_path)\\\n",
							"    .repartition(partition_count)\\\n",
							"    .write.option(\"dataChange\", \"false\")\\\n",
							"    .format(\"delta\")\\\n",
							"    .mode(\"overwrite\")\\\n",
							"    .save(delta_table_path)    "
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Convert Parquet to Delta\n",
							"You can do an in-place conversion from the Parquet format to Delta."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"parquet_path = \"/parquet/parquet-table-{0}\".format(session_id)\n",
							"\n",
							"data = spark.range(0,5)\n",
							"data.write.parquet(parquet_path)\n",
							"\n",
							"# Confirm that the data isn't in the Delta format\n",
							"DeltaTable.isDeltaTable(spark, parquet_path)"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"source": [
							"DeltaTable.convertToDelta(spark, \"parquet.`{0}`\".format(parquet_path))\n",
							"\n",
							"# Confirm that the converted data is now in the Delta format\n",
							"DeltaTable.isDeltaTable(spark, parquet_path)"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "markdown",
						"source": [
							"## SQL Support\n",
							"Delta supports table utility commands through SQL.  You can use SQL to:\n",
							"* Get a DeltaTable's history\n",
							"* Vacuum a DeltaTable\n",
							"* Convert a Parquet file to Delta\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"DESCRIBE HISTORY delta.`{0}`\".format(delta_table_path)).show()"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"VACUUM delta.`{0}`\".format(delta_table_path)).show(10, 1000, False)"
						],
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "code",
						"source": [
							"parquet_id = random.randint(0,1000)\n",
							"parquet_path = \"/parquet/parquet-table-{0}-{1}\".format(session_id, parquet_path)\n",
							"\n",
							"data = spark.range(0,5)\n",
							"data.write.parquet(parquet_path)\n",
							"\n",
							"# Confirm that the data isn't in the Delta format\n",
							"DeltaTable.isDeltaTable(spark, parquet_path)\n",
							"\n",
							"# Use SQL to convert the parquet table to Delta\n",
							"spark.sql(\"CONVERT TO DELTA parquet.`{0}`\".format(parquet_path))\n",
							"\n",
							"DeltaTable.isDeltaTable(spark, parquet_path)"
						],
						"outputs": [],
						"execution_count": 38
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-Guide-Scala')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "cf5a5b96-8160-4723-bbf3-70b93fe2bc93"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Hitchhiker's Guide to Delta Lake (Scala)\n",
							"\n",
							"This tutorial has been adapted for more clarity from its original counterpart [here](https://docs.delta.io/latest/quick-start.html). This notebook helps you quickly explore the main features of [Delta Lake](https://github.com/delta-io/delta). It provides code snippets that show how to read from and write to Delta Lake tables from interactive, batch, and streaming queries.\n",
							"\n",
							"Here's what we will cover:\n",
							"* Create a table\n",
							"* Understanding meta-data\n",
							"* Read data\n",
							"* Update table data\n",
							"* Overwrite table data\n",
							"* Conditional update without overwrite\n",
							"* Read older versions of data using Time Travel\n",
							"* Write a stream of data to a table\n",
							"* Read a stream of changes from a table"
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Configuration\n",
							"Make sure you modify this as appropriate."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val sessionId = scala.util.Random.nextInt(1000000)\n",
							"val deltaTablePath = s\"/delta/delta-table-$sessionId\";"
						],
						"outputs": [],
						"execution_count": 31
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Create a table\n",
							"To create a Delta Lake table, write a DataFrame out in the **delta** format. You can use existing Spark SQL code and change the format from parquet, csv, json, and so on, to delta.\n",
							"\n",
							"These operations create a new Delta Lake table using the schema that was inferred from your DataFrame. For the full set of options available when you create a new Delta Lake table, see Create a table and Write to a table (subsequent cells in this notebook)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val data = spark.range(0, 5)\n",
							"data.show\n",
							"data.write.format(\"delta\").save(deltaTablePath)"
						],
						"outputs": [],
						"execution_count": 32
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Understanding Meta-data\n",
							"\n",
							"In Delta Lake, meta-data is no different from data i.e., it is stored next to the data. Therefore, an interesting side-effect here is that you can peek into meta-data using regular Spark APIs. "
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.read.text(s\"$deltaTablePath/_delta_log/\").collect.foreach(println)"
						],
						"outputs": [],
						"execution_count": 33
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read data\n",
							"\n",
							"You read data in your Delta Lake table by specifying the path to the files: \"/tmp/delta-table-scala\""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val df = spark.read.format(\"delta\").load(deltaTablePath)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 34
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Update table data\n",
							"\n",
							"Delta Lake supports several operations to modify tables using standard DataFrame APIs. This example runs a batch job to overwrite the data in the table.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val data = spark.range(5, 10)\n",
							"data.write.format(\"delta\").mode(\"overwrite\").save(deltaTablePath)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "markdown",
						"source": [
							"When you now inspect the meta-data, what you will notice is that the original data is over-written. Well, not in a true sense but appropriate entries are added to Delta's transaction log so it can provide an \"illusion\" that the original data was deleted. We can verify this by re-inspecting the meta-data. You will see several entries indicating reference removal to the original data."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.read.text(s\"$deltaTablePath/_delta_log/\").collect.foreach(println)"
						],
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Save as catalog tables\n",
							"\n",
							"Delta Lake can write to managed or external catalog tables."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"// Write data to a new managed catalog table.\n",
							"data.write.format(\"delta\").saveAsTable(\"ManagedDeltaTable\")"
						],
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "code",
						"source": [
							"// Define an external catalog table that points to the existing Delta Lake data in storage.\n",
							"spark.sql(s\"CREATE TABLE ExternalDeltaTable USING DELTA LOCATION '$deltaTablePath'\")"
						],
						"outputs": [],
						"execution_count": 38
					},
					{
						"cell_type": "code",
						"source": [
							"// List the 2 new tables.\n",
							"spark.sql(\"SHOW TABLES\").show\n",
							"\n",
							"// Explore their properties.\n",
							"spark.sql(\"DESCRIBE EXTENDED ManagedDeltaTable\").show(truncate=false)\n",
							"spark.sql(\"DESCRIBE EXTENDED ExternalDeltaTable\").show(truncate=false)"
						],
						"outputs": [],
						"execution_count": 39
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Conditional update without overwrite\n",
							"\n",
							"Delta Lake provides programmatic APIs to conditional update, delete, and merge (upsert) data into tables. For more information on these operations, see [Table Deletes, Updates, and Merges](https://docs.delta.io/latest/delta-update.html)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"import io.delta.tables._\n",
							"import org.apache.spark.sql.functions._\n",
							"\n",
							"val deltaTable = DeltaTable.forPath(deltaTablePath)"
						],
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "code",
						"source": [
							"// Update every even value by adding 100 to it\n",
							"deltaTable.update(\n",
							"  condition = expr(\"id % 2 == 0\"),\n",
							"  set = Map(\"id\" -> expr(\"id + 100\")))\n",
							"deltaTable.toDF.show"
						],
						"outputs": [],
						"execution_count": 41
					},
					{
						"cell_type": "code",
						"source": [
							"// Delete every even value\n",
							"deltaTable.delete(condition = expr(\"id % 2 == 0\"))\n",
							"deltaTable.toDF.show"
						],
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "code",
						"source": [
							"// Upsert (merge) new data\n",
							"val newData = spark.range(0, 20).toDF\n",
							"\n",
							"deltaTable.as(\"oldData\").\n",
							"  merge(\n",
							"    newData.as(\"newData\"),\n",
							"    \"oldData.id = newData.id\").\n",
							"  whenMatched.\n",
							"  update(Map(\"id\" -> lit(-1))).\n",
							"  whenNotMatched.\n",
							"  insert(Map(\"id\" -> col(\"newData.id\"))).\n",
							"  execute()\n",
							"\n",
							"deltaTable.toDF.show()"
						],
						"outputs": [],
						"execution_count": 43
					},
					{
						"cell_type": "markdown",
						"source": [
							"## History\n",
							"Delta's most powerful feature is the ability to allow looking into history i.e., the changes that were made to the underlying Delta Table. The cell below shows how simple it is to inspect the history."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.history.show(false)"
						],
						"outputs": [],
						"execution_count": 44
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read older versions of data using Time Travel\n",
							"\n",
							"You can query previous snapshots of your Delta Lake table by using a feature called Time Travel. If you want to access the data that you overwrote, you can query a snapshot of the table before you overwrote the first set of data using the versionAsOf option.\n",
							"\n",
							"Once you run the cell below, you should see the first set of data, from before you overwrote it. Time Travel is an extremely powerful feature that takes advantage of the power of the Delta Lake transaction log to access data that is no longer in the table. Removing the version 0 option (or specifying version 1) would let you see the newer data again. For more information, see [Query an older snapshot of a table (time travel)](https://docs.delta.io/latest/delta-batch.html#deltatimetravel)."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val df = spark.read.format(\"delta\").option(\"versionAsOf\", 0).load(deltaTablePath)\n",
							"df.show()"
						],
						"outputs": [],
						"execution_count": 45
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Write a stream of data to a table\n",
							"\n",
							"You can also write to a Delta Lake table using Spark's Structured Streaming. The Delta Lake transaction log guarantees exactly-once processing, even when there are other streams or batch queries running concurrently against the table. By default, streams run in append mode, which adds new records to the table.\n",
							"\n",
							"For more information about Delta Lake integration with Structured Streaming, see [Table Streaming Reads and Writes](https://docs.delta.io/latest/delta-streaming.html).\n",
							"\n",
							"In the cells below, here's what we are doing:\n",
							"\n",
							"1. *Cell 28* Setup a simple Spark Structured Streaming job to generate a sequence and make the job write into our Delta Table\n",
							"2. *Cell 30* Show the newly appended data\n",
							"3. *Cell 31* Inspect history\n",
							"4. *Cell 32* Stop the structured streaming job\n",
							"5. *Cell 33* Inspect history <-- You'll notice appends have stopped"
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val streamingDf = spark.readStream.format(\"rate\").load()\n",
							"val stream = streamingDf.select($\"value\" as \"id\").writeStream.format(\"delta\").option(\"checkpointLocation\", s\"/tmp/checkpoint-$sessionId\").start(deltaTablePath)"
						],
						"outputs": [],
						"execution_count": 46
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Read a stream of changes from a table\n",
							"\n",
							"While the stream is writing to the Delta Lake table, you can also read from that table as streaming source. For example, you can start another streaming query that prints all the changes made to the Delta Lake table."
						]
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.toDF.sort($\"id\".desc).show"
						],
						"outputs": [],
						"execution_count": 47
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.history.show"
						],
						"outputs": [],
						"execution_count": 48
					},
					{
						"cell_type": "code",
						"source": [
							"stream.stop"
						],
						"outputs": [],
						"execution_count": 49
					},
					{
						"cell_type": "code",
						"source": [
							"deltaTable.history.show"
						],
						"outputs": [],
						"execution_count": 50
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Compaction\n",
							"\n",
							"If a Delta Table is growing too large, you can compact it by repartitioning into a smaller number of files.\n",
							"\n",
							"The option `dataChange = false` is an optimization that tells Delta Lake to do the repartition without marking the underlying data as \"modified\". This ensures that any other concurrent operations (such as streaming reads/writes) aren't negatively impacted.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val partitionCount = 2\n",
							"\n",
							"spark.\n",
							"    read.\n",
							"    format(\"delta\").\n",
							"    load(deltaTablePath).\n",
							"    repartition(partitionCount).\n",
							"    write.\n",
							"    option(\"dataChange\", \"false\").\n",
							"    format(\"delta\").\n",
							"    mode(\"overwrite\").\n",
							"    save(deltaTablePath)    "
						],
						"outputs": [],
						"execution_count": 51
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Convert Parquet to Delta\n",
							"You can do an in-place conversion from the Parquet format to Delta.## Cell title\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val parquetPath = s\"/parquet/parquet-table-$sessionId\"\n",
							"\n",
							"val data = spark.range(0,5)\n",
							"data.write.parquet(parquetPath)\n",
							"\n",
							"// Confirm that the data isn't in the Delta format\n",
							"DeltaTable.isDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 52
					},
					{
						"cell_type": "code",
						"source": [
							"DeltaTable.convertToDelta(spark, s\"parquet.`$parquetPath`\")\n",
							"\n",
							"// Confirm that the converted data is now in the Delta format\n",
							"DeltaTable.isDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 53
					},
					{
						"cell_type": "markdown",
						"source": [
							"## SQL Support\n",
							"Delta supports table utility commands through SQL.  You can use SQL to:\n",
							"* Get a DeltaTable's history\n",
							"* Vacuum a DeltaTable\n",
							"* Convert a Parquet file to Delta\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(s\"DESCRIBE HISTORY delta.`$deltaTablePath`\").show()"
						],
						"outputs": [],
						"execution_count": 54
					},
					{
						"cell_type": "code",
						"source": [
							"spark.sql(s\"VACUUM delta.`$deltaTablePath`\").show()"
						],
						"outputs": [],
						"execution_count": 55
					},
					{
						"cell_type": "code",
						"source": [
							"val parquetId = scala.util.Random.nextInt(1000)\n",
							"val parquetPath = s\"/parquet/parquet-table-$sessionId-$parquetId\"\n",
							"\n",
							"val data = spark.range(0,5)\n",
							"data.write.parquet(parquetPath)\n",
							"\n",
							"// Confirm that the data isn't in the Delta format\n",
							"DeltaTable.isDeltaTable(parquetPath)\n",
							"\n",
							"// Use SQL to convert the parquet table to Delta\n",
							"spark.sql(s\"CONVERT TO DELTA parquet.`$parquetPath`\")\n",
							"\n",
							"DeltaTable.isDeltaTable(parquetPath)"
						],
						"outputs": [],
						"execution_count": 56
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Delta-ReadLog')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "f08ba0f5-a309-4d40-8fb9-e808c97d9846"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "scala"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Action items\r\n",
							"1. spark read delta table from adls, use expression to group by for latestchanges.\r\n",
							"2. call write api from adb to synapse sql dedicated pool to store latestchanges.\r\n",
							"3. auth to sql pool using keyvault"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"tags": [
								"parameters"
							]
						},
						"source": [
							"val accountName = \"wplushiramsynapseadlsv2\"\r\n",
							"val accountKey = \"\"\r\n",
							"val containerName = \"wplushiramsynapsefs\"\r\n",
							"val deltaPath = \"synapse/workspaces/wplushiramsynapse/warehouse/lastchanges\""
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"val df_delta = spark.read.format(\"delta\").load(\"abfss://\"+containerName+\"@\"+accountName+\".dfs.core.windows.net/\"+deltaPath)\r\n",
							"df_delta.show()"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val latestonly = df_delta.selectExpr(\"key\", \"struct(time, newValue, deleted) as otherCols\").groupBy(\"key\").agg(max(\"otherCols\").as(\"latest\")).selectExpr(\"key\", \"latest.*\")\r\n",
							"latestonly.show()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"//Add required imports\r\n",
							"import org.apache.spark.sql.DataFrame\r\n",
							"import org.apache.spark.sql.SaveMode\r\n",
							"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
							"\r\n",
							"//new write options\r\n",
							"val writeOptions:Map[String, String] = Map(Constants.SERVER -> \"wplushiramsynapse.sql.azuresynapse.net\", \r\n",
							"Constants.TEMP_FOLDER -> \"abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/synapse/workspaces/wplushiramsynapse/temp\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"//write to Synapse Dedicated SQL Pool (note - default SaveMode is set to ErrorIfExists)\r\n",
							"latestonly.\r\n",
							"    write.\r\n",
							"    options(writeOptions).\r\n",
							"    mode(SaveMode.Overwrite).\r\n",
							"    synapsesql(tableName = \"wplussynapsedw.dbo.latestonly\", \r\n",
							"                tableType = Constants.INTERNAL)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## ref.\r\n",
							"1. https://docs.databricks.com/data/data-sources/azure/synapse-analytics.html#frequently-asked-questions-faq\r\n",
							"2. https://github.com/Azure-Samples/azure-sql-db-databricks/blob/main/notebooks/03b-parallel-switch-in-load-into-partitioned-table-single.ipynb"
						]
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaChanges-Original')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta/Old"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "3dee81a7-3a88-4d79-9ed9-7a9e60df8984"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "scala"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Delta Demo\r\n",
							"\r\n",
							"1.\tSpark, scala delta, apis, sql magics - merge (see [this notebook](https://github.com/hfleitas/synapsedelta/blob/main/notebook/DeltaChanges3.json))\r\n",
							"2.\tServerless, credentials, open query (see sql [script](https://github.com/hfleitas/synapsedelta/blob/main/sqlscript/DeltaServerless.json))\r\n",
							"3.\tIntegration pipeline, copy activity with overwrite if exists (see [pipeline](https://github.com/hfleitas/synapsedelta/blob/main/pipeline/Delta-Import.json))\r\n",
							"4.\tSql pools - merge (see sql [script](https://github.com/hfleitas/synapsedelta/blob/main/sqlscript/DeltaSQLPoolMerge.json))"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.version"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"case class Data(key: String, value: String)\r\n",
							"\r\n",
							"case class ChangeData(key: String, newValue: String, deleted: Boolean, time: Long) {\r\n",
							"  assert(newValue != null ^ deleted)\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val target = Seq(\r\n",
							"  Data(\"a\", \"0\"),\r\n",
							"  Data(\"b\", \"1\"),\r\n",
							"  Data(\"c\", \"2\"),\r\n",
							"  Data(\"d\", \"3\")\r\n",
							").toDF()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sql(\"drop table if exists target\")\r\n",
							"target.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"target\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"// import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"// import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
							"\r\n",
							"val targetDF = spark.sqlContext.sql(\"select * from target\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"select * from target order by key"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"describe extended target"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# 🧂 Shake it up"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changeDataSource = Seq(\r\n",
							"  ChangeData(\"a\", \"10\", deleted = false, time = 0),\r\n",
							"  ChangeData(\"a\", null, deleted = true, time = 1),   // a was updated and then deleted\r\n",
							"  ChangeData(\"b\", null, deleted = true, time = 2),   // b was just deleted once\r\n",
							"  ChangeData(\"c\", null, deleted = true, time = 3),   // c was deleted and then updated twice\r\n",
							"  ChangeData(\"c\", \"20\", deleted = false, time = 4),\r\n",
							"  ChangeData(\"c\", \"200\", deleted = false, time = 5)\r\n",
							").toDF().createOrReplaceTempView(\"changes\")"
						],
						"outputs": [],
						"execution_count": 61
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"### SQL Example"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql \r\n",
							"MERGE INTO target t\r\n",
							"USING (\r\n",
							"  -- Find the latest change for each key based on the timestamp\r\n",
							"  SELECT key, latest.newValue as newValue, latest.deleted as deleted FROM (    \r\n",
							"    -- Note: For nested structs, max on struct is computed as \r\n",
							"    -- max on first struct field, if equal fall back to second fields, and so on.\r\n",
							"    SELECT key, max(struct(time, newValue, deleted)) as latest FROM changes GROUP BY key\r\n",
							"  )\r\n",
							") s\r\n",
							"ON s.key = t.key\r\n",
							"WHEN MATCHED AND s.deleted = true THEN DELETE\r\n",
							"WHEN MATCHED THEN UPDATE SET key = s.key, value = s.newValue\r\n",
							"WHEN NOT MATCHED AND s.deleted = false THEN INSERT (key, value) VALUES (key, newValue)"
						],
						"outputs": [],
						"execution_count": 62
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changesDF = spark.sql(\"select * from changes\")\r\n",
							"changesDF.head()"
						],
						"outputs": [],
						"execution_count": 63
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val latestChangeForEachKey = changesDF.\r\n",
							"selectExpr(\"key\", \"struct(time, newValue, deleted) as otherCols\").\r\n",
							"groupBy(\"key\").\r\n",
							"agg(max(\"otherCols\").\r\n",
							"as(\"latest\")).\r\n",
							"selectExpr(\"key\", \"latest.*\")"
						],
						"outputs": [],
						"execution_count": 64
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.show() // shows the latest change for each key"
						],
						"outputs": [],
						"execution_count": 65
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.createOrReplaceTempView(\"lastchanges\")"
						],
						"outputs": [],
						"execution_count": 66
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"select * from lastchanges"
						],
						"outputs": [],
						"execution_count": 67
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"lastchanges\") "
						],
						"outputs": [],
						"execution_count": 68
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"### SCALA Merge example (Skipped)"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"// deltaTable.as(\"t\")\r\n",
							"//   .merge(\r\n",
							"//     latestChangeForEachKey.as(\"s\"),\r\n",
							"//     \"s.key = t.key\")\r\n",
							"//   .whenMatched(\"s.deleted = true\")\r\n",
							"//   .delete()\r\n",
							"//   .whenMatched()\r\n",
							"//   .updateExpr(Map(\"key\" -> \"s.key\", \"value\" -> \"s.newValue\"))\r\n",
							"//   .whenNotMatched(\"s.deleted = false\")\r\n",
							"//   .insertExpr(Map(\"key\" -> \"s.key\", \"value\" -> \"s.newValue\"))\r\n",
							"//   .execute()"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
							"\r\n",
							"val lastchangesDF = spark.sqlContext.sql(\"select * from lastchanges\")\r\n",
							"\r\n",
							"lastchangesDF.write.option(Constants.\r\n",
							"SERVER, \"wplushiramsynapse.sql.azuresynapse.net\").\r\n",
							"synapsesql(\"wplussynapsedw.dbo.lastchanges\", Constants.INTERNAL)"
						],
						"outputs": [],
						"execution_count": 70
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Resources\r\n",
							"* https://docs.databricks.com/_static/notebooks/merge-in-cdc.html\r\n",
							"* https://techcommunity.microsoft.com/t5/azure-synapse-analytics/query-delta-lake-files-using-t-sql-language-in-azure-synapse/ba-p/2388398\r\n",
							"* https://docs.microsoft.com/en-us/azure/synapse-analytics/sql/query-delta-lake-format\r\n",
							"* https://databricks.com/blog/2019/03/19/efficient-upserts-into-data-lakes-databricks-delta.html\r\n",
							"* https://docs.microsoft.com/en-us/sql/t-sql/statements/merge-transact-sql?view=azure-sqldw-latest\r\n",
							"* https://databricks.com/blog/2019/02/04/introducing-delta-time-travel-for-large-scale-data-lakes.html\r\n",
							"* https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-develop-ctas\r\n",
							"* https://www.mssqltips.com/sqlservertip/6282/azure-data-factory-multiple-file-load-example-part-2/"
						]
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaChanges2')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta/Old"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "9bdc40d6-2e79-4cdf-aa12-d21a73015881"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"case class Data(key: String, value: String)\r\n",
							"\r\n",
							"case class ChangeData(key: String, newValue: String, deleted: Boolean, time: Long) {\r\n",
							"  assert(newValue != null ^ deleted)\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val target = Seq(\r\n",
							"  Data(\"a\", \"0\"),\r\n",
							"  Data(\"b\", \"1\"),\r\n",
							"  Data(\"c\", \"2\"),\r\n",
							"  Data(\"d\", \"3\")\r\n",
							").toDF()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sql(\"drop table if exists target\")\r\n",
							"target.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"target\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
							"\r\n",
							"val targetDF = spark.sqlContext.sql(\"select * from target\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changeDataSource = Seq(\n",
							"  ChangeData(\"a\", \"10\", deleted = false, time = 0),\n",
							"  ChangeData(\"a\", null, deleted = true, time = 1),   // a was updated and then deleted\n",
							"  ChangeData(\"b\", null, deleted = true, time = 2),   // b was just deleted once\n",
							"  ChangeData(\"c\", null, deleted = true, time = 3),   // c was deleted and then updated twice\n",
							"  ChangeData(\"c\", \"20\", deleted = false, time = 4),\n",
							"  ChangeData(\"c\", \"200\", deleted = false, time = 5)\n",
							").toDF().createOrReplaceTempView(\"changes\")\n",
							"\n",
							"// read from last checkpoint \n",
							"\n",
							"// val changeDataSource = Seq(\n",
							"//   ChangeData(\"d\", \"82\", deleted = false, time = 6),\n",
							"//   ChangeData(\"e\", \"19\", deleted = false, time = 7),\n",
							"//   ChangeData(\"f\", \"12\", deleted = false, time = 8),\n",
							"//   ChangeData(\"g\", null, deleted = true, time = 9),\n",
							"//   ChangeData(\"d\", \"21\", deleted = false, time = 10)\n",
							"// ).toDF().createOrReplaceTempView(\"changes\")"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql \r\n",
							"MERGE INTO target t\r\n",
							"USING (\r\n",
							"  -- Find the latest change for each key based on the timestamp\r\n",
							"  SELECT key, latest.newValue as newValue, latest.deleted as deleted FROM (    \r\n",
							"    -- Note: For nested structs, max on struct is computed as \r\n",
							"    -- max on first struct field, if equal fall back to second fields, and so on.\r\n",
							"    SELECT key, max(struct(time, newValue, deleted)) as latest FROM changes GROUP BY key\r\n",
							"  )\r\n",
							") s\r\n",
							"ON s.key = t.key\r\n",
							"WHEN MATCHED AND s.deleted = true THEN DELETE\r\n",
							"WHEN MATCHED THEN UPDATE SET key = s.key, value = s.newValue\r\n",
							"WHEN NOT MATCHED AND s.deleted = false THEN INSERT (key, value) VALUES (key, newValue)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changesDF = spark.sql(\"select * from changes\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val latestChangeForEachKey = changesDF.selectExpr(\"key\", \"struct(time, newValue, deleted) as otherCols\").groupBy(\"key\").agg(max(\"otherCols\").as(\"latest\")).selectExpr(\"key\", \"latest.*\")"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.createOrReplaceTempView(\"lastchanges\")"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"lastchanges\") "
						],
						"outputs": [],
						"execution_count": 15
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaChanges3')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Delta/Old"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "413f5533-b42d-4bbb-ad72-d21faf055903"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "scala"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Delta Demo\r\n",
							"\r\n",
							"1.\tSpark, scala delta, apis, sql magics - merge (see [this notebook](https://github.com/hfleitas/synapsedelta/blob/main/notebook/DeltaChanges3.json))\r\n",
							"2.\tServerless, credentials, open query (see sql [script](https://github.com/hfleitas/synapsedelta/blob/main/sqlscript/DeltaServerless.json))\r\n",
							"3.\tIntegration pipeline, copy activity with overwrite if exists (see [pipeline](https://github.com/hfleitas/synapsedelta/blob/main/pipeline/Delta-Import.json))\r\n",
							"4.\tSql pools - merge (see sql [script](https://github.com/hfleitas/synapsedelta/blob/main/sqlscript/DeltaSQLPoolMerge.json))"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"spark.version"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"source": [
							"case class Data(key: String, value: String)\r\n",
							"\r\n",
							"case class ChangeData(key: String, newValue: String, deleted: Boolean, time: Long) {\r\n",
							"  assert(newValue != null ^ deleted)\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 55
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val target = Seq(\r\n",
							"  Data(\"a\", \"0\"),\r\n",
							"  Data(\"b\", \"1\"),\r\n",
							"  Data(\"c\", \"2\"),\r\n",
							"  Data(\"d\", \"3\")\r\n",
							").toDF()"
						],
						"outputs": [],
						"execution_count": 56
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sql(\"drop table if exists target\")\r\n",
							"target.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"target\")"
						],
						"outputs": [],
						"execution_count": 57
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"// import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"// import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
							"\r\n",
							"val targetDF = spark.sqlContext.sql(\"select * from target\")"
						],
						"outputs": [],
						"execution_count": 58
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"select * from target order by key"
						],
						"outputs": [],
						"execution_count": 59
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"describe extended target"
						],
						"outputs": [],
						"execution_count": 60
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# 🧂 Shake it up"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changeDataSource = Seq(\r\n",
							"  ChangeData(\"a\", \"10\", deleted = false, time = 0),\r\n",
							"  ChangeData(\"a\", null, deleted = true, time = 1),   // a was updated and then deleted\r\n",
							"  ChangeData(\"b\", null, deleted = true, time = 2),   // b was just deleted once\r\n",
							"  ChangeData(\"c\", null, deleted = true, time = 3),   // c was deleted and then updated twice\r\n",
							"  ChangeData(\"c\", \"20\", deleted = false, time = 4),\r\n",
							"  ChangeData(\"c\", \"200\", deleted = false, time = 5)\r\n",
							").toDF().createOrReplaceTempView(\"changes\")"
						],
						"outputs": [],
						"execution_count": 61
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"### SQL Example"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql \r\n",
							"MERGE INTO target t\r\n",
							"USING (\r\n",
							"  -- Find the latest change for each key based on the timestamp\r\n",
							"  SELECT key, latest.newValue as newValue, latest.deleted as deleted FROM (    \r\n",
							"    -- Note: For nested structs, max on struct is computed as \r\n",
							"    -- max on first struct field, if equal fall back to second fields, and so on.\r\n",
							"    SELECT key, max(struct(time, newValue, deleted)) as latest FROM changes GROUP BY key\r\n",
							"  )\r\n",
							") s\r\n",
							"ON s.key = t.key\r\n",
							"WHEN MATCHED AND s.deleted = true THEN DELETE\r\n",
							"WHEN MATCHED THEN UPDATE SET key = s.key, value = s.newValue\r\n",
							"WHEN NOT MATCHED AND s.deleted = false THEN INSERT (key, value) VALUES (key, newValue)"
						],
						"outputs": [],
						"execution_count": 62
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val changesDF = spark.sql(\"select * from changes\")\r\n",
							"changesDF.head()"
						],
						"outputs": [],
						"execution_count": 63
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"val latestChangeForEachKey = changesDF.\r\n",
							"selectExpr(\"key\", \"struct(time, newValue, deleted) as otherCols\").\r\n",
							"groupBy(\"key\").\r\n",
							"agg(max(\"otherCols\").\r\n",
							"as(\"latest\")).\r\n",
							"selectExpr(\"key\", \"latest.*\")"
						],
						"outputs": [],
						"execution_count": 64
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.show() // shows the latest change for each key"
						],
						"outputs": [],
						"execution_count": 65
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.createOrReplaceTempView(\"lastchanges\")"
						],
						"outputs": [],
						"execution_count": 66
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"select * from lastchanges"
						],
						"outputs": [],
						"execution_count": 67
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"latestChangeForEachKey.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"lastchanges\") "
						],
						"outputs": [],
						"execution_count": 68
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"### SCALA Merge example (Skipped)"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"// deltaTable.as(\"t\")\r\n",
							"//   .merge(\r\n",
							"//     latestChangeForEachKey.as(\"s\"),\r\n",
							"//     \"s.key = t.key\")\r\n",
							"//   .whenMatched(\"s.deleted = true\")\r\n",
							"//   .delete()\r\n",
							"//   .whenMatched()\r\n",
							"//   .updateExpr(Map(\"key\" -> \"s.key\", \"value\" -> \"s.newValue\"))\r\n",
							"//   .whenNotMatched(\"s.deleted = false\")\r\n",
							"//   .insertExpr(Map(\"key\" -> \"s.key\", \"value\" -> \"s.newValue\"))\r\n",
							"//   .execute()"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
							"\r\n",
							"val lastchangesDF = spark.sqlContext.sql(\"select * from lastchanges\")\r\n",
							"\r\n",
							"lastchangesDF.write.option(Constants.\r\n",
							"SERVER, \"wplushiramsynapse.sql.azuresynapse.net\").\r\n",
							"synapsesql(\"wplussynapsedw.dbo.lastchanges\", Constants.INTERNAL)"
						],
						"outputs": [],
						"execution_count": 70
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Resources\r\n",
							"* https://docs.databricks.com/_static/notebooks/merge-in-cdc.html\r\n",
							"* https://techcommunity.microsoft.com/t5/azure-synapse-analytics/query-delta-lake-files-using-t-sql-language-in-azure-synapse/ba-p/2388398\r\n",
							"* https://docs.microsoft.com/en-us/azure/synapse-analytics/sql/query-delta-lake-format\r\n",
							"* https://databricks.com/blog/2019/03/19/efficient-upserts-into-data-lakes-databricks-delta.html\r\n",
							"* https://docs.microsoft.com/en-us/sql/t-sql/statements/merge-transact-sql?view=azure-sqldw-latest\r\n",
							"* https://databricks.com/blog/2019/02/04/introducing-delta-time-travel-for-large-scale-data-lakes.html\r\n",
							"* https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-develop-ctas\r\n",
							"* https://www.mssqltips.com/sqlservertip/6282/azure-data-factory-multiple-file-load-example-part-2/"
						]
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/E2E_MLFLOW_Sklearn_ADLS')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "e9f76017-a49f-4cce-a95e-d8c8c63ccec5"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Linear Regression (Sklearn)\r\n",
							"This tutorial shows how to use Predict on a Sklearn model.\r\n",
							"Duration 00:02:38\r\n",
							"# Train SKLearn Model"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import fsspec\r\n",
							"import pandas\r\n",
							"\r\n",
							"fsspec_handle = fsspec.open('abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/LengthOfStay_cooked_small.csv')\r\n",
							"\r\n",
							"with fsspec_handle.open() as f:\r\n",
							"    train_df = pandas.read_csv(f)"
						],
						"outputs": [],
						"execution_count": 56
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"train_df.head()"
						],
						"outputs": [],
						"execution_count": 57
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import os\r\n",
							"import shutil\r\n",
							"import mlflow\r\n",
							"import json\r\n",
							"from mlflow.utils import model_utils\r\n",
							"\r\n",
							"import numpy as np\r\n",
							"import pandas as pd\r\n",
							"\r\n",
							"from sklearn.linear_model import LinearRegression"
						],
						"outputs": [],
						"execution_count": 58
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"class LinearRegressionModel():\r\n",
							"  _ARGS_FILENAME = 'args.json'\r\n",
							"  FEATURES_KEY = 'features'\r\n",
							"  TARGETS_KEY = 'targets'\r\n",
							"  TARGETS_PRED_KEY = 'targets_pred'\r\n",
							"\r\n",
							"  def __init__(self, fit_intercept, nb_input_features=9, nb_output_features=1):\r\n",
							"    self.fit_intercept = fit_intercept\r\n",
							"    self.nb_input_features = nb_input_features\r\n",
							"    self.nb_output_features = nb_output_features\r\n",
							"\r\n",
							"  def get_args(self):\r\n",
							"    args = {\r\n",
							"        'nb_input_features': self.nb_input_features,\r\n",
							"        'nb_output_features': self.nb_output_features,\r\n",
							"        'fit_intercept': self.fit_intercept\r\n",
							"    }\r\n",
							"    return args\r\n",
							"\r\n",
							"  def create_model(self):\r\n",
							"    self.model = LinearRegression(fit_intercept=self.fit_intercept)\r\n",
							"\r\n",
							"  def train(self, dataset):\r\n",
							"\r\n",
							"    features = np.stack([sample for sample in iter(\r\n",
							"        dataset[LinearRegressionModel.FEATURES_KEY])], axis=0)\r\n",
							"\r\n",
							"    targets = np.stack([sample for sample in iter(\r\n",
							"        dataset[LinearRegressionModel.TARGETS_KEY])], axis=0)\r\n",
							"\r\n",
							"\r\n",
							"    self.model.fit(features, targets)\r\n",
							"\r\n",
							"  def predict(self, dataset):\r\n",
							"    features = np.stack([sample for sample in iter(\r\n",
							"        dataset[LinearRegressionModel.FEATURES_KEY])], axis=0)\r\n",
							"    targets_pred = self.model.predict(features)\r\n",
							"    return targets_pred\r\n",
							"\r\n",
							"  def save(self, path):\r\n",
							"    if os.path.exists(path):\r\n",
							"      shutil.rmtree(path)\r\n",
							"\r\n",
							"    # save the sklearn model with mlflow\r\n",
							"    mlflow.sklearn.save_model(self.model, path)\r\n",
							"\r\n",
							"    # save args\r\n",
							"    self._save_args(path)\r\n",
							"\r\n",
							"  def _save_args(self, path):\r\n",
							"    args_filename = os.path.join(path, LinearRegressionModel._ARGS_FILENAME)\r\n",
							"    with open(args_filename, 'w') as f:\r\n",
							"      args = self.get_args()\r\n",
							"      json.dump(args, f)"
						],
						"outputs": [],
						"execution_count": 59
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"def train(train_df, output_model_path):\r\n",
							"  print(f\"Start to train LinearRegressionModel.\")\r\n",
							"\r\n",
							"  # Initialize input dataset\r\n",
							"  dataset = train_df.to_numpy()\r\n",
							"  datasets = {}\r\n",
							"  datasets['targets'] = dataset[:, -1]\r\n",
							"  datasets['features'] = dataset[:, :9]\r\n",
							"\r\n",
							"  # Initialize model class obj\r\n",
							"  model_class = LinearRegressionModel(fit_intercept=10)\r\n",
							"  with mlflow.start_run(nested=True) as run:\r\n",
							"    model_class.create_model()\r\n",
							"    model_class.train(datasets)\r\n",
							"    model_class.save(output_model_path)\r\n",
							"    print(model_class.predict(datasets))"
						],
						"outputs": [],
						"execution_count": 60
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"train(train_df, './artifacts/output')"
						],
						"outputs": [],
						"execution_count": 61
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Upload to ADLS"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import fsspec\r\n",
							"import pandas \r\n",
							"from fsspec.core import split_protocol\r\n",
							"\r\n",
							"STORAGE_PATH = 'abfs://wplushiramsynapsefs/predict/models/mlflow/sklearn/e2e_linear_regression/'\r\n",
							"\r\n",
							"protocol, _ = split_protocol(STORAGE_PATH)\r\n",
							"print (protocol)\r\n",
							"\r\n",
							"fs = fsspec.filesystem(protocol)\r\n",
							"fs.put(\r\n",
							"    './artifacts/output',\r\n",
							"    STORAGE_PATH, \r\n",
							"    recursive=True, overwrite=True)"
						],
						"outputs": [],
						"execution_count": 62
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Import SynapseML Predict"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import pandas as pd\r\n",
							"\r\n",
							"from pyspark.sql import SparkSession\r\n",
							"from pyspark.sql.functions import col, pandas_udf,udf,lit\r\n",
							"\r\n",
							"import azure.synapse.ml.predict as pcontext\r\n",
							"import azure.synapse.ml.predict.utils._logger as synapse_predict_logger\r\n",
							"\r\n",
							"print(pcontext.__version__)"
						],
						"outputs": [],
						"execution_count": 63
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Set some input parameters\r\n",
							"Model and Data are both stored on ADLS. Must use full abfss path, not the mount.\r\n",
							"\r\n",
							"Return type is int"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DATA_FILE = \"abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/LengthOfStay_cooked_small.csv\"\r\n",
							"ADLS_MODEL_URI_SKLEARN = \"abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/predict/models/mlflow/sklearn/e2e_linear_regression/\"\r\n",
							"RETURN_TYPES = \"INT\""
						],
						"outputs": [],
						"execution_count": 64
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Enable SynapseML predict\r\n",
							"Set the spark conf spark.synapse.ml.predict.enabled as true to enable the library."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"spark.conf.set(\"spark.synapse.ml.predict.enabled\",\"true\")"
						],
						"outputs": [],
						"execution_count": 65
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Bind Model"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"model = pcontext.bind_model(RETURN_TYPES, \"mlflow\", \"sklearn_linear_regression\", ADLS_MODEL_URI_SKLEARN).register()"
						],
						"outputs": [],
						"execution_count": 66
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Load Data"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"df = spark.read \\\r\n",
							"    .format(\"csv\") \\\r\n",
							"    .option(\"header\", \"true\") \\\r\n",
							"    .csv(DATA_FILE,\r\n",
							"        inferSchema=True)\r\n",
							"df = df.select(df.columns[:9])\r\n",
							"df.createOrReplaceTempView('data')\r\n",
							"df.show(10)\r\n",
							"df"
						],
						"outputs": [],
						"execution_count": 67
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql \r\n",
							"select * from data"
						],
						"outputs": [],
						"execution_count": 68
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"predictions = spark.sql(\r\n",
							"                  \"\"\"\r\n",
							"                      SELECT PREDICT('sklearn_linear_regression', *) AS predict FROM data\r\n",
							"                  \"\"\"\r\n",
							"              ).show()"
						],
						"outputs": [],
						"execution_count": 69
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Special Thanks\r\n",
							"* Ajay Agarwal\r\n",
							"* Tian Wei\r\n",
							"* Nellie Gustafsson"
						]
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Filemount')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SparkR"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "c8eca52f-47cf-4c08-9b26-1fcb3ebafff6"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"library(notebookutils)"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"source": [
							"# Via Linked Service (recommend):\r\n",
							"mssparkutils.fs.mount( \r\n",
							"    \"abfss://nyctaxistaging@wplushiramsynapseadlsv2.dfs.core.windows.net\", \r\n",
							"    \"/Dimension\", \r\n",
							"    list(\"linkedService\" = \"nyctaxistaging\")\r\n",
							") "
						],
						"outputs": [],
						"execution_count": 6
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HiSpark')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "81443c93-b371-445e-8e76-ace6cdce067a"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"print('hi spark')"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"import pkg_resources\r\n",
							"for d in pkg_resources.working_set:\r\n",
							"     print(d)"
						],
						"outputs": [],
						"execution_count": 2
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Params')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "c2304ea0-17fb-4577-86c6-e96ccd4b81c7"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"tags": [
								"parameters"
							]
						},
						"source": [
							"p1 = 5"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"p=p1\r\n",
							"print(p)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from azureml.opendatasets import PublicHolidays\r\n",
							"\r\n",
							"from datetime import datetime\r\n",
							"from dateutil import parser\r\n",
							"from dateutil.relativedelta import relativedelta\r\n",
							"\r\n",
							"\r\n",
							"end_date = datetime.today()\r\n",
							"start_date = datetime.today() - relativedelta(months=6)\r\n",
							"hol = PublicHolidays(start_date=start_date, end_date=end_date)\r\n",
							"hol_df = hol.to_spark_dataframe()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hol = hol_df.limit(p)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"csv_path = \"hol.csv\"\r\n",
							"hol.write.csv(csv_path, mode = 'overwrite', header = 'true')"
						],
						"outputs": [],
						"execution_count": 5
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Read API demo')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UPR"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "bcc49c0e-143f-48f5-b106-c38b91abac52"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "scala"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Ref: https://docs.microsoft.com/en-us/azure/synapse-analytics/spark/synapse-spark-sql-pool-import-export#usage"
						]
					},
					{
						"cell_type": "code",
						"source": [
							"val df = spark.read.synapsesql(\"wplussynapsedw.staging.orcsample\")"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"df"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"df.createOrReplaceTempView(\"demo\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"\r\n",
							"select * from demo"
						],
						"outputs": [],
						"execution_count": 5
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SKLearn-Predict')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "47a8a5fb-d9be-4274-a192-7ad077101dd0"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import fsspec\r\n",
							"import pandas\r\n",
							"from fsspec.core import split_protocol\r\n",
							"\r\n",
							"fsspec_handle = fsspec.open('abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/dominicks_OJ_train.csv')\r\n",
							"\r\n",
							"with fsspec_handle.open() as f:\r\n",
							"    train_df = pandas.read_csv(f)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# LinearRegresssion\r\n",
							"fails due to schema of dataset"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import os\r\n",
							"import shutil\r\n",
							"import mlflow\r\n",
							"import json\r\n",
							"from mlflow.utils import model_utils\r\n",
							"import numpy as np\r\n",
							"import pandas as pd\r\n",
							"from sklearn.linear_model import LinearRegression\r\n",
							"\r\n",
							"class LinearRegressionModel():\r\n",
							"    _ARGS_FILENAME = 'args.json'\r\n",
							"    FEATURES_KEY = 'features'\r\n",
							"    TARGETS_KEY = 'targets'\r\n",
							"    TARGETS_PRED_KEY = 'targets_pred'\r\n",
							"\r\n",
							"    def __init__(self, fit_intercept, nb_input_features=9, nb_output_features=1):\r\n",
							"        self.fit_intercept = fit_intercept\r\n",
							"        self.nb_input_features = nb_input_features\r\n",
							"        self.nb_output_features = nb_output_features\r\n",
							"\r\n",
							"    def get_args(self):\r\n",
							"        args = {\r\n",
							"            'nb_input_features': self.nb_input_features,\r\n",
							"            'nb_output_features': self.nb_output_features,\r\n",
							"            'fit_intercept': self.fit_intercept\r\n",
							"        }\r\n",
							"        return args\r\n",
							"\r\n",
							"    def create_model(self):\r\n",
							"        self.model = LinearRegression(fit_intercept=self.fit_intercept)\r\n",
							"\r\n",
							"    def train(self, dataset):\r\n",
							"        features = np.stack([sample for sample in iter(\r\n",
							"            dataset[LinearRegressionModel.FEATURES_KEY])], axis=0)\r\n",
							"        targets = np.stack([sample for sample in iter(\r\n",
							"            dataset[LinearRegressionModel.TARGETS_KEY])], axis=0)\r\n",
							"        self.model.fit(features, targets)\r\n",
							"\r\n",
							"    def predict(self, dataset):\r\n",
							"        features = np.stack([sample for sample in iter(\r\n",
							"            dataset[LinearRegressionModel.FEATURES_KEY])], axis=0)\r\n",
							"        targets_pred = self.model.predict(features)\r\n",
							"        return targets_pred\r\n",
							"\r\n",
							"    def save(self, path):\r\n",
							"        if os.path.exists(path):\r\n",
							"            shutil.rmtree(path)\r\n",
							"        mlflow.sklearn.save_model(self.model, path)\r\n",
							"        self._save_args(path)\r\n",
							"\r\n",
							"    def _save_args(self, path):\r\n",
							"        args_filename = os.path.join(path, LinearRegressionModel._ARGS_FILENAME)\r\n",
							"        with open(args_filename, 'w') as f:\r\n",
							"            args = self.get_args()\r\n",
							"            json.dump(args, f)\r\n",
							"\r\n",
							"def train(train_df, output_model_path):\r\n",
							"    print(f\"Start to train LinearRegressionModel.\")\r\n",
							"\r\n",
							"    dataset = train_df.to_numpy()\r\n",
							"    datasets = {}\r\n",
							"    datasets['targets'] = dataset[:, -1]\r\n",
							"    datasets['features'] = dataset[:, :9]\r\n",
							"\r\n",
							"    model_class = LinearRegressionModel(fit_intercept=10)\r\n",
							"    with mlflow.start_run(nested=True) as run:\r\n",
							"        model_class.create_model()\r\n",
							"        model_class.train(datasets)\r\n",
							"        model_class.save(output_model_path)\r\n",
							"        print(model_class.predict(datasets))\r\n",
							"\r\n",
							"train(train_df, './artifacts/output')\r\n",
							""
						],
						"outputs": [],
						"execution_count": 6
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SparkSQLCTE')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "09c21e28-bfe3-4516-9a90-a74d227d5781"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\n",
							"df = spark.sql(\"SELECT * FROM `default`.`lastchanges`\")\n",
							"# df.show(10)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"select * from default.lastchanges"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql \r\n",
							"with t as (\r\n",
							"    SELECT 'a' as x,'b' as y\r\n",
							") \r\n",
							"select * from t\r\n",
							""
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"\r\n",
							"WITH CTE \r\n",
							"AS \r\n",
							"    (SELECT key as x, time, deleted FROM default.lastchanges)\r\n",
							"\r\n",
							"SELECT * FROM CTE"
						],
						"outputs": [],
						"execution_count": 6
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TestPerformanceTuning')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "from Ismael",
				"folder": {
					"name": "Spark"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "92a5ddab-ab6b-4d81-8b8a-e554128cb512"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"# Start your Spark session.\r\n",
							"spark\r\n",
							"\r\n",
							"# Disable BroadcastHashJoin, so Spark will use standard SortMergeJoin. Currently, Hyperspace indexes utilize SortMergeJoin to speed up query.\r\n",
							"spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", -1)\r\n",
							"\r\n",
							"# Verify that BroadcastHashJoin is set correctly \r\n",
							"print(spark.conf.get(\"spark.sql.autoBroadcastJoinThreshold\"))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.types import StructField, StructType, StringType, IntegerType\r\n",
							"\r\n",
							"# Sample department records\r\n",
							"departments = [(10, \"Accounting\", \"New York\"), (20, \"Research\", \"Dallas\"), (30, \"Sales\", \"Chicago\"), (40, \"Operations\", \"Boston\")]\r\n",
							"\r\n",
							"# Sample employee records\r\n",
							"employees = [(7369, \"SMITH\", 20), (7499, \"ALLEN\", 30), (7521, \"WARD\", 30), (7566, \"JONES\", 20), (7698, \"BLAKE\", 30)]\r\n",
							"\r\n",
							"# Create a schema for the dataframe\r\n",
							"dept_schema = StructType([StructField('deptId', IntegerType(), True), StructField('deptName', StringType(), True), StructField('location', StringType(), True)])\r\n",
							"emp_schema = StructType([StructField('empId', IntegerType(), True), StructField('empName', StringType(), True), StructField('deptId', IntegerType(), True)])\r\n",
							"\r\n",
							"departments_df = spark.createDataFrame(departments, dept_schema)\r\n",
							"employees_df = spark.createDataFrame(employees, emp_schema)\r\n",
							"\r\n",
							"#TODO ** customize this location path **\r\n",
							"emp_Location = \"/perftest/employees.parquet\"\r\n",
							"dept_Location = \"/perftest/departments.parquet\"\r\n",
							"\r\n",
							"employees_df.write.mode(\"overwrite\").parquet(emp_Location)\r\n",
							"departments_df.write.mode(\"overwrite\").parquet(dept_Location)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# emp_Location and dept_Location are the user-defined locations above to save parquet files\r\n",
							"emp_DF = spark.read.parquet(emp_Location)\r\n",
							"dept_DF = spark.read.parquet(dept_Location)\r\n",
							"\r\n",
							"# Verify the data is available and correct\r\n",
							"emp_DF.show()\r\n",
							"dept_DF.show()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.fs.ls(\"/\")\r\n",
							"##mssparkutils.fs.rm(\"/<yourpath>\", True)\r\n",
							"##mssparkutils.fs.ls(\"/\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from hyperspace import *\r\n",
							"\r\n",
							"# Create an instance of Hyperspace\r\n",
							"hyperspace = Hyperspace(spark)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create index configurations\r\n",
							"emp_IndexConfig = IndexConfig(\"empIndex1\", [\"deptId\"], [\"empName\"])\r\n",
							"dept_IndexConfig1 = IndexConfig(\"deptIndex1\", [\"deptId\"], [\"deptName\"])\r\n",
							"dept_IndexConfig2 = IndexConfig(\"deptIndex2\", [\"location\"], [\"deptName\"])\r\n",
							"\r\n",
							"# Create indexes from configurations\r\n",
							"hyperspace.createIndex(emp_DF, emp_IndexConfig)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig1)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig2)"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.deleteIndex(\"empIndex1\")\r\n",
							"hyperspace.deleteIndex(\"deptIndex1\")\r\n",
							"hyperspace.deleteIndex(\"deptIndex2\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.vacuumIndex(\"empIndex1\")\r\n",
							"hyperspace.vacuumIndex(\"deptIndex1\")\r\n",
							"hyperspace.vacuumIndex(\"deptIndex2\")\r\n",
							"hyperspace.indexes().show()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create indexes from configurations\r\n",
							"hyperspace.createIndex(emp_DF, emp_IndexConfig)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig1)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig2)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.indexes().show()"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Enable Hyperspace\r\n",
							"Hyperspace.enable(spark)\r\n",
							"\r\n",
							"emp_DF = spark.read.parquet(emp_Location)\r\n",
							"dept_DF = spark.read.parquet(dept_Location)\r\n",
							"\r\n",
							"emp_DF.show(5)\r\n",
							"dept_DF.show(5)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Filter with equality predicate\r\n",
							"\r\n",
							"eqFilter = dept_DF.filter(\"\"\"deptId = 20\"\"\").select(\"\"\"deptName\"\"\")\r\n",
							"eqFilter.show()"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# eqFilter.explain(True)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql import SparkSession\r\n",
							"\r\n",
							"emp_DF.createOrReplaceTempView(\"EMP\")\r\n",
							"dept_DF.createOrReplaceTempView(\"DEPT\")\r\n",
							"\r\n",
							"joinQuery = spark.sql(\"SELECT EMP.empName, DEPT.deptName FROM EMP, DEPT WHERE EMP.deptId = DEPT.deptId\")\r\n",
							"\r\n",
							"joinQuery.show()\r\n",
							"##joinQuery.explain(True)"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"joinQuery.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"Employees\")"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"\r\n",
							"OPTIMIZE Employees"
						],
						"outputs": [],
						"execution_count": 21
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TestPerformanceTuningDelta')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Spark"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "bd0d05cb-a63f-41df-8458-d80c6bbb5e67"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"# Start your Spark session.\r\n",
							"spark\r\n",
							"\r\n",
							"# Disable BroadcastHashJoin, so Spark will use standard SortMergeJoin. Currently, Hyperspace indexes utilize SortMergeJoin to speed up query.\r\n",
							"spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", -1)\r\n",
							"\r\n",
							"# Verify that BroadcastHashJoin is set correctly \r\n",
							"print(spark.conf.get(\"spark.sql.autoBroadcastJoinThreshold\"))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.types import StructField, StructType, StringType, IntegerType\r\n",
							"\r\n",
							"# Sample department records\r\n",
							"departments = [(10, \"Accounting\", \"New York\"), (20, \"Research\", \"Dallas\"), (30, \"Sales\", \"Chicago\"), (40, \"Operations\", \"Boston\")]\r\n",
							"\r\n",
							"# Sample employee records\r\n",
							"employees = [(7369, \"SMITH\", 20), (7499, \"ALLEN\", 30), (7521, \"WARD\", 30), (7566, \"JONES\", 20), (7698, \"BLAKE\", 30)]\r\n",
							"\r\n",
							"# Create a schema for the dataframe\r\n",
							"dept_schema = StructType([StructField('deptId', IntegerType(), True), StructField('deptName', StringType(), True), StructField('location', StringType(), True)])\r\n",
							"emp_schema = StructType([StructField('empId', IntegerType(), True), StructField('empName', StringType(), True), StructField('deptId', IntegerType(), True)])\r\n",
							"\r\n",
							"departments_df = spark.createDataFrame(departments, dept_schema)\r\n",
							"employees_df = spark.createDataFrame(employees, emp_schema)\r\n",
							"\r\n",
							"#TODO ** customize this location path **\r\n",
							"emp_Location = \"/perftest/employees.parquet\"\r\n",
							"dept_Location = \"/perftest/departments.parquet\"\r\n",
							"\r\n",
							"employees_df.write.format(\"delta\").mode(\"overwrite\").save(emp_Location)\r\n",
							"departments_df.write.format(\"delta\").mode(\"overwrite\").save(dept_Location)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# emp_Location and dept_Location are the user-defined locations above to save parquet files\r\n",
							"emp_DF = spark.read.format(\"delta\").load(emp_Location)\r\n",
							"dept_DF = spark.read.format(\"delta\").load(dept_Location)\r\n",
							"\r\n",
							"# Verify the data is available and correct\r\n",
							"emp_DF.show()\r\n",
							"dept_DF.show()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.fs.ls(\"/\")\r\n",
							"##mssparkutils.fs.rm(\"/<yourpath>\", True)\r\n",
							"##mssparkutils.fs.ls(\"/\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from hyperspace import *\r\n",
							"\r\n",
							"# Create an instance of Hyperspace\r\n",
							"hyperspace = Hyperspace(spark)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create index configurations\r\n",
							"\r\n",
							"emp_IndexConfig = IndexConfig(\"empIndex1\", [\"deptId\"], [\"empName\"])\r\n",
							"dept_IndexConfig1 = IndexConfig(\"deptIndex1\", [\"deptId\"], [\"deptName\"])\r\n",
							"dept_IndexConfig2 = IndexConfig(\"deptIndex2\", [\"location\"], [\"deptName\"])"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Run as needed\r\n",
							"If you had index definitions then you may want to delete and vacuum them"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.deleteIndex(\"empIndex1\")\r\n",
							"hyperspace.deleteIndex(\"deptIndex1\")\r\n",
							"hyperspace.deleteIndex(\"deptIndex2\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.vacuumIndex(\"empIndex1\")\r\n",
							"hyperspace.vacuumIndex(\"deptIndex1\")\r\n",
							"hyperspace.vacuumIndex(\"deptIndex2\")\r\n",
							"hyperspace.indexes().show()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Index creation\r\n",
							"The error for delta:\r\n",
							"\r\n",
							"Only creating index over HDFS file based scan nodes is supported. Source plan: FileScan parquet [empId#586,empName#587,deptId#588] Batched: true, DataFilters: [], Format: Parquet, Location: "
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create indexes from configurations\r\n",
							"\r\n",
							"hyperspace.createIndex(emp_DF, emp_IndexConfig)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig1)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig2)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.indexes().show()"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Enable Hyperspace\r\n",
							"Hyperspace.enable(spark)\r\n",
							"\r\n",
							"emp_DF = spark.read.parquet(emp_Location)\r\n",
							"dept_DF = spark.read.parquet(dept_Location)\r\n",
							"\r\n",
							"emp_DF.show(5)\r\n",
							"dept_DF.show(5)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Filter with equality predicate\r\n",
							"\r\n",
							"eqFilter = dept_DF.filter(\"\"\"deptId = 20\"\"\").select(\"\"\"deptName\"\"\")\r\n",
							"eqFilter.show()"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"eqFilter.explain(True)"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql import SparkSession\r\n",
							"\r\n",
							"emp_DF.createOrReplaceTempView(\"EMP\")\r\n",
							"dept_DF.createOrReplaceTempView(\"DEPT\")\r\n",
							"\r\n",
							"joinQuery = spark.sql(\"SELECT EMP.empName, DEPT.deptName FROM EMP, DEPT WHERE EMP.deptId = DEPT.deptId\")\r\n",
							"\r\n",
							"joinQuery.show()\r\n",
							"##joinQuery.explain(True)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"joinQuery.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"Employees\")"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Z Order\r\n",
							"This works as long as the format is **Delta**"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"\r\n",
							"OPTIMIZE Employees"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"\r\n",
							"select count(*) from Employees where deptName like 'Research%';"
						],
						"outputs": [],
						"execution_count": 19
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TestPerformanceTuningParquet')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Spark"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "24e83685-38d9-48cd-90af-eb1c3931129f"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"# Start your Spark session.\r\n",
							"spark\r\n",
							"\r\n",
							"# Disable BroadcastHashJoin, so Spark will use standard SortMergeJoin. Currently, Hyperspace indexes utilize SortMergeJoin to speed up query.\r\n",
							"spark.conf.set(\"spark.sql.autoBroadcastJoinThreshold\", -1)\r\n",
							"\r\n",
							"# Verify that BroadcastHashJoin is set correctly \r\n",
							"print(spark.conf.get(\"spark.sql.autoBroadcastJoinThreshold\"))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.types import StructField, StructType, StringType, IntegerType\r\n",
							"\r\n",
							"# Sample department records\r\n",
							"departments = [(10, \"Accounting\", \"New York\"), (20, \"Research\", \"Dallas\"), (30, \"Sales\", \"Chicago\"), (40, \"Operations\", \"Boston\")]\r\n",
							"\r\n",
							"# Sample employee records\r\n",
							"employees = [(7369, \"SMITH\", 20), (7499, \"ALLEN\", 30), (7521, \"WARD\", 30), (7566, \"JONES\", 20), (7698, \"BLAKE\", 30)]\r\n",
							"\r\n",
							"# Create a schema for the dataframe\r\n",
							"dept_schema = StructType([StructField('deptId', IntegerType(), True), StructField('deptName', StringType(), True), StructField('location', StringType(), True)])\r\n",
							"emp_schema = StructType([StructField('empId', IntegerType(), True), StructField('empName', StringType(), True), StructField('deptId', IntegerType(), True)])\r\n",
							"\r\n",
							"departments_df = spark.createDataFrame(departments, dept_schema)\r\n",
							"employees_df = spark.createDataFrame(employees, emp_schema)\r\n",
							"\r\n",
							"#TODO ** customize this location path **\r\n",
							"emp_Location = \"/perftest/employees.parquet\"\r\n",
							"dept_Location = \"/perftest/departments.parquet\"\r\n",
							"\r\n",
							"employees_df.write.mode(\"overwrite\").parquet(emp_Location)\r\n",
							"departments_df.write.mode(\"overwrite\").parquet(dept_Location)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# emp_Location and dept_Location are the user-defined locations above to save parquet files\r\n",
							"emp_DF = spark.read.parquet(emp_Location)\r\n",
							"dept_DF = spark.read.parquet(dept_Location)\r\n",
							"\r\n",
							"# Verify the data is available and correct\r\n",
							"emp_DF.show()\r\n",
							"dept_DF.show()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.fs.ls(\"/\")\r\n",
							"##mssparkutils.fs.rm(\"/<yourpath>\", True)\r\n",
							"##mssparkutils.fs.ls(\"/\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from hyperspace import *\r\n",
							"\r\n",
							"# Create an instance of Hyperspace\r\n",
							"hyperspace = Hyperspace(spark)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create index configurations\r\n",
							"\r\n",
							"emp_IndexConfig = IndexConfig(\"empIndex1\", [\"deptId\"], [\"empName\"])\r\n",
							"dept_IndexConfig1 = IndexConfig(\"deptIndex1\", [\"deptId\"], [\"deptName\"])\r\n",
							"dept_IndexConfig2 = IndexConfig(\"deptIndex2\", [\"location\"], [\"deptName\"])"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Run as needed\r\n",
							"If you had index definitions then you may want to delete and vacuum them"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.deleteIndex(\"empIndex1\")\r\n",
							"hyperspace.deleteIndex(\"deptIndex1\")\r\n",
							"hyperspace.deleteIndex(\"deptIndex2\")\r\n",
							""
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.vacuumIndex(\"empIndex1\")\r\n",
							"hyperspace.vacuumIndex(\"deptIndex1\")\r\n",
							"hyperspace.vacuumIndex(\"deptIndex2\")\r\n",
							"hyperspace.indexes().show()"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Index creation"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create indexes from configurations\r\n",
							"\r\n",
							"hyperspace.createIndex(emp_DF, emp_IndexConfig)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig1)\r\n",
							"hyperspace.createIndex(dept_DF, dept_IndexConfig2)"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"hyperspace.indexes().show()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Enable Hyperspace\r\n",
							"Hyperspace.enable(spark)\r\n",
							"\r\n",
							"emp_DF = spark.read.parquet(emp_Location)\r\n",
							"dept_DF = spark.read.parquet(dept_Location)\r\n",
							"\r\n",
							"emp_DF.show(5)\r\n",
							"dept_DF.show(5)"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Filter with equality predicate\r\n",
							"\r\n",
							"eqFilter = dept_DF.filter(\"\"\"deptId = 20\"\"\").select(\"\"\"deptName\"\"\")\r\n",
							"eqFilter.show()"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Weird. This fails. Uncomment for testing.\r\n",
							"\r\n",
							"##eqFilter.explain(True)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql import SparkSession\r\n",
							"\r\n",
							"emp_DF.createOrReplaceTempView(\"EMP\")\r\n",
							"dept_DF.createOrReplaceTempView(\"DEPT\")\r\n",
							"\r\n",
							"joinQuery = spark.sql(\"SELECT EMP.empName, DEPT.deptName FROM EMP, DEPT WHERE EMP.deptId = DEPT.deptId\")\r\n",
							"\r\n",
							"joinQuery.show()\r\n",
							"##joinQuery.explain(True)"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Z Order over Delta table\r\n",
							"As you can see, the error describes that Delta is not supported for this kind of data structure"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"joinQuery.write.format(\"parquet\").mode(\"overwrite\").saveAsTable(\"Employees\")"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"\r\n",
							"OPTIMIZE Employees"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TmpShakespeare')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SparkR"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "fb202f8d-b9cb-427b-af2d-295fcfe994f1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_sparkr",
						"display_name": "Synapse SparkR"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"library(notebookutils)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create new directory\r\n",
							"mssparkutils.fs.mkdirs(\"/tmp/a/b/c\")"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Copy file\r\n",
							"mssparkutils.fs.cp(\"/shakespeare.txt\", \"/tmp/a/b/c/shakespeare.txt\", TRUE) # Set the third parameter as True to copy all files and directories recursively\r\n",
							"mssparkutils.fs.cp(\"/tmp/a/b/c/shakespeare.txt\", \"/tmp/a/b/c/shakespeare1.txt\", TRUE)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"print(mssparkutils.fs.head(\"/tmp/a/b/c/shakespeare.txt\", 1024))"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.fs.mv(\"/tmp/a/b/c/shakespeare1.txt\", \"/tmp/a/b/c/shakespeare2.txt\", TRUE) # Set the last parameter as True to firstly create the parent directory if it does not exist"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Append content to a file\r\n",
							"mssparkutils.fs.append(\"/tmp/a/b/c/test.txt\",\" from mssparkutils\", TRUE)\r\n",
							"#mssparkutils.fs.head(\"/tmp/a/b/c/test.txt\")"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.fs.rm(\"/tmp\", TRUE) # Set the last parameter as True to remove all files and directories recursively"
						],
						"outputs": [],
						"execution_count": 8
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/_notebookutilsdemo')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "from PG",
				"folder": {
					"name": "SparkR"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "336cdbc8-4231-4d12-9033-0c5a25ed6ac1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_sparkr",
						"display_name": "Synapse SparkR"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Requirements\r\n",
							"- Join the AAD group `MSSparkUtils R Users` to get access to this workspace and the associated storage account\r\n",
							"- To enable R support, please add feature request parameter `feature.rlanguage=true` to the site URL. e.g. `https://ms.web.azuresynapse.net/en-us/authoring/analyze/...?feature.rlanguage=true`\r\n",
							"- R support is only available in Spark 3.1 or above. We don't support this feature in Spark 2.4\r\n",
							"- `library(notebookutils)` has to be executed first to load the library. We will remove this constraint in the next release.\r\n",
							"\r\n",
							"## Known issue\r\n",
							"- Notebook reference run is not supported temporarily for now. It will be supported in the next release. If urgent, we can provide some workaround"
						]
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Loading notebookutils library"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"library(notebookutils)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## File System Utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.fs.help()"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# List files\r\n",
							"mssparkutils.fs.ls(\"/\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# View file properties\r\n",
							"files <- mssparkutils.fs.ls(\"/\")\r\n",
							"for (file in files) {\r\n",
							"    writeLines(paste(file$name, file$isDir, file$isFile, file$size))\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create new directory\r\n",
							"mssparkutils.fs.mkdirs(\"/tmp/a/b/c\")"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Copy file\r\n",
							"mssparkutils.fs.cp(\"/samples/python/shakespeare.txt\", \"/tmp/a/b/c/shakespeare.txt\", TRUE) # Set the third parameter as True to copy all files and directories recursively\r\n",
							"mssparkutils.fs.cp(\"/tmp/a/b/c/shakespeare.txt\", \"/tmp/a/b/c/shakespeare1.txt\", TRUE)"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Preview file content\r\n",
							"print(mssparkutils.fs.head(\"/tmp/a/b/c/shakespeare.txt\", 1024))"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Move file\r\n",
							"mssparkutils.fs.mv(\"/tmp/a/b/c/shakespeare1.txt\", \"/tmp/a/b/c/shakespeare2.txt\", TRUE) # Set the last parameter as True to firstly create the parent directory if it does not exist"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Write file\r\n",
							"mssparkutils.fs.put(\"/tmp/a/b/c/test.txt\",\"Hello world\", TRUE)"
						],
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Append content to a file\r\n",
							"mssparkutils.fs.append(\"/tmp/a/b/c/test.txt\",\" from mssparkutils\", TRUE)\r\n",
							"#mssparkutils.fs.head(\"/tmp/a/b/c/test.txt\")"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Delete file or directory\r\n",
							"mssparkutils.fs.rm(\"/tmp\", TRUE) # Set the last parameter as True to remove all files and directories recursively"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"### File mount/unmount"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Via Linked Service (recommend):\r\n",
							"mssparkutils.fs.mount( \r\n",
							"    \"abfss://nbutilsfs@nbutilsstorage.dfs.core.windows.net\", \r\n",
							"    \"/testR\", \r\n",
							"    list(\"linkedService\" = \"nbutilsmssparkutils\")\r\n",
							") "
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# How to access files under mount point via local file system API\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"f <- sprintf(\"/synfs/%s/testR/myFile.txt\", jobId)\r\n",
							"cat(\"Hello world.\\n\", file = f, sep = \"\", append = TRUE)"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# How to access files under mount point using mssparktuils fs API\r\n",
							"# List dirs:\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"directory <- sprintf(\"synfs:/%s/testR\", jobId)\r\n",
							"mssparkutils.fs.ls(directory)"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Read file content:\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"file <- sprintf(\"synfs:/%s/testR/myFile.txt\", jobId)\r\n",
							"mssparkutils.fs.head(file)"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create directory:\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"directory <- sprintf(\"synfs:/%s/testR/newdir\", jobId)\r\n",
							"mssparkutils.fs.mkdirs(directory)"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# How to unmount the mount point\r\n",
							"mssparkutils.fs.unmount(\"/testR\")"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Notebook utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.notebook.help()"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Reference a notebook\r\n",
							"mssparkutils.notebook.run(\"/folder/Sample1\", 90, list(\"input\" = 20))"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Exit a notebook\r\n",
							"#mssparkutils.notebook.exit(\"value string\")"
						],
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Credentials utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.credentials.help()"
						],
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get token\r\n",
							"mssparkutils.credentials.getToken(\"Synapse\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Validate token\r\n",
							"token <- mssparkutils.credentials.getToken(\"Synapse\")\r\n",
							"mssparkutils.credentials.isValidToken(token)"
						],
						"outputs": [],
						"execution_count": 30
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get connection string or credentials for linked service\r\n",
							"mssparkutils.credentials.getConnectionStringOrCreds(\"nbutilsmssparkutils\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get secret using workspace identity\r\n",
							"mssparkutils.credentials.getSecret(\"nbutilskv\",\"mytestSecret\",\"nbutilskvlinkedservice\")"
						],
						"outputs": [],
						"execution_count": 33
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get secret using user credentials\r\n",
							"mssparkutils.credentials.getSecret(\"nbutilskv\",\"mytestSecret\")"
						],
						"outputs": [],
						"execution_count": 34
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Put secret using workspace identity\r\n",
							"mssparkutils.credentials.putSecret(\"nbutilskv\", \"mytestSecret\",\"secretvaluewithmsi\",\"nbutilskvlinkedservice\")"
						],
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Put secret using user credentials\r\n",
							"mssparkutils.credentials.putSecret(\"nbutilskv\", \"mytestSecret\",\"secretvaluewithusercred\")"
						],
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Environment utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.env.help()"
						],
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get user name\r\n",
							"mssparkutils.env.getUserName()"
						],
						"outputs": [],
						"execution_count": 38
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get user ID\r\n",
							"mssparkutils.env.getUserId()"
						],
						"outputs": [],
						"execution_count": 39
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get job ID\r\n",
							"mssparkutils.env.getJobId()"
						],
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get workspace name\r\n",
							"mssparkutils.env.getWorkspaceName()"
						],
						"outputs": [],
						"execution_count": 41
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get pool name\r\n",
							"mssparkutils.env.getPoolName()"
						],
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get cluster ID\r\n",
							"mssparkutils.env.getClusterId()"
						],
						"outputs": [],
						"execution_count": 43
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Runtime Context"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"ctx <- mssparkutils.runtime.context()\r\n",
							"for (key in ls(ctx)) {\r\n",
							"    writeLines(paste(key, ctx[[key]], sep = \"\\t\"))\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 44
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Visualization"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"df <- read.df('abfss://users@contosolake.dfs.core.windows.net/NYCTripSmall.parquet', format='parquet')\r\n",
							"display(limit(df, 10))"
						],
						"outputs": [],
						"execution_count": 45
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"displayHTML('<!DOCTYPE html>\r\n",
							"<meta charset=\"utf-8\">\r\n",
							"\r\n",
							"<!-- Load d3.js -->\r\n",
							"<script src=\"https://d3js.org/d3.v4.js\"></script>\r\n",
							"\r\n",
							"<!-- Create a div where the graph will take place -->\r\n",
							"<div id=\"my_dataviz\"></div>\r\n",
							"<script>\r\n",
							"\r\n",
							"// set the dimensions and margins of the graph\r\n",
							"var margin = {top: 10, right: 30, bottom: 30, left: 40},\r\n",
							"  width = 400 - margin.left - margin.right,\r\n",
							"  height = 400 - margin.top - margin.bottom;\r\n",
							"\r\n",
							"// append the svg object to the body of the page\r\n",
							"var svg = d3.select(\"#my_dataviz\")\r\n",
							".append(\"svg\")\r\n",
							"  .attr(\"width\", width + margin.left + margin.right)\r\n",
							"  .attr(\"height\", height + margin.top + margin.bottom)\r\n",
							".append(\"g\")\r\n",
							"  .attr(\"transform\",\r\n",
							"        \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n",
							"\r\n",
							"// Create Data\r\n",
							"var data = [12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9]\r\n",
							"\r\n",
							"// Compute summary statistics used for the box:\r\n",
							"var data_sorted = data.sort(d3.ascending)\r\n",
							"var q1 = d3.quantile(data_sorted, .25)\r\n",
							"var median = d3.quantile(data_sorted, .5)\r\n",
							"var q3 = d3.quantile(data_sorted, .75)\r\n",
							"var interQuantileRange = q3 - q1\r\n",
							"var min = q1 - 1.5 * interQuantileRange\r\n",
							"var max = q1 + 1.5 * interQuantileRange\r\n",
							"\r\n",
							"// Show the Y scale\r\n",
							"var y = d3.scaleLinear()\r\n",
							"  .domain([0,24])\r\n",
							"  .range([height, 0]);\r\n",
							"svg.call(d3.axisLeft(y))\r\n",
							"\r\n",
							"// a few features for the box\r\n",
							"var center = 200\r\n",
							"var width = 100\r\n",
							"\r\n",
							"// Show the main vertical line\r\n",
							"svg\r\n",
							".append(\"line\")\r\n",
							"  .attr(\"x1\", center)\r\n",
							"  .attr(\"x2\", center)\r\n",
							"  .attr(\"y1\", y(min) )\r\n",
							"  .attr(\"y2\", y(max) )\r\n",
							"  .attr(\"stroke\", \"black\")\r\n",
							"\r\n",
							"// Show the box\r\n",
							"svg\r\n",
							".append(\"rect\")\r\n",
							"  .attr(\"x\", center - width/2)\r\n",
							"  .attr(\"y\", y(q3) )\r\n",
							"  .attr(\"height\", (y(q1)-y(q3)) )\r\n",
							"  .attr(\"width\", width )\r\n",
							"  .attr(\"stroke\", \"black\")\r\n",
							"  .style(\"fill\", \"#69b3a2\")\r\n",
							"\r\n",
							"// show median, min and max horizontal \r\n",
							"svg\r\n",
							".selectAll(\"toto\")\r\n",
							".data([min, median, max])\r\n",
							".enter()\r\n",
							".append(\"line\")\r\n",
							"  .attr(\"x1\", center-width/2)\r\n",
							"  .attr(\"x2\", center+width/2)\r\n",
							"  .attr(\"y1\", function(d){ return(y(d))} )\r\n",
							"  .attr(\"y2\", function(d){ return(y(d))} )\r\n",
							"  .attr(\"stroke\", \"black\")\r\n",
							"</script>')"
						],
						"outputs": [],
						"execution_count": 46
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Magic command"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"%%sparkr\r\n",
							"df <- read.df('abfss://users@contosolake.dfs.core.windows.net/NYCTripSmall.parquet', format='parquet')\r\n",
							"display(limit(df, 10))"
						],
						"outputs": [],
						"execution_count": 47
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dominicks_OJ_train-Score')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "d673e1e1-b7ce-45a9-89b3-86162c42c223"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import col, pandas_udf,udf,lit\r\n",
							"from azureml.core import Workspace\r\n",
							"from azureml.core.authentication import ServicePrincipalAuthentication\r\n",
							"import azure.synapse.ml.predict as pcontext\r\n",
							"import azure.synapse.ml.predict.utils._logger as synapse_predict_logger"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DATA_FILE = \"abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/dominicks_OJ_train.csv\"\r\n",
							"AML_MODEL_URI = \"https://ml.azure.com/model/wplushiramsynapse-dominicks_oj_train-20211111125807-Best:1\" \r\n",
							"ADLS_MODEL_URI = \"abfss://wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapsefs/wplushiramsynapse-dominicks_oj_train-20211111010118-Best_/\"\r\n",
							"RETURN_TYPES = \"double\" \r\n",
							"RUNTIME = \"mlflow\""
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from notebookutils.mssparkutils import azureML\r\n",
							"ws = azureML.getWorkspace(\"sqldbedgeoulvzyml\")\r\n",
							"ws"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"spark.conf.set(\"spark.synapse.ml.predict.enabled\",\"true\")"
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"model = pcontext.bind_model(\r\n",
							"    return_types=RETURN_TYPES, \r\n",
							"    runtime=RUNTIME, \r\n",
							"    model_alias=\"oj_forecast\", \r\n",
							"    model_uri=AML_MODEL_URI, \r\n",
							"    aml_workspace=ws \r\n",
							"    ).register()"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"model = pcontext.bind_model(\r\n",
							"    return_types=RETURN_TYPES, \r\n",
							"    runtime=RUNTIME, \r\n",
							"    model_alias=\"oj_forecast\", \r\n",
							"    model_uri=ADLS_MODEL_URI\r\n",
							"    ).register()"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#Read data from ADLS\r\n",
							"df = spark.read \\\r\n",
							".format(\"csv\") \\\r\n",
							".option(\"header\", \"true\") \\\r\n",
							".csv(DATA_FILE,\r\n",
							"    inferSchema=True)\r\n",
							"df.createOrReplaceTempView('datafile')"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql \r\n",
							"select * from datafile"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							}
						},
						"source": [
							"%%sql\r\n",
							"SELECT PREDICT(oj_forecast, Quantity) AS predict FROM datafile"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Round 2 "
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Import libraries and read training dataset from ADLS\r\n",
							"\r\n",
							"import fsspec\r\n",
							"import pandas\r\n",
							"from fsspec.core import split_protocol\r\n",
							"\r\n",
							"adls_account_name = 'wplushiramsynapseadlsv2' #Provide exact ADLS account name\r\n",
							"adls_account_key = 'xyz' #Provide exact ADLS account key\r\n",
							"\r\n",
							"fsspec_handle = fsspec.open('abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/wplushiramsynapse-dominicks_oj_train-20211111010118-Best_/model.pkl', account_name=adls_account_name, account_key=adls_account_key)\r\n",
							"\r\n",
							"with fsspec_handle.open() as f:\r\n",
							"       train_df = pandas.read_csv(f)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dominicks_OJ_train-Train')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "b3b09124-0296-470a-bf8c-852fc5644f26"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import azureml.core\n",
							"\n",
							"from azureml.core import Experiment, Workspace, Dataset, Datastore\n",
							"from azureml.train.automl import AutoMLConfig\n",
							"from notebookutils import mssparkutils\n",
							"from azureml.data.dataset_factory import TabularDatasetFactory"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"linkedService_name = \"sqldbedgeoulvzyml\"\n",
							"experiment_name = \"wplushiramsynapse-dominicks_oj_train-20211111125807\"\n",
							"\n",
							"ws = mssparkutils.azureML.getWorkspace(linkedService_name)\n",
							"experiment = Experiment(ws, experiment_name)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"df = spark.sql(\"SELECT * FROM default.dominicks_oj_train\")\n",
							"\n",
							"datastore = Datastore.get_default(ws)\n",
							"dataset = TabularDatasetFactory.register_spark_dataframe(df, datastore, name = experiment_name + \"-dataset\")"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"source": [
							"from azureml.automl.core.forecasting_parameters import ForecastingParameters\n",
							"\n",
							"forecasting_parameters = ForecastingParameters(\n",
							"    time_column_name = \"WeekStarting\",\n",
							"    forecast_horizon = \"auto\",\n",
							"    time_series_id_column_names = [\"Store\",\"Brand\"],\n",
							")\n",
							"\n",
							"automl_config = AutoMLConfig(spark_context = sc,\n",
							"                             task = \"forecasting\",\n",
							"                             training_data = dataset,\n",
							"                             label_column_name = \"Quantity\",\n",
							"                             primary_metric = \"normalized_root_mean_squared_error\",\n",
							"                             experiment_timeout_hours = 0.25,\n",
							"                             max_concurrent_iterations = 2,\n",
							"                             n_cross_validations = 5,\n",
							"                             forecasting_parameters = forecasting_parameters)"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"run = experiment.submit(automl_config)"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"displayHTML(\"<a href={} target='_blank'>Your experiment in Azure Machine Learning portal: {}</a>\".format(run.get_portal_url(), run.id))"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"source": [
							"run.wait_for_completion()\n",
							"\n",
							"import mlflow\n",
							"\n",
							"# Get best model from automl run\n",
							"best_run, non_onnx_model = run.get_output()\n",
							"\n",
							"artifact_path = experiment_name + \"_artifact\"\n",
							"\n",
							"mlflow.set_tracking_uri(ws.get_mlflow_tracking_uri())\n",
							"mlflow.set_experiment(experiment_name)\n",
							"\n",
							"with mlflow.start_run() as run:\n",
							"    # Save the model to the outputs directory for capture\n",
							"    mlflow.sklearn.log_model(non_onnx_model, artifact_path)\n",
							"\n",
							"    # Register the model to AML model registry\n",
							"    mlflow.register_model(\"runs:/\" + run.info.run_id + \"/\" + artifact_path, \"wplushiramsynapse-dominicks_oj_train-20211111125807-Best\")"
						],
						"outputs": [],
						"execution_count": 7
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dominicks_OJ_train')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "7d9b4600-4be1-4442-9245-0a15d5e8d3f5"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\r\n",
							"from pyspark.sql.types import StringType, DateType, DoubleType\r\n",
							"\r\n",
							"df = spark.read.load('abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/dominicks_OJ_train.csv', format='csv'\r\n",
							"## If header exists uncomment line below\r\n",
							", header=True\r\n",
							")\r\n",
							"\r\n",
							"df = df.withColumnRenamed(\"Large HH\", \"Large_HH\")\r\n",
							"\r\n",
							"df = df \\\r\n",
							".withColumn(\"WeekStarting\", df[\"WeekStarting\"].cast(DateType())) \\\r\n",
							".withColumn(\"Store\", df[\"Store\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"Brand\", df[\"Brand\"].cast(StringType())) \\\r\n",
							".withColumn(\"Quantity\", df[\"Quantity\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"Advert\", df[\"Advert\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"Price\", df[\"Price\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"Age60\", df[\"Age60\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"COLLEGE\", df[\"COLLEGE\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"INCOME\", df[\"INCOME\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"Hincome150\", df[\"Hincome150\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"Large_HH\", df[\"Large_HH\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"Minorities\", df[\"Minorities\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"WorkingWoman\", df[\"WorkingWoman\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"SSTRDIST\", df[\"SSTRDIST\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"SSTRVOL\", df[\"SSTRVOL\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"CPDIST5\", df[\"CPDIST5\"].cast(DoubleType())) \\\r\n",
							".withColumn(\"CPWVOL5\", df[\"CPWVOL5\"].cast(DoubleType())) \r\n",
							"\r\n",
							"df.write.mode(\"overwrite\").saveAsTable(\"dominicks_OJ_train\")"
						],
						"outputs": [],
						"execution_count": 17
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dominicks_oj_train-RegressionOnnx')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "aed0d893-c5b3-42ba-b11e-0f1c8c7e4ffa"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import azureml.core\n",
							"\n",
							"from azureml.core import Experiment, Workspace, Dataset, Datastore\n",
							"from azureml.train.automl import AutoMLConfig\n",
							"from notebookutils import mssparkutils\n",
							"from azureml.data.dataset_factory import TabularDatasetFactory"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"linkedService_name = \"sqldbedgeoulvzyml\"\n",
							"experiment_name = \"wplushiramsynapse-dominicks_oj_train-20211118120913\"\n",
							"\n",
							"ws = mssparkutils.azureML.getWorkspace(linkedService_name)\n",
							"experiment = Experiment(ws, experiment_name)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"df = spark.sql(\"SELECT * FROM default.dominicks_oj_train\")\n",
							"\n",
							"datastore = Datastore.get_default(ws)\n",
							"dataset = TabularDatasetFactory.register_spark_dataframe(df, datastore, name = experiment_name + \"-dataset\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"automl_config = AutoMLConfig(spark_context = sc,\n",
							"                             task = \"regression\",\n",
							"                             training_data = dataset,\n",
							"                             label_column_name = \"Quantity\",\n",
							"                             primary_metric = \"normalized_root_mean_squared_error\",\n",
							"                             experiment_timeout_hours = 0.25,\n",
							"                             max_concurrent_iterations = 2,\n",
							"                             enable_onnx_compatible_models = True)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"run = experiment.submit(automl_config)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"displayHTML(\"<a href={} target='_blank'>Your experiment in Azure Machine Learning portal: {}</a>\".format(run.get_portal_url(), run.id))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"source": [
							"run.wait_for_completion()\n",
							"\n",
							"import onnxruntime\n",
							"import mlflow\n",
							"import mlflow.onnx\n",
							"\n",
							"from mlflow.models.signature import ModelSignature\n",
							"from mlflow.types import DataType\n",
							"from mlflow.types.schema import ColSpec, Schema\n",
							"\n",
							"# Get best model from automl run\n",
							"best_run, onnx_model = run.get_output(return_onnx_model=True)\n",
							"\n",
							"# Define utility functions to infer the schema of ONNX model\n",
							"def _infer_schema(data):\n",
							"    res = []\n",
							"    for _, col in enumerate(data):\n",
							"        t = col.type.replace(\"tensor(\", \"\").replace(\")\", \"\")\n",
							"        if t in [\"bool\"]:\n",
							"            dt = DataType.boolean\n",
							"        elif t in [\"int8\", \"uint8\", \"int16\", \"uint16\", \"int32\"]:\n",
							"            dt = DateType.integer\n",
							"        elif t in [\"uint32\", \"int64\"]:\n",
							"            dt = DataType.long\n",
							"        elif t in [\"float16\", \"bfloat16\", \"float\"]:\n",
							"            dt = DataType.float\n",
							"        elif t in [\"double\"]:\n",
							"            dt = DataType.double\n",
							"        elif t in [\"string\"]:\n",
							"            dt = DataType.string\n",
							"        else:\n",
							"            raise Exception(\"Unsupported type: \" + t)\n",
							"        res.append(ColSpec(type=dt, name=col.name))\n",
							"    return Schema(res)\n",
							"\n",
							"def _infer_signature(onnx_model):\n",
							"    onnx_model_bytes = onnx_model.SerializeToString()\n",
							"    onnx_runtime = onnxruntime.InferenceSession(onnx_model_bytes)\n",
							"    inputs = _infer_schema(onnx_runtime.get_inputs())\n",
							"    outputs = _infer_schema(onnx_runtime.get_outputs())\n",
							"    return ModelSignature(inputs, outputs)\n",
							"\n",
							"# Infer signature of ONNX model\n",
							"signature = _infer_signature(onnx_model)\n",
							"\n",
							"artifact_path = experiment_name + \"_artifact\"\n",
							"mlflow.set_tracking_uri(ws.get_mlflow_tracking_uri())\n",
							"mlflow.set_experiment(experiment_name)\n",
							"\n",
							"with mlflow.start_run() as run:\n",
							"    # Save the model to the outputs directory for capture\n",
							"    mlflow.onnx.log_model(onnx_model, artifact_path, signature=signature)\n",
							"\n",
							"    # Register the model to AML model registry\n",
							"    mlflow.register_model(\"runs:/\" + run.info.run_id + \"/\" + artifact_path, \"wplushiramsynapse-dominicks_oj_train-20211118120913-Best\")"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/helloworld')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "5f4937a4-df05-4219-a8cd-b975adc8b239"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"print('hello world')"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/notebookutilsdemoR')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SparkR"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "bbcdd8e4-3df2-49d4-84df-a2431c75113f"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Requirements\r\n",
							"- Join the AAD group `MSSparkUtils R Users` to get access to this workspace and the associated storage account\r\n",
							"- To enable R support, please add feature request parameter `feature.rlanguage=true` to the site URL. e.g. `https://ms.web.azuresynapse.net/en-us/authoring/analyze/...?feature.rlanguage=true`\r\n",
							"- R support is only available in Spark 3.1 or above. We don't support this feature in Spark 2.4\r\n",
							"- `library(notebookutils)` has to be executed first to load the library. We will remove this constraint in the next release.\r\n",
							"\r\n",
							"## Known issue\r\n",
							"- Notebook reference run is not supported temporarily for now. It will be supported in the next release. If urgent, we can provide some workaround"
						]
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Loading notebookutils library"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"library(notebookutils)"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## File System Utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.fs.help()"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# List files\r\n",
							"mssparkutils.fs.ls(\"/\")"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# View file properties\r\n",
							"files <- mssparkutils.fs.ls(\"/\")\r\n",
							"for (file in files) {\r\n",
							"    writeLines(paste(file$name, file$isDir, file$isFile, file$size))\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create new directory\r\n",
							"mssparkutils.fs.mkdirs(\"/tmp/a/b/c\")"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Copy file\r\n",
							"mssparkutils.fs.cp(\"/shakespeare.txt\", \"/tmp/a/b/c/shakespeare.txt\", TRUE) # Set the third parameter as True to copy all files and directories recursively\r\n",
							"mssparkutils.fs.cp(\"/tmp/a/b/c/shakespeare.txt\", \"/tmp/a/b/c/shakespeare1.txt\", TRUE)"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Preview file content\r\n",
							"print(mssparkutils.fs.head(\"/tmp/a/b/c/shakespeare.txt\", 1024))"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Rename by Move file\r\n",
							"mssparkutils.fs.mv(\"/tmp/a/b/c/shakespeare1.txt\", \"/tmp/a/b/c/shakespeare2.txt\", TRUE) # Set the last parameter as True to firstly create the parent directory if it does not exist"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Write file\r\n",
							"mssparkutils.fs.put(\"/tmp/a/b/c/test.txt\",\"Hello world\", TRUE)"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Append content to a file\r\n",
							"mssparkutils.fs.append(\"/tmp/a/b/c/test.txt\",\" from mssparkutils\", TRUE)\r\n",
							"#mssparkutils.fs.head(\"/tmp/a/b/c/test.txt\")"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Delete file or directory\r\n",
							"mssparkutils.fs.rm(\"/tmp\", TRUE) # Set the last parameter as True to remove all files and directories recursively"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"### File mount/unmount"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Via Linked Service (recommend):\r\n",
							"mssparkutils.fs.mount( \r\n",
							"    \"abfss://nbutilsfs@nbutilsstorage.dfs.core.windows.net\", \r\n",
							"    \"/testR\", \r\n",
							"    list(\"linkedService\" = \"nbutilsmssparkutils\")\r\n",
							") "
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# How to access files under mount point via local file system API\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"f <- sprintf(\"/synfs/%s/testR/myFile.txt\", jobId)\r\n",
							"cat(\"Hello world.\\n\", file = f, sep = \"\", append = TRUE)"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# How to access files under mount point using mssparktuils fs API\r\n",
							"# List dirs:\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"directory <- sprintf(\"synfs:/%s/testR\", jobId)\r\n",
							"mssparkutils.fs.ls(directory)"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Read file content:\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"file <- sprintf(\"synfs:/%s/testR/myFile.txt\", jobId)\r\n",
							"mssparkutils.fs.head(file)"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Create directory:\r\n",
							"jobId <- mssparkutils.env.getJobId()\r\n",
							"directory <- sprintf(\"synfs:/%s/testR/newdir\", jobId)\r\n",
							"mssparkutils.fs.mkdirs(directory)"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# How to unmount the mount point\r\n",
							"mssparkutils.fs.unmount(\"/testR\")"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Notebook utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.notebook.help()"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Reference a notebook\r\n",
							"mssparkutils.notebook.run(\"SparkSQLCTE\", 360)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Exit a notebook\r\n",
							"#mssparkutils.notebook.exit(\"value string\")"
						],
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Credentials utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.credentials.help()"
						],
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get token\r\n",
							"mssparkutils.credentials.getToken(\"Synapse\")"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Validate token\r\n",
							"token <- mssparkutils.credentials.getToken(\"Synapse\")\r\n",
							"mssparkutils.credentials.isValidToken(token)"
						],
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get connection string or credentials for linked service\r\n",
							"mssparkutils.credentials.getConnectionStringOrCreds(\"nbutilsmssparkutils\")"
						],
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get secret using workspace identity\r\n",
							"mssparkutils.credentials.getSecret(\"nbutilskv\",\"mytestSecret\",\"nbutilskvlinkedservice\")"
						],
						"outputs": [],
						"execution_count": 33
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get secret using user credentials\r\n",
							"mssparkutils.credentials.getSecret(\"nbutilskv\",\"mytestSecret\")"
						],
						"outputs": [],
						"execution_count": 34
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Put secret using workspace identity\r\n",
							"mssparkutils.credentials.putSecret(\"nbutilskv\", \"mytestSecret\",\"secretvaluewithmsi\",\"nbutilskvlinkedservice\")"
						],
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Put secret using user credentials\r\n",
							"mssparkutils.credentials.putSecret(\"nbutilskv\", \"mytestSecret\",\"secretvaluewithusercred\")"
						],
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Environment utilities"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"mssparkutils.env.help()"
						],
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get user name\r\n",
							"mssparkutils.env.getUserName()"
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get user ID\r\n",
							"mssparkutils.env.getUserId()"
						],
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get job ID\r\n",
							"mssparkutils.env.getJobId()"
						],
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get workspace name\r\n",
							"mssparkutils.env.getWorkspaceName()"
						],
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get pool name\r\n",
							"mssparkutils.env.getPoolName()"
						],
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get cluster ID\r\n",
							"mssparkutils.env.getClusterId()"
						],
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Runtime Context"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"ctx <- mssparkutils.runtime.context()\r\n",
							"for (key in ls(ctx)) {\r\n",
							"    writeLines(paste(key, ctx[[key]], sep = \"\\t\"))\r\n",
							"}"
						],
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Visualization"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"df <- read.df('abfss://users@contosolake.dfs.core.windows.net/NYCTripSmall.parquet', format='parquet')\r\n",
							"display(limit(df, 10))"
						],
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"displayHTML('<!DOCTYPE html>\r\n",
							"<meta charset=\"utf-8\">\r\n",
							"\r\n",
							"<!-- Load d3.js -->\r\n",
							"<script src=\"https://d3js.org/d3.v4.js\"></script>\r\n",
							"\r\n",
							"<!-- Create a div where the graph will take place -->\r\n",
							"<div id=\"my_dataviz\"></div>\r\n",
							"<script>\r\n",
							"\r\n",
							"// set the dimensions and margins of the graph\r\n",
							"var margin = {top: 10, right: 30, bottom: 30, left: 40},\r\n",
							"  width = 400 - margin.left - margin.right,\r\n",
							"  height = 400 - margin.top - margin.bottom;\r\n",
							"\r\n",
							"// append the svg object to the body of the page\r\n",
							"var svg = d3.select(\"#my_dataviz\")\r\n",
							".append(\"svg\")\r\n",
							"  .attr(\"width\", width + margin.left + margin.right)\r\n",
							"  .attr(\"height\", height + margin.top + margin.bottom)\r\n",
							".append(\"g\")\r\n",
							"  .attr(\"transform\",\r\n",
							"        \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n",
							"\r\n",
							"// Create Data\r\n",
							"var data = [12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9]\r\n",
							"\r\n",
							"// Compute summary statistics used for the box:\r\n",
							"var data_sorted = data.sort(d3.ascending)\r\n",
							"var q1 = d3.quantile(data_sorted, .25)\r\n",
							"var median = d3.quantile(data_sorted, .5)\r\n",
							"var q3 = d3.quantile(data_sorted, .75)\r\n",
							"var interQuantileRange = q3 - q1\r\n",
							"var min = q1 - 1.5 * interQuantileRange\r\n",
							"var max = q1 + 1.5 * interQuantileRange\r\n",
							"\r\n",
							"// Show the Y scale\r\n",
							"var y = d3.scaleLinear()\r\n",
							"  .domain([0,24])\r\n",
							"  .range([height, 0]);\r\n",
							"svg.call(d3.axisLeft(y))\r\n",
							"\r\n",
							"// a few features for the box\r\n",
							"var center = 200\r\n",
							"var width = 100\r\n",
							"\r\n",
							"// Show the main vertical line\r\n",
							"svg\r\n",
							".append(\"line\")\r\n",
							"  .attr(\"x1\", center)\r\n",
							"  .attr(\"x2\", center)\r\n",
							"  .attr(\"y1\", y(min) )\r\n",
							"  .attr(\"y2\", y(max) )\r\n",
							"  .attr(\"stroke\", \"black\")\r\n",
							"\r\n",
							"// Show the box\r\n",
							"svg\r\n",
							".append(\"rect\")\r\n",
							"  .attr(\"x\", center - width/2)\r\n",
							"  .attr(\"y\", y(q3) )\r\n",
							"  .attr(\"height\", (y(q1)-y(q3)) )\r\n",
							"  .attr(\"width\", width )\r\n",
							"  .attr(\"stroke\", \"black\")\r\n",
							"  .style(\"fill\", \"#69b3a2\")\r\n",
							"\r\n",
							"// show median, min and max horizontal \r\n",
							"svg\r\n",
							".selectAll(\"toto\")\r\n",
							".data([min, median, max])\r\n",
							".enter()\r\n",
							".append(\"line\")\r\n",
							"  .attr(\"x1\", center-width/2)\r\n",
							"  .attr(\"x2\", center+width/2)\r\n",
							"  .attr(\"y1\", function(d){ return(y(d))} )\r\n",
							"  .attr(\"y2\", function(d){ return(y(d))} )\r\n",
							"  .attr(\"stroke\", \"black\")\r\n",
							"</script>')"
						],
						"outputs": [],
						"execution_count": 29
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Magic command"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"%%sparkr\r\n",
							"df <- read.df('abfss://users@contosolake.dfs.core.windows.net/NYCTripSmall.parquet', format='parquet')\r\n",
							"display(limit(df, 10))"
						],
						"outputs": [],
						"execution_count": 47
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sklearn-unpickle')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "_adhoc"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "threetwo",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "73a2317a-416e-4c77-be2b-783e79515ae7"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/e4e06275-58d1-4081-8f1b-be12462eb701/resourceGroups/wplushiramsynapse/providers/Microsoft.Synapse/workspaces/wplushiramsynapse/bigDataPools/threetwo",
						"name": "threetwo",
						"type": "Spark",
						"endpoint": "https://wplushiramsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/threetwo",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 5,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import pickle\r\n",
							"\r\n",
							"numbers_list = [1, 2, 3, 4, 5]\r\n",
							"list_pickle_path = 'list_pickle.pkl'\r\n",
							"\r\n",
							"list_pickle = open(list_pickle_path, 'wb')\r\n",
							"pickle.dump(numbers_list, list_pickle)\r\n",
							"list_pickle.close()"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"list_pickle_path = 'list_pickle.pkl'\r\n",
							"list_unpickle = open(list_pickle_path, 'rb')\r\n",
							"\r\n",
							"numbers_list = pickle.load(list_unpickle)\r\n",
							"\r\n",
							"print(numbers_list)"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"loaded_model = pickle.load(open(list_pickle_path, 'rb'))\r\n",
							"loaded_model"
						],
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Manufacturing_qwg')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Manufacturing_qwg",
							"EntityType": "DATABASE",
							"Description": "",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Manufacturing\",\"Version\":\"0.1.0\"}}}",
								"IsSyMSCDMDatabase": true,
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage"
								}
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 3,
							"ObjectId": "b850f74d-0301-446f-9fc9-62422d42f40a"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Channel",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"Partitioning": {
								"PartitionFunctionType": null,
								"Keys": null
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "ChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelId"
										}
									},
									{
										"Name": "ChannelName",
										"Description": "The name of the associated Channel.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelName"
										}
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "LocationId"
										}
									},
									{
										"Name": "ChannelLogo",
										"Description": "A design, symbol or series of words that identifies the channel.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelLogo"
										}
									},
									{
										"Name": "TelephoneNumber",
										"Description": "The channel telephone number.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "TelephoneNumber"
										}
									},
									{
										"Name": "FaxNumber",
										"Description": "The channel fax number.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "FaxNumber"
										}
									},
									{
										"Name": "EmailAddress",
										"Description": "The channel email address.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "EmailAddress"
										}
									},
									{
										"Name": "ChannelCommencementDate",
										"Description": "The date that the channel commenced operations.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelCommencementDate"
										}
									},
									{
										"Name": "ChannelCloseDate",
										"Description": "The date that the channel was permanently closed.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelCloseDate"
										}
									},
									{
										"Name": "ChannelCategoryId",
										"Description": "The unique identifier of a Channel Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelCategoryId"
										}
									},
									{
										"Name": "ChannelTypeId",
										"Description": "The unique identifier of a Channel Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "ChannelTypeId"
										}
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "PartyId"
										}
									},
									{
										"Name": "DunsNumber",
										"Description": "The DUNS number is a nine-digit number issued by Dun & Bradstreet and assigned to each business location in the D&B database having a unique, separate, and distinct operation to businesses for the purpose of identifying them. The number as issued is random and the digits apparently have no significance as to their issuance.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 9,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunsNumber"
										}
									},
									{
										"Name": "DunBradstreetSingleLocationSubsidiary",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetSingleLocationSubsidiary"
										}
									},
									{
										"Name": "DunBradstreetHeadquarters",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetHeadquarters"
										}
									},
									{
										"Name": "DunBradstreetBranch",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetBranch"
										}
									},
									{
										"Name": "DunBradstreetDivision",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetDivision"
										}
									},
									{
										"Name": "DunBradstreetSubsidiary",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetSubsidiary"
										}
									},
									{
										"Name": "DunBradstreetParent",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetParent"
										}
									},
									{
										"Name": "DunBradstreetUltimate",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetUltimate"
										}
									},
									{
										"Name": "DunBradstreetGlobalUltimate",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DunBradstreetGlobalUltimate"
										}
									},
									{
										"Name": "SicIndustryCode",
										"Description": "The unique identifier of the SIC Industry.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 4,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "SicIndustryCode"
										}
									},
									{
										"Name": "NaicsNationalIndustryCode",
										"Description": "The unique identifier of a NAICS National Industry Code.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 6,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "NaicsNationalIndustryCode"
										}
									},
									{
										"Name": "AnzsicClassCode",
										"Description": "The unique identifier of an ANZSIC Class.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 4,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "AnzsicClassCode"
										}
									},
									{
										"Name": "TerritoryId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "TerritoryId"
										}
									},
									{
										"Name": "AreaId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "AreaId"
										}
									},
									{
										"Name": "RegionId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "RegionId"
										}
									},
									{
										"Name": "DistrictId",
										"Description": "The unique identifier of a Territory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "DistrictId"
										}
									},
									{
										"Name": "BrandId",
										"Description": "The unique identifier of a Brand.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "BrandId"
										}
									},
									{
										"Name": "FranchiseeId",
										"Description": "The unique identifier of a Franchisee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Channel.cdm.json/Channel",
											"Name": "FranchiseeId"
										}
									}
								],
								"ColumnSetEntityName": "91eebb27-407b-44ca-80a4-92f8f91df86f",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Channel",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Channel",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ChannelId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelId\"},\"ChannelName\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelName\"},\"LocationId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"LocationId\"},\"ChannelLogo\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelLogo\"},\"TelephoneNumber\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TelephoneNumber\"},\"FaxNumber\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FaxNumber\"},\"EmailAddress\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"EmailAddress\"},\"ChannelCommencementDate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCommencementDate\"},\"ChannelCloseDate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCloseDate\"},\"ChannelCategoryId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCategoryId\"},\"ChannelTypeId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelTypeId\"},\"PartyId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"PartyId\"},\"DunsNumber\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunsNumber\"},\"DunBradstreetSingleLocationSubsidiary\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSingleLocationSubsidiary\"},\"DunBradstreetHeadquarters\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetHeadquarters\"},\"DunBradstreetBranch\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetBranch\"},\"DunBradstreetDivision\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetDivision\"},\"DunBradstreetSubsidiary\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSubsidiary\"},\"DunBradstreetParent\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetParent\"},\"DunBradstreetUltimate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetUltimate\"},\"DunBradstreetGlobalUltimate\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetGlobalUltimate\"},\"SicIndustryCode\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"SicIndustryCode\"},\"NaicsNationalIndustryCode\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"NaicsNationalIndustryCode\"},\"AnzsicClassCode\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AnzsicClassCode\"},\"TerritoryId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TerritoryId\"},\"AreaId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AreaId\"},\"RegionId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"RegionId\"},\"DistrictId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DistrictId\"},\"BrandId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"BrandId\"},\"FranchiseeId\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FranchiseeId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"name\":\"Channel\",\"description\":\"A channel is a means by which products or services are sold and/or distributed.\",\"baseEntityReference\":{\"name\":\"Channel\",\"path\":\"Channel.cdm.json/Channel\"},\"primaryKey\":[\"ChannelId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":false,\"name\":\"ChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the associated Channel.\",\"isNullable\":true,\"name\":\"ChannelName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelLogo\"},\"dataType\":\"binary\",\"description\":\"A design, symbol or series of words that identifies the channel.\",\"isNullable\":true,\"name\":\"ChannelLogo\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TelephoneNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The channel telephone number.\",\"isNullable\":true,\"scale\":0,\"name\":\"TelephoneNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FaxNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The channel fax number.\",\"isNullable\":true,\"scale\":0,\"name\":\"FaxNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"EmailAddress\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The channel email address.\",\"isNullable\":true,\"name\":\"EmailAddress\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCommencementDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the channel commenced operations.\",\"isNullable\":true,\"name\":\"ChannelCommencementDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCloseDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the channel was permanently closed.\",\"isNullable\":true,\"name\":\"ChannelCloseDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel Category.\",\"isNullable\":true,\"name\":\"ChannelCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"ChannelTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel Type.\",\"isNullable\":true,\"name\":\"ChannelTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunsNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":9,\"description\":\"The DUNS number is a nine-digit number issued by Dun & Bradstreet and assigned to each business location in the D&B database having a unique, separate, and distinct operation to businesses for the purpose of identifying them. The number as issued is random and the digits apparently have no significance as to their issuance.\",\"isNullable\":true,\"scale\":0,\"name\":\"DunsNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSingleLocationSubsidiary\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetSingleLocationSubsidiary\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetHeadquarters\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetHeadquarters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetBranch\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetBranch\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetDivision\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetDivision\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetSubsidiary\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetSubsidiary\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetParent\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetParent\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetUltimate\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetUltimate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DunBradstreetGlobalUltimate\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetGlobalUltimate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"SicIndustryCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":4,\"description\":\"The unique identifier of the SIC Industry.\",\"isNullable\":true,\"scale\":0,\"name\":\"SicIndustryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"NaicsNationalIndustryCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":6,\"description\":\"The unique identifier of a NAICS National Industry Code.\",\"isNullable\":true,\"scale\":0,\"name\":\"NaicsNationalIndustryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AnzsicClassCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":4,\"description\":\"The unique identifier of an ANZSIC Class.\",\"isNullable\":true,\"scale\":0,\"name\":\"AnzsicClassCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"TerritoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"TerritoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"AreaId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"AreaId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"RegionId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"RegionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"DistrictId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Territory.\",\"isNullable\":true,\"name\":\"DistrictId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"BrandId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Brand.\",\"isNullable\":true,\"name\":\"BrandId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Channel.cdm.json/Channel\",\"name\":\"FranchiseeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Franchisee.\",\"isNullable\":true,\"name\":\"FranchiseeId\"}]}}}",
								"Description": "A channel is a means by which products or services are sold and/or distributed.",
								"DisplayFolderInfo": "{\"name\":\"Channel\",\"colorCode\":\"\"}",
								"PrimaryKeys": "ChannelId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"ChannelId\",\"type\":\"integer\",\"nullable\":false,\"metadata\":{}},{\"name\":\"ChannelName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LocationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ChannelLogo\",\"type\":\"binary\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TelephoneNumber\",\"type\":\"decimal(15,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FaxNumber\",\"type\":\"decimal(15,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EmailAddress\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ChannelCommencementDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ChannelCloseDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ChannelCategoryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ChannelTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PartyId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunsNumber\",\"type\":\"decimal(9,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetSingleLocationSubsidiary\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetHeadquarters\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetBranch\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetDivision\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetSubsidiary\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetParent\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetUltimate\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetGlobalUltimate\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SicIndustryCode\",\"type\":\"decimal(4,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"NaicsNationalIndustryCode\",\"type\":\"decimal(6,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AnzsicClassCode\",\"type\":\"decimal(4,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TerritoryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AreaId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RegionId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DistrictId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BrandId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FranchiseeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 3,
							"ObjectId": "651eabcf-917a-4fea-aa7f-6f8032bc4e80",
							"Description": "A channel is a means by which products or services are sold and/or distributed."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Communication",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "CommunicationId",
										"Description": "The unique identifier of a service request/contact Communication.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationId"
										}
									},
									{
										"Name": "CommunicationStartTimestamp",
										"Description": "The timestamp when the communication started.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationStartTimestamp"
										}
									},
									{
										"Name": "CommunicationEndTimestamp",
										"Description": "The timestamp when the communication ended.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationEndTimestamp"
										}
									},
									{
										"Name": "CommunicationDescription",
										"Description": "A description regarding the communication.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationDescription"
										}
									},
									{
										"Name": "CommunicationNote",
										"Description": "A note, comment or additional information regarding the communication.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationNote"
										}
									},
									{
										"Name": "CommunicationQueueTime",
										"Description": "The amount of time that the Inbound Communicator waited in a queue.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationQueueTime"
										}
									},
									{
										"Name": "CommunicationHoldTime",
										"Description": "Total amount of time a person is placed on hold during a communication after first being connected to a person. Does not include initial queue time which may have occurred before the initial connection to a person.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationHoldTime"
										}
									},
									{
										"Name": "InboundOutboundCommunicationIndicator",
										"Description": "Indicates whether the communication is received from the party or sent to the party.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "InboundOutboundCommunicationIndicator"
										}
									},
									{
										"Name": "CommunicationText",
										"Description": "The text of the communication.   \n\nDepending on the communication type this would be the:\n\n- text of the email or letter\n- recorded text conversation of a call",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationText"
										}
									},
									{
										"Name": "CommunicationMethodId",
										"Description": "The unique identifier of a Communication Method",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationMethodId"
										}
									},
									{
										"Name": "CommunicationTypeId",
										"Description": "The unique identifier of a communication type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationTypeId"
										}
									},
									{
										"Name": "CommunicationStatusId",
										"Description": "The unique identifier of a Communication Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationStatusId"
										}
									},
									{
										"Name": "CommunicationPriorityId",
										"Description": "The unique identifier of a Communication Priority.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "CommunicationPriorityId"
										}
									},
									{
										"Name": "IsoLanguageId",
										"Description": "The unique identifier of an ISO Language.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Communication.cdm.json/Communication",
											"Name": "IsoLanguageId"
										}
									}
								],
								"ColumnSetEntityName": "8e16778e-2eb2-4c95-83a6-a7fa606b8d82",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Communication",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Communication",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"CommunicationId\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationId\"},\"CommunicationStartTimestamp\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationStartTimestamp\"},\"CommunicationEndTimestamp\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationEndTimestamp\"},\"CommunicationDescription\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationDescription\"},\"CommunicationNote\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationNote\"},\"CommunicationQueueTime\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationQueueTime\"},\"CommunicationHoldTime\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationHoldTime\"},\"InboundOutboundCommunicationIndicator\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"InboundOutboundCommunicationIndicator\"},\"CommunicationText\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationText\"},\"CommunicationMethodId\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationMethodId\"},\"CommunicationTypeId\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationTypeId\"},\"CommunicationStatusId\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationStatusId\"},\"CommunicationPriorityId\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationPriorityId\"},\"IsoLanguageId\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"IsoLanguageId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Communication\",\"path\":\"Communication.cdm.json/Communication\"},\"description\":\"A communication to/from one or more party(s).\",\"primaryKey\":[\"CommunicationId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a service request/contact Communication.\",\"isNullable\":false,\"name\":\"CommunicationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp when the communication started.\",\"isNullable\":true,\"name\":\"CommunicationStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp when the communication ended.\",\"isNullable\":true,\"name\":\"CommunicationEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"A description regarding the communication.\",\"isNullable\":true,\"name\":\"CommunicationDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the communication.\",\"isNullable\":true,\"name\":\"CommunicationNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationQueueTime\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The amount of time that the Inbound Communicator waited in a queue.\",\"isNullable\":true,\"name\":\"CommunicationQueueTime\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationHoldTime\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"Total amount of time a person is placed on hold during a communication after first being connected to a person. Does not include initial queue time which may have occurred before the initial connection to a person.\",\"isNullable\":true,\"name\":\"CommunicationHoldTime\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"InboundOutboundCommunicationIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the communication is received from the party or sent to the party.\",\"isNullable\":true,\"name\":\"InboundOutboundCommunicationIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The text of the communication.   \\n\\nDepending on the communication type this would be the:\\n\\n- text of the email or letter\\n- recorded text conversation of a call\",\"isNullable\":true,\"name\":\"CommunicationText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Communication Method\",\"isNullable\":true,\"name\":\"CommunicationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a communication type.\",\"isNullable\":true,\"name\":\"CommunicationTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Communication Status.\",\"isNullable\":true,\"name\":\"CommunicationStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"CommunicationPriorityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Communication Priority.\",\"isNullable\":true,\"name\":\"CommunicationPriorityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Communication.cdm.json/Communication\",\"name\":\"IsoLanguageId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an ISO Language.\",\"isNullable\":true,\"name\":\"IsoLanguageId\"}]}}}",
								"Description": "A communication to/from one or more party(s).",
								"DisplayFolderInfo": "{\"name\":\"Customer Service & Contact Management\",\"colorCode\":\"\"}",
								"PrimaryKeys": "CommunicationId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"CommunicationId\",\"type\":\"long\",\"nullable\":false,\"metadata\":{}},{\"name\":\"CommunicationStartTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationEndTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationQueueTime\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationHoldTime\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"InboundOutboundCommunicationIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationStatusId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommunicationPriorityId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IsoLanguageId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "9ab6e7e6-5ed9-4e14-8573-53b9460d3881",
							"Description": "A communication to/from one or more party(s)."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Customer",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerId"
										}
									},
									{
										"Name": "CustomerEstablishedDate",
										"Description": "The date that the Customer relationship was established.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerEstablishedDate"
										}
									},
									{
										"Name": "CustomerTypeId",
										"Description": "The unique identifier of a Customer Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerTypeId"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "LedgerId",
										"Description": "The unique identifier of a Ledger.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "LedgerId"
										}
									},
									{
										"Name": "LedgerAccountNumber",
										"Description": "The unique identifier of a Ledger Account.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "LedgerAccountNumber"
										}
									},
									{
										"Name": "CustomerNote",
										"Description": "A note, comment or additional information regarding the Customer.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "CustomerNote"
										}
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "PartyId"
										}
									},
									{
										"Name": "GlobalLocationNumber",
										"Description": "The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Customer.cdm.json/Customer",
											"Name": "GlobalLocationNumber"
										}
									}
								],
								"ColumnSetEntityName": "8a6e7c6c-a67f-4b7d-ad33-73c3738bf6e0",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Customer",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Customer",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"CustomerId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerId\"},\"CustomerEstablishedDate\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerEstablishedDate\"},\"CustomerTypeId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerTypeId\"},\"ResponsibilityCenterId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"ResponsibilityCenterId\"},\"LedgerId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerId\"},\"LedgerAccountNumber\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerAccountNumber\"},\"CustomerNote\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerNote\"},\"PartyId\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"PartyId\"},\"GlobalLocationNumber\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"GlobalLocationNumber\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Customer\",\"path\":\"Customer.cdm.json/Customer\"},\"description\":\"A customer is an individual or legal entity that has or has purchased a product or service.\\n\\nA potential customer is an individual or legal entity that has the desire to acquire a product or service, the financial ability to pay for that product or service and is located in a location in which the product or service can be delivered to them.\\n\\nThe definition of 'customer' is of critical importance for every organization.    \\n\\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\\n\\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  An artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\\n\\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings and legal entities.     \\n\\nHuman beings are obviously male and female individuals of various ages, sex, demographics and a variety of similar dimensions that describe and define them who purchase products, good and services.    \\n\\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\\n\\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\\n\\nOf course, that is just the start of identifying, defining and understanding each type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.\\n\\nMicrosoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\\n\\n-  INDIVIDUAL CUSTOMER Business Area Model\\n-  LEGAL ENTITY CUSTOMER Business Area Model\\n\\nNote:\\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\\n\\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \\n\\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \\n\\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \\n\\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\\n\\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.\",\"primaryKey\":[\"CustomerId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":false,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerEstablishedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Customer relationship was established.\",\"isNullable\":true,\"name\":\"CustomerEstablishedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Customer Type.\",\"isNullable\":true,\"name\":\"CustomerTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Ledger.\",\"isNullable\":true,\"name\":\"LedgerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"LedgerAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The unique identifier of a Ledger Account.\",\"isNullable\":true,\"name\":\"LedgerAccountNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"CustomerNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Customer.\",\"isNullable\":true,\"name\":\"CustomerNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Customer.cdm.json/Customer\",\"name\":\"GlobalLocationNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalLocationNumber\"}]}}}",
								"Description": "A customer is an individual or legal entity that has or has purchased a product or service.\n\nA potential customer is an individual or legal entity that has the desire to acquire a product or service, the financial ability to pay for that product or service and is located in a location in which the product or service can be delivered to them.\n\nThe definition of 'customer' is of critical importance for every organization.    \n\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\n\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  An artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\n\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings and legal entities.     \n\nHuman beings are obviously male and female individuals of various ages, sex, demographics and a variety of similar dimensions that describe and define them who purchase products, good and services.    \n\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\n\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\n\nOf course, that is just the start of identifying, defining and understanding each type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.\n\nMicrosoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\n\n-  INDIVIDUAL CUSTOMER Business Area Model\n-  LEGAL ENTITY CUSTOMER Business Area Model\n\nNote:\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\n\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \n\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \n\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \n\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\n\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models.",
								"DisplayFolderInfo": "{\"name\":\"Customer\",\"colorCode\":\"\"}",
								"PrimaryKeys": "CustomerId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"CustomerId\",\"type\":\"long\",\"nullable\":false,\"metadata\":{}},{\"name\":\"CustomerEstablishedDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResponsibilityCenterId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LedgerId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LedgerAccountNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PartyId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GlobalLocationNumber\",\"type\":\"decimal(13,0)\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "81cd3c31-0b34-417d-898a-0886fb04e919",
							"Description": "A customer is an individual or legal entity that has or has purchased a product or service.\n\nA potential customer is an individual or legal entity that has the desire to acquire a product or service, the financial ability to pay for that product or service and is located in a location in which the product or service can be delivered to them.\n\nThe definition of 'customer' is of critical importance for every organization.    \n\nIt is the customer that is the focus of product planning, marketing, sales, service, reporting and analytics.    Without 'customer' there would be no need for the organization to exist since its purpose is to serve the customer and profit from that interaction.\n\nThe definition of 'customer' must be consistent with how customers exist and interact with the organization in the real world.  An artificial or conceptual definition of 'customer' that is not consistent with these two objectives is doomed to fail because the data will not be consistent with the definition and employees will not accept concepts or terms that are not consistent with what they see, know and how they interact with customers on a working basis.\n\nMicrosoft defines 'customer' to meet these objectives.    When we look out into the real world we see two dominant types of customers:  human beings and legal entities.     \n\nHuman beings are obviously male and female individuals of various ages, sex, demographics and a variety of similar dimensions that describe and define them who purchase products, good and services.    \n\nLegal entities are those legally-defined entities such as corporations, partnerships, non-profit organizations, government organizations etc. that purchase products, goods and services.\n\nThis view of 'customer' is consistent with the real world and consistent with how employees view and interact with customers.\n\nOf course, that is just the start of identifying, defining and understanding each type of 'customer'.     There is a great deal of detail, complexity and related data that can be used to define each type of customer to various levels of detail and different dimensions of information.\n\nMicrosoft implements these detailed concepts and related data via two distinct business area models that expand the coverage and complexity of each type of customer:\n\n-  INDIVIDUAL CUSTOMER Business Area Model\n-  LEGAL ENTITY CUSTOMER Business Area Model\n\nNote:\nEach of the Microsoft models - enterprise, business area or data warehouse - have a representative level of detail for the appropriate type of customer, which is a 'subset' of the total data available in the associated INDIVIDUAL CUSTOMER or LEGAL ENTITY CUSTOMER business area models..   Reference either of those models to expand the coverage or level of detail in each respective data model.\n\nThe actual customer implemented in each model depends upon the dominant use of customer for that industry.     \n\nFor example, in the pharmaceutical industry the customer is a legal entity, which represents another corporation, company, government organization etc. that purchases the pharmaceutical product and then distributes that product to the end-customer, which is an individual in a retail environment or a government-distribution scheme.    \n\nFor this example, the pharmaceutical models will have the legal entity customer represented but not the individual 'end customer' since that is represented in the appropriate retail industry models, which are a different offering.     \n\nOf course, the entire set of data available for a legal entity customer is contained in the associated LEGAL ENTITY CUSTOMER Business Area Model.   Reference the LEGAL ENTITY CUSTOMER Business Area Model to incorporate additional data that may be of relevance.\n\nIn many industries both types of customers are represented since a legal entity or individual can purchase products, goods or services and enter into contracts.    For these industries, both types of customers are represented by some of the more significant or relevant data derived from the associated LEGAL ENTITY or INDIVIDUAL CUSTOMER business area models.   These models can be used to expand the scope or level of detail in any of the enterprise, business area or data warehouse models."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Document",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "DocumentId",
										"Description": "The unique identifier of a Document.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentId"
										}
									},
									{
										"Name": "DocumentName",
										"Description": "The name of the Document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentName"
										}
									},
									{
										"Name": "DocumentDescription",
										"Description": "The description of the Document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentDescription"
										}
									},
									{
										"Name": "GlobalDocumentTypeIdentifier",
										"Description": "The Global Document Type Identifier (GDTI) is part of the GS1 system of standards. It is used to identify a document by type or specifically as required.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 30,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "GlobalDocumentTypeIdentifier"
										}
									},
									{
										"Name": "DocumentScopeStatement",
										"Description": "The scope of the document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentScopeStatement"
										}
									},
									{
										"Name": "DocumentRevisionNumber",
										"Description": "The revision number of the associated document.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentRevisionNumber"
										}
									},
									{
										"Name": "DocumentCreatedTimestamp",
										"Description": "The timestamp that the Document was created.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentCreatedTimestamp"
										}
									},
									{
										"Name": "DocumentCompletedTimestamp",
										"Description": "The timestamp that the document was completed.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentCompletedTimestamp"
										}
									},
									{
										"Name": "DocumentFiledTimestamp",
										"Description": "The timestamp that the document was filed.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentFiledTimestamp"
										}
									},
									{
										"Name": "DocumentFirstPublishedTimestamp",
										"Description": "The timestamp that the document was first published.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentFirstPublishedTimestamp"
										}
									},
									{
										"Name": "DocumentMinimumRetentionTimestamp",
										"Description": "The timestamp that a document must be retained until. This is typically the earliest timestamp that a document can be deleted and in many cases the timestamp that the document should be deleted.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentMinimumRetentionTimestamp"
										}
									},
									{
										"Name": "DocumentCopyrightTimestamp",
										"Description": "The document copyright timestamp.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentCopyrightTimestamp"
										}
									},
									{
										"Name": "DocumentDeletedTimestamp",
										"Description": "The timestamp that the Document was deleted. Once a document is deleted all data associated with the document, attributes of the document (including Document Image) and related entities may be deleted.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentDeletedTimestamp"
										}
									},
									{
										"Name": "DocumentImage",
										"Description": "The image or text of the document (scanned).",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentImage"
										}
									},
									{
										"Name": "DocumentText",
										"Description": "The text of the document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentText"
										}
									},
									{
										"Name": "DocumentNote",
										"Description": "A note, comment or additional information regarding the Document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentNote"
										}
									},
									{
										"Name": "NumberOfPages",
										"Description": "The number of document pages.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "NumberOfPages"
										}
									},
									{
										"Name": "PageSize",
										"Description": "The size of the document pages.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "PageSize"
										}
									},
									{
										"Name": "DocumentUrl",
										"Description": "The URL at which the document is located on the www.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2083,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentUrl"
										}
									},
									{
										"Name": "IsoLanguageId",
										"Description": "The unique identifier of an ISO Language.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "IsoLanguageId"
										}
									},
									{
										"Name": "DeliveryMethodId",
										"Description": "The unique identifier of a document delivery method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DeliveryMethodId"
										}
									},
									{
										"Name": "DocumentFormatTypeId",
										"Description": "The unique identifier of a document format type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentFormatTypeId"
										}
									},
									{
										"Name": "DocumentTypeId",
										"Description": "The unique identifier of a Document Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentTypeId"
										}
									},
									{
										"Name": "MediaTypeId",
										"Description": "The unique identifier of a Media Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "MediaTypeId"
										}
									},
									{
										"Name": "CountryId",
										"Description": "The unique identifier of the Country.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "CountryId"
										}
									},
									{
										"Name": "StateId",
										"Description": "The unique identifier of a State.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "StateId"
										}
									},
									{
										"Name": "IdentificationId",
										"Description": "The unique identifier of the identification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "IdentificationId"
										}
									}
								],
								"ColumnSetEntityName": "7dbc5d9a-c39f-4e9e-8b70-f39b3dcb39ca",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Document",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Document",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"DocumentId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentId\"},\"DocumentName\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentName\"},\"DocumentDescription\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDescription\"},\"GlobalDocumentTypeIdentifier\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"GlobalDocumentTypeIdentifier\"},\"DocumentScopeStatement\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentScopeStatement\"},\"DocumentRevisionNumber\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentRevisionNumber\"},\"DocumentCreatedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCreatedTimestamp\"},\"DocumentCompletedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCompletedTimestamp\"},\"DocumentFiledTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFiledTimestamp\"},\"DocumentFirstPublishedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFirstPublishedTimestamp\"},\"DocumentMinimumRetentionTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentMinimumRetentionTimestamp\"},\"DocumentCopyrightTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCopyrightTimestamp\"},\"DocumentDeletedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDeletedTimestamp\"},\"DocumentImage\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentImage\"},\"DocumentText\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentText\"},\"DocumentNote\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentNote\"},\"NumberOfPages\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"NumberOfPages\"},\"PageSize\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"PageSize\"},\"DocumentUrl\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentUrl\"},\"IsoLanguageId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IsoLanguageId\"},\"DeliveryMethodId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DeliveryMethodId\"},\"DocumentFormatTypeId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFormatTypeId\"},\"DocumentTypeId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentTypeId\"},\"MediaTypeId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"MediaTypeId\"},\"CountryId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"CountryId\"},\"StateId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"StateId\"},\"IdentificationId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IdentificationId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Document\",\"path\":\"Document.cdm.json/Document\"},\"description\":\"A specific physical (written or printed) paper or electronic file that contains information.\",\"primaryKey\":[\"DocumentId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Document.\",\"isNullable\":false,\"name\":\"DocumentId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Document.\",\"isNullable\":true,\"name\":\"DocumentName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the Document.\",\"isNullable\":true,\"name\":\"DocumentDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"GlobalDocumentTypeIdentifier\"},\"dataType\":\"string\",\"dataTypeLength\":30,\"description\":\"The Global Document Type Identifier (GDTI) is part of the GS1 system of standards. It is used to identify a document by type or specifically as required.\",\"isNullable\":true,\"name\":\"GlobalDocumentTypeIdentifier\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentScopeStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The scope of the document.\",\"isNullable\":true,\"name\":\"DocumentScopeStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentRevisionNumber\"},\"dataType\":\"integer\",\"description\":\"The revision number of the associated document.\",\"isNullable\":true,\"name\":\"DocumentRevisionNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCreatedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Document was created.\",\"isNullable\":true,\"name\":\"DocumentCreatedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCompletedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the document was completed.\",\"isNullable\":true,\"name\":\"DocumentCompletedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFiledTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the document was filed.\",\"isNullable\":true,\"name\":\"DocumentFiledTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFirstPublishedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the document was first published.\",\"isNullable\":true,\"name\":\"DocumentFirstPublishedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentMinimumRetentionTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that a document must be retained until. This is typically the earliest timestamp that a document can be deleted and in many cases the timestamp that the document should be deleted.\",\"isNullable\":true,\"name\":\"DocumentMinimumRetentionTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCopyrightTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The document copyright timestamp.\",\"isNullable\":true,\"name\":\"DocumentCopyrightTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDeletedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Document was deleted. Once a document is deleted all data associated with the document, attributes of the document (including Document Image) and related entities may be deleted.\",\"isNullable\":true,\"name\":\"DocumentDeletedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentImage\"},\"dataType\":\"binary\",\"description\":\"The image or text of the document (scanned).\",\"isNullable\":true,\"name\":\"DocumentImage\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The text of the document.\",\"isNullable\":true,\"name\":\"DocumentText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Document.\",\"isNullable\":true,\"name\":\"DocumentNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"NumberOfPages\"},\"dataType\":\"integer\",\"description\":\"The number of document pages.\",\"isNullable\":true,\"name\":\"NumberOfPages\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"PageSize\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The size of the document pages.\",\"isNullable\":true,\"name\":\"PageSize\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentUrl\"},\"dataType\":\"string\",\"dataTypeLength\":2083,\"description\":\"The URL at which the document is located on the www.\",\"isNullable\":true,\"name\":\"DocumentUrl\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IsoLanguageId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an ISO Language.\",\"isNullable\":true,\"name\":\"IsoLanguageId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DeliveryMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a document delivery method.\",\"isNullable\":true,\"name\":\"DeliveryMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFormatTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a document format type.\",\"isNullable\":true,\"name\":\"DocumentFormatTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Document Type.\",\"isNullable\":true,\"name\":\"DocumentTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"MediaTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Media Type.\",\"isNullable\":true,\"name\":\"MediaTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"CountryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Country.\",\"isNullable\":true,\"name\":\"CountryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"StateId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a State.\",\"isNullable\":true,\"name\":\"StateId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IdentificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the identification.\",\"isNullable\":true,\"name\":\"IdentificationId\"}]}}}",
								"Description": "A specific physical (written or printed) paper or electronic file that contains information.",
								"DisplayFolderInfo": "{\"name\":\"Document Management\",\"colorCode\":\"\"}",
								"PrimaryKeys": "DocumentId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"DocumentId\",\"type\":\"long\",\"nullable\":false,\"metadata\":{}},{\"name\":\"DocumentName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GlobalDocumentTypeIdentifier\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentScopeStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentRevisionNumber\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentCreatedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentCompletedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentFiledTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentFirstPublishedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentMinimumRetentionTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentCopyrightTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentDeletedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentImage\",\"type\":\"binary\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"NumberOfPages\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PageSize\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentUrl\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IsoLanguageId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DeliveryMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentFormatTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DocumentTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MediaTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CountryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StateId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IdentificationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "f2c270d2-6ada-4166-a40f-5af3f6c084b1",
							"Description": "A specific physical (written or printed) paper or electronic file that contains information."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Employee",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "EmployeeId",
										"Description": "The unique identifier of an Employee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeId"
										}
									},
									{
										"Name": "EmployeeName",
										"Description": "The name of the Employee.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeName"
										}
									},
									{
										"Name": "DateOfBirth",
										"Description": "The date of birth of the employee.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "DateOfBirth"
										}
									},
									{
										"Name": "DateOfDeath",
										"Description": "The date of death of the employee.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "DateOfDeath"
										}
									},
									{
										"Name": "EmployeeStandardCostAmount",
										"Description": "The standard cost for the employee.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeStandardCostAmount"
										}
									},
									{
										"Name": "EmployeeOvertimeCostAmount",
										"Description": "The overtime cost for the employee.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeOvertimeCostAmount"
										}
									},
									{
										"Name": "EmployeeHireDate",
										"Description": "The date upon which the Employee was hired.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeHireDate"
										}
									},
									{
										"Name": "HighlyCompensatedEmployeeIndicator",
										"Description": "Highly compensated employees are employees that receive compensation over a certain amount for a specific year.  The amount that qualifies an employee as a 'highly compensated' employee varies from year to year.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "HighlyCompensatedEmployeeIndicator"
										}
									},
									{
										"Name": "KeyEmployeeIndicator",
										"Description": "An employee who, at any time during the plan year is (1) an officer having annual compensation greater than $130,000 (subject to cost-of-living adjusting), (2) a more-than-5-percent owner of the employer, or (3) a more-than-1-percent owner whose annual compensation exceeds $150,000.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "KeyEmployeeIndicator"
										}
									},
									{
										"Name": "ExemptEmployeeIndicator",
										"Description": "An exempt employee is an employee who, because of his or her positional duties and responsibilities and level of decision making authority is exempt from the overtime provisions of the Fair Labor Standards Act (FLSA). Exempt employees are expected, by most organizations, to work whatever hours are necessary to accomplish the goals and deliverables of the position. Thus, exempt employees have more flexibility in their schedules to come and go as necessary to accomplish work than non-exempt or hourly employees.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "ExemptEmployeeIndicator"
										}
									},
									{
										"Name": "NonexemptEmployeeIndicator",
										"Description": "When an employee is classified as nonexempt, it means that the employee is entitled to a minimum wage, and overtime pay at the rate of time and one-half the regular rate for all hours worked in excess of 40 hours per week, as well as other protections under child labor and equal pay as prescribed by the FLSA.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "NonexemptEmployeeIndicator"
										}
									},
									{
										"Name": "AlienStatusId",
										"Description": "The unique identifier of an Alien Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "AlienStatusId"
										}
									},
									{
										"Name": "SexId",
										"Description": "The unique identifier of a Sex.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "SexId"
										}
									},
									{
										"Name": "GenderId",
										"Description": "The unique identifier of a Gender.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "GenderId"
										}
									},
									{
										"Name": "RacialCategoryId",
										"Description": "The unique identifier of a Racial Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "RacialCategoryId"
										}
									},
									{
										"Name": "EthnicCategoryId",
										"Description": "The unique identifier of an Ethnic Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EthnicCategoryId"
										}
									},
									{
										"Name": "EmploymentLeadSourceId",
										"Description": "The unique identifier of an Employment Lead Source.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmploymentLeadSourceId"
										}
									},
									{
										"Name": "SecurityClearanceId",
										"Description": "The unique identifier of the Security Clearance.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "SecurityClearanceId"
										}
									},
									{
										"Name": "SecurityLevelId",
										"Description": "The unique identifier of the Security Level.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "SecurityLevelId"
										}
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "PartyId"
										}
									}
								],
								"ColumnSetEntityName": "8252146e-e3ab-4765-8aad-5acbeda288b8",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Employee",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Employee",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"EmployeeId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeId\"},\"EmployeeName\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeName\"},\"DateOfBirth\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfBirth\"},\"DateOfDeath\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfDeath\"},\"EmployeeStandardCostAmount\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeStandardCostAmount\"},\"EmployeeOvertimeCostAmount\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeOvertimeCostAmount\"},\"EmployeeHireDate\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeHireDate\"},\"HighlyCompensatedEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"HighlyCompensatedEmployeeIndicator\"},\"KeyEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"KeyEmployeeIndicator\"},\"ExemptEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"ExemptEmployeeIndicator\"},\"NonexemptEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"NonexemptEmployeeIndicator\"},\"AlienStatusId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"AlienStatusId\"},\"SexId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SexId\"},\"GenderId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"GenderId\"},\"RacialCategoryId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"RacialCategoryId\"},\"EthnicCategoryId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EthnicCategoryId\"},\"EmploymentLeadSourceId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmploymentLeadSourceId\"},\"SecurityClearanceId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityClearanceId\"},\"SecurityLevelId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityLevelId\"},\"PartyId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"PartyId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Employee\",\"path\":\"Employee.cdm.json/Employee\"},\"description\":\"An individual who is hired to provide services to a company on a regular basis in exchange for compensation.\",\"primaryKey\":[\"EmployeeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employee.\",\"isNullable\":false,\"name\":\"EmployeeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Employee.\",\"isNullable\":true,\"name\":\"EmployeeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfBirth\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of birth of the employee.\",\"isNullable\":true,\"name\":\"DateOfBirth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfDeath\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of death of the employee.\",\"isNullable\":true,\"name\":\"DateOfDeath\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeStandardCostAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard cost for the employee.\",\"isNullable\":true,\"scale\":2,\"name\":\"EmployeeStandardCostAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeOvertimeCostAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The overtime cost for the employee.\",\"isNullable\":true,\"scale\":2,\"name\":\"EmployeeOvertimeCostAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeHireDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date upon which the Employee was hired.\",\"isNullable\":true,\"name\":\"EmployeeHireDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"HighlyCompensatedEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"Highly compensated employees are employees that receive compensation over a certain amount for a specific year.  The amount that qualifies an employee as a 'highly compensated' employee varies from year to year.\",\"isNullable\":true,\"name\":\"HighlyCompensatedEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"KeyEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"An employee who, at any time during the plan year is (1) an officer having annual compensation greater than $130,000 (subject to cost-of-living adjusting), (2) a more-than-5-percent owner of the employer, or (3) a more-than-1-percent owner whose annual compensation exceeds $150,000.\",\"isNullable\":true,\"name\":\"KeyEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"ExemptEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"An exempt employee is an employee who, because of his or her positional duties and responsibilities and level of decision making authority is exempt from the overtime provisions of the Fair Labor Standards Act (FLSA). Exempt employees are expected, by most organizations, to work whatever hours are necessary to accomplish the goals and deliverables of the position. Thus, exempt employees have more flexibility in their schedules to come and go as necessary to accomplish work than non-exempt or hourly employees.\",\"isNullable\":true,\"name\":\"ExemptEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"NonexemptEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"When an employee is classified as nonexempt, it means that the employee is entitled to a minimum wage, and overtime pay at the rate of time and one-half the regular rate for all hours worked in excess of 40 hours per week, as well as other protections under child labor and equal pay as prescribed by the FLSA.\",\"isNullable\":true,\"name\":\"NonexemptEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"AlienStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Alien Status.\",\"isNullable\":true,\"name\":\"AlienStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SexId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Sex.\",\"isNullable\":true,\"name\":\"SexId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"GenderId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Gender.\",\"isNullable\":true,\"name\":\"GenderId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"RacialCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Racial Category.\",\"isNullable\":true,\"name\":\"RacialCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EthnicCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Ethnic Category.\",\"isNullable\":true,\"name\":\"EthnicCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmploymentLeadSourceId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employment Lead Source.\",\"isNullable\":true,\"name\":\"EmploymentLeadSourceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityClearanceId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Security Clearance.\",\"isNullable\":true,\"name\":\"SecurityClearanceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityLevelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Security Level.\",\"isNullable\":true,\"name\":\"SecurityLevelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"}]}}}",
								"Description": "An individual who is hired to provide services to a company on a regular basis in exchange for compensation.",
								"DisplayFolderInfo": "{\"name\":\"Human Resources & Payroll\",\"colorCode\":\"\"}",
								"PrimaryKeys": "EmployeeId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"EmployeeId\",\"type\":\"integer\",\"nullable\":false,\"metadata\":{}},{\"name\":\"EmployeeName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DateOfBirth\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DateOfDeath\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EmployeeStandardCostAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EmployeeOvertimeCostAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EmployeeHireDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"HighlyCompensatedEmployeeIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"KeyEmployeeIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ExemptEmployeeIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"NonexemptEmployeeIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AlienStatusId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SexId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GenderId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RacialCategoryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EthnicCategoryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EmploymentLeadSourceId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SecurityClearanceId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SecurityLevelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PartyId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "694126f6-e229-4dba-abce-4fa0102bc20a",
							"Description": "An individual who is hired to provide services to a company on a regular basis in exchange for compensation."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Item",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "ItemSku",
										"Description": "The Stock Keeping Unit identifier, which is typically used for inventory-related activities.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 20,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemSku"
										}
									},
									{
										"Name": "ItemName",
										"Description": "The name of the Item.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemName"
										}
									},
									{
										"Name": "ItemDescription",
										"Description": "The description of the Item.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemDescription"
										}
									},
									{
										"Name": "InformationLabelText",
										"Description": "The label text that identifies the care, use, preparation and handling of the product.\n\nExamples:\n\n- \"Keep out of direct sunlight…\"\n- \"Keep out of reach of children…\"",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "InformationLabelText"
										}
									},
									{
										"Name": "DescriptiveLabelText",
										"Description": "The label text that describes significant characteristics and benefits.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "DescriptiveLabelText"
										}
									},
									{
										"Name": "WarningInformationText",
										"Description": "The text of the warning label, if any, appearing upon the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WarningInformationText"
										}
									},
									{
										"Name": "GradeLabelText",
										"Description": "The label text that identifies product quality with letters, number or conditions.\n\nExamples:\n\n-  Grade A\n-  Prime\n-  #1",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "GradeLabelText"
										}
									},
									{
										"Name": "UniversalProductCode",
										"Description": "A system that identifies products by type and by manufacturer.  \n\nA UPC consists of twelve (12) digits.  Six (6) indicate the Manufacturer and six (6) digits describe the product.\n\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \n\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 12,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "UniversalProductCode"
										}
									},
									{
										"Name": "EuropeanArticleNumber",
										"Description": "A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\n\naka International Article Number (abbreviation of EAN retained)",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EuropeanArticleNumber"
										}
									},
									{
										"Name": "GlobalTradeItemNumber",
										"Description": "The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "GlobalTradeItemNumber"
										}
									},
									{
										"Name": "ItemElectronicProductCode",
										"Description": "EPC is the RFID version of the UPC barcode. \nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemElectronicProductCode"
										}
									},
									{
										"Name": "ComponentPartIdentifier",
										"Description": "The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 30,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ComponentPartIdentifier"
										}
									},
									{
										"Name": "PluCode",
										"Description": "PLU Codes are typically assigned to fresh produce but can also be assigned to other items as well.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 5,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "PluCode"
										}
									},
									{
										"Name": "EngineeringReferenceNumber",
										"Description": "The number used by manufacturing or engineering when referencing the Product.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EngineeringReferenceNumber"
										}
									},
									{
										"Name": "CopyrightNumber",
										"Description": "The number of the copyright granted.\n\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 18,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CopyrightNumber"
										}
									},
									{
										"Name": "UlControlNumber",
										"Description": "Any unit that connects to a source greater than 30 volts rms must be certified by Underwriter's Laboratories (UL) if it will be sold in the United States.\n\nThe UL control number identifies the manufacturer and certification classification.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 4,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "UlControlNumber"
										}
									},
									{
										"Name": "UlFileNumber",
										"Description": "The UL file number indicates where report files can be found at Underwriters Laboratories.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 7,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "UlFileNumber"
										}
									},
									{
										"Name": "ItemNote",
										"Description": "A note, comment or additional information regarding the item.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemNote"
										}
									},
									{
										"Name": "ProductId",
										"Description": "The unique identifier of a Product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ProductId"
										}
									},
									{
										"Name": "AssetIndicator",
										"Description": "Indicates whether the item becomes an asset once the item is put into service.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "AssetIndicator"
										}
									},
									{
										"Name": "ItemLength",
										"Description": "The standard item length.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemLength"
										}
									},
									{
										"Name": "ItemWidth",
										"Description": "The standard item width.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemWidth"
										}
									},
									{
										"Name": "ItemHeight",
										"Description": "The standard item height.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemHeight"
										}
									},
									{
										"Name": "LwhUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "LwhUomId"
										}
									},
									{
										"Name": "ItemVolume",
										"Description": "The standard item volume.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemVolume"
										}
									},
									{
										"Name": "ItemVolumeUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemVolumeUomId"
										}
									},
									{
										"Name": "ItemWeight",
										"Description": "The standard item weight.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemWeight"
										}
									},
									{
										"Name": "WeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WeightUomId"
										}
									},
									{
										"Name": "ShelfLifeDays",
										"Description": "The amount of time that a product can be stored before it can no longer be safely consumed or sold.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ShelfLifeDays"
										}
									},
									{
										"Name": "MinimumStorageTemperature",
										"Description": "The minimum temperature at which the item may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageTemperature"
										}
									},
									{
										"Name": "MinimumStorageTemperatureUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageTemperatureUomId"
										}
									},
									{
										"Name": "MaximumStorageTemperature",
										"Description": "The maximum temperature at which the item may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageTemperature"
										}
									},
									{
										"Name": "MaximumStorageTemperatureUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageTemperatureUomId"
										}
									},
									{
										"Name": "MinimumStorageHumidity",
										"Description": "The minimum storage humidity that the item may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageHumidity"
										}
									},
									{
										"Name": "MinimumStorageHumidityUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStorageHumidityUomId"
										}
									},
									{
										"Name": "MaximumStorageHumidity",
										"Description": "The maximum storage humidity that the item may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageHumidity"
										}
									},
									{
										"Name": "MaximumStorageHumidityUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MaximumStorageHumidityUomId"
										}
									},
									{
										"Name": "StandardQuantityUnitOfMeasureId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardQuantityUnitOfMeasureId"
										}
									},
									{
										"Name": "StandardCost",
										"Description": "The estimated or calculated cost to manufacture or produce the Product. Often used for calculating the value of the Item for inventory purposes.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardCost"
										}
									},
									{
										"Name": "ListPrice",
										"Description": "The standard retail price of the Product before the application of any discount.\n\nThis is the price that normally appears in catalogs, on purchase orders and invoices.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ListPrice"
										}
									},
									{
										"Name": "StandardWholesalePrice",
										"Description": "The standard, or default, price charged wholesalers for the Product.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardWholesalePrice"
										}
									},
									{
										"Name": "TargetReturnPrice",
										"Description": "A price established as part of a strategy to yield a specific return on investment.\n\nTarget-Return Price = (unit cost) + ((desired return)*(invested capital))/unit sales\n\nThe Target-Return Price ignores competitor's pricing and price elasticity.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "TargetReturnPrice"
										}
									},
									{
										"Name": "MarginAmount",
										"Description": "The difference between the price of a product and the cost to produce it.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MarginAmount"
										}
									},
									{
										"Name": "VerbalBidsRequiredForMinimumAmountRange",
										"Description": "A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "VerbalBidsRequiredForMinimumAmountRange"
										}
									},
									{
										"Name": "VerbalBidsRequiredForMaximumAmountRange",
										"Description": "A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "VerbalBidsRequiredForMaximumAmountRange"
										}
									},
									{
										"Name": "WrittenBidsRequiredForMinimumAmountRange",
										"Description": "A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WrittenBidsRequiredForMinimumAmountRange"
										}
									},
									{
										"Name": "WrittenBidsRequiredForMaximumAmountRange",
										"Description": "A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "WrittenBidsRequiredForMaximumAmountRange"
										}
									},
									{
										"Name": "CompetitiveBidsRequiredForMinimumAmountRange",
										"Description": "A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CompetitiveBidsRequiredForMinimumAmountRange"
										}
									},
									{
										"Name": "CompetitiveBidsRequiredForMaximumAmountRange",
										"Description": "A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CompetitiveBidsRequiredForMaximumAmountRange"
										}
									},
									{
										"Name": "LotSizeQuantity",
										"Description": "The quantity of Item to be purchased or manufactured.  \n\nThe objective is to spread setup and ordering costs over a large number of pieces (Items) to reduce unit costs.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "LotSizeQuantity"
										}
									},
									{
										"Name": "MinimumOrderQuantity",
										"Description": "The smallest order quantity which, in principle, is allowed.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumOrderQuantity"
										}
									},
									{
										"Name": "MinimumStockQuantity",
										"Description": "A control limit within a stock control system which could indicate the point at which an order should be placed, or indicate if stocks are too low, for a specific item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "MinimumStockQuantity"
										}
									},
									{
										"Name": "ActiveItemInventoryPeriodNumberOfDays",
										"Description": "The number of days that the organization defines as the 'active item period'.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ActiveItemInventoryPeriodNumberOfDays"
										}
									},
									{
										"Name": "PutAwayRulesStatement",
										"Description": "The internal rules and procedures for positioning stock in a warehouse or store after goods inward processing.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "PutAwayRulesStatement"
										}
									},
									{
										"Name": "EurobrandIndicator",
										"Description": "Indicates that the Product carries a brand name that is marketed similarly throughout Europe.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EurobrandIndicator"
										}
									},
									{
										"Name": "StoreMixedIndicator",
										"Description": "Determines whether or not the Item may be stored in a location that already contains other Items.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StoreMixedIndicator"
										}
									},
									{
										"Name": "StoreToExistingItemIndicator",
										"Description": "Determines whether or not the Item may be stored in a location that already contains a different lot of the same item.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StoreToExistingItemIndicator"
										}
									},
									{
										"Name": "StoreToExistingLotIndicator",
										"Description": "Determines whether or not an Item may be stored in a location that already contains the same lot of the same Item.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StoreToExistingLotIndicator"
										}
									},
									{
										"Name": "SoleSourceItemIndicator",
										"Description": "Indicates that the Item is purchased from just one vendor.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SoleSourceItemIndicator"
										}
									},
									{
										"Name": "SoleSourceSupplierName",
										"Description": "The single vendor from whom the Item is purchased.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SoleSourceSupplierName"
										}
									},
									{
										"Name": "LifedItemIndicator",
										"Description": "A consumable or repairable product for which the manufacturer has specified a finite life in either some form of time period or in a number of cycles or activities.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "LifedItemIndicator"
										}
									},
									{
										"Name": "InStockOutOfStockIndicator",
										"Description": "The condition existing when a supply requisition cannot be filled from stock. Stock-out Rate-The number of stock-outs per hundred line items picked.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "InStockOutOfStockIndicator"
										}
									},
									{
										"Name": "HazardousMaterialIndicator",
										"Description": "Any substance that has been determined by the Occupational Safety and Health Administration (OSHA) as having the potential to cause a physical or health hazard. This is based on its potential for burning, exploding, or otherwise causing an injury to workers or the likelihood that exposure will result in acute or chronic health effects among employees",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "HazardousMaterialIndicator"
										}
									},
									{
										"Name": "ActiveInventoryItemIndicator",
										"Description": "Any item or element of inventory which has been used or sold within a given period.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ActiveInventoryItemIndicator"
										}
									},
									{
										"Name": "EligibleForExportIndicator",
										"Description": "Indicates that the Product is eligible for export to foreign countries without restriction.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "EligibleForExportIndicator"
										}
									},
									{
										"Name": "CoManagedInventoryItemIndicator",
										"Description": "A support arrangement similar to Vendor Managed Inventory but where replacement orders for the vendor-owned stock are agreed by the user prior to delivery",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CoManagedInventoryItemIndicator"
										}
									},
									{
										"Name": "RotableItemIndicator",
										"Description": "An repairable inventory item that can be repeatedly restored to a fully serviceable condition and re-used over the normal life cycle of the parent equipment to which it is related. Such items have a repair lead time as well as a procurement lead time and normally have a serial number that is retained throughout the rotable life regardless of the extent of replacement of its component parts.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "RotableItemIndicator"
										}
									},
									{
										"Name": "ConsignmentItemIndicator",
										"Description": "Consignments can be used to keep track of inventory that you don't own, but at the time you sell it, you must pay for it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ConsignmentItemIndicator"
										}
									},
									{
										"Name": "SerializedItemIndicator",
										"Description": "Indicates that the Item is serialized.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SerializedItemIndicator"
										}
									},
									{
										"Name": "TrackSerialNumberIndicator",
										"Description": "Indicates that the Item must be tracked by Serial Number.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "TrackSerialNumberIndicator"
										}
									},
									{
										"Name": "RepairableItemIndicator",
										"Description": "An inventory item that is not normally consumed in use but one which will be repaired and re-used as part of the normal stock policy for that item. Such items have a repair lead-time as well as a procurement lead-time.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "RepairableItemIndicator"
										}
									},
									{
										"Name": "RepairPeriod",
										"Description": "The total out of service time, including transit time, from when a repairable component becomes unfit for use until the time it is returned to stock and is available for further use.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 3,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "RepairPeriod"
										}
									},
									{
										"Name": "ManufacturerId",
										"Description": "The unique identifier of a Manufacturer.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ManufacturerId"
										}
									},
									{
										"Name": "ItemIdentificationMethodId",
										"Description": "The unique identifier of the Item Identification Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemIdentificationMethodId"
										}
									},
									{
										"Name": "CommodityTypeId",
										"Description": "The unique identifier of a Commodity Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "CommodityTypeId"
										}
									},
									{
										"Name": "ItemSafetyClassificationId",
										"Description": "The unique identifier of an Item Safety Classification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemSafetyClassificationId"
										}
									},
									{
										"Name": "StandardStorageUnitTypeId",
										"Description": "The unique identifier of the Standard Storage Unit Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "StandardStorageUnitTypeId"
										}
									},
									{
										"Name": "SecurityLevelId",
										"Description": "The unique identifier of the Item Security Level.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "SecurityLevelId"
										}
									},
									{
										"Name": "VendorId",
										"Description": "The unique identifier of a Vendor.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "VendorId"
										}
									},
									{
										"Name": "FamilyGroupId",
										"Description": "The unique identifier of a Family Group.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "FamilyGroupId"
										}
									},
									{
										"Name": "HazardSeverityCategoryId",
										"Description": "The unique identifier of a Hazard Severity Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "HazardSeverityCategoryId"
										}
									},
									{
										"Name": "DepreciationMethodId",
										"Description": "The unique identifier of the Depreciation Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "DepreciationMethodId"
										}
									},
									{
										"Name": "ItemTypeId",
										"Description": "The unique identifier of an Item Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "ItemTypeId"
										}
									},
									{
										"Name": "BarCodeId",
										"Description": "The unique identifier of a Bar Code.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Item.cdm.json/Item",
											"Name": "BarCodeId"
										}
									}
								],
								"ColumnSetEntityName": "8628d09b-7fc0-41dd-9453-a30589877164",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Item",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Item",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ItemSku\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSku\"},\"ItemName\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemName\"},\"ItemDescription\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemDescription\"},\"InformationLabelText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InformationLabelText\"},\"DescriptiveLabelText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DescriptiveLabelText\"},\"WarningInformationText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WarningInformationText\"},\"GradeLabelText\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GradeLabelText\"},\"UniversalProductCode\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UniversalProductCode\"},\"EuropeanArticleNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EuropeanArticleNumber\"},\"GlobalTradeItemNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GlobalTradeItemNumber\"},\"ItemElectronicProductCode\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemElectronicProductCode\"},\"ComponentPartIdentifier\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ComponentPartIdentifier\"},\"PluCode\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PluCode\"},\"EngineeringReferenceNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EngineeringReferenceNumber\"},\"CopyrightNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CopyrightNumber\"},\"UlControlNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlControlNumber\"},\"UlFileNumber\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlFileNumber\"},\"ItemNote\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemNote\"},\"ProductId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ProductId\"},\"AssetIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"AssetIndicator\"},\"ItemLength\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemLength\"},\"ItemWidth\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWidth\"},\"ItemHeight\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemHeight\"},\"LwhUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LwhUomId\"},\"ItemVolume\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolume\"},\"ItemVolumeUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolumeUomId\"},\"ItemWeight\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWeight\"},\"WeightUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WeightUomId\"},\"ShelfLifeDays\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ShelfLifeDays\"},\"MinimumStorageTemperature\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperature\"},\"MinimumStorageTemperatureUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperatureUomId\"},\"MaximumStorageTemperature\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperature\"},\"MaximumStorageTemperatureUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperatureUomId\"},\"MinimumStorageHumidity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidity\"},\"MinimumStorageHumidityUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidityUomId\"},\"MaximumStorageHumidity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidity\"},\"MaximumStorageHumidityUomId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidityUomId\"},\"StandardQuantityUnitOfMeasureId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardQuantityUnitOfMeasureId\"},\"StandardCost\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardCost\"},\"ListPrice\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ListPrice\"},\"StandardWholesalePrice\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardWholesalePrice\"},\"TargetReturnPrice\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TargetReturnPrice\"},\"MarginAmount\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MarginAmount\"},\"VerbalBidsRequiredForMinimumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMinimumAmountRange\"},\"VerbalBidsRequiredForMaximumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMaximumAmountRange\"},\"WrittenBidsRequiredForMinimumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMinimumAmountRange\"},\"WrittenBidsRequiredForMaximumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMaximumAmountRange\"},\"CompetitiveBidsRequiredForMinimumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMinimumAmountRange\"},\"CompetitiveBidsRequiredForMaximumAmountRange\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMaximumAmountRange\"},\"LotSizeQuantity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LotSizeQuantity\"},\"MinimumOrderQuantity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumOrderQuantity\"},\"MinimumStockQuantity\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStockQuantity\"},\"ActiveItemInventoryPeriodNumberOfDays\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveItemInventoryPeriodNumberOfDays\"},\"PutAwayRulesStatement\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PutAwayRulesStatement\"},\"EurobrandIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EurobrandIndicator\"},\"StoreMixedIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreMixedIndicator\"},\"StoreToExistingItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingItemIndicator\"},\"StoreToExistingLotIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingLotIndicator\"},\"SoleSourceItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceItemIndicator\"},\"SoleSourceSupplierName\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceSupplierName\"},\"LifedItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LifedItemIndicator\"},\"InStockOutOfStockIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InStockOutOfStockIndicator\"},\"HazardousMaterialIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardousMaterialIndicator\"},\"ActiveInventoryItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveInventoryItemIndicator\"},\"EligibleForExportIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EligibleForExportIndicator\"},\"CoManagedInventoryItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CoManagedInventoryItemIndicator\"},\"RotableItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RotableItemIndicator\"},\"ConsignmentItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ConsignmentItemIndicator\"},\"SerializedItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SerializedItemIndicator\"},\"TrackSerialNumberIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TrackSerialNumberIndicator\"},\"RepairableItemIndicator\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairableItemIndicator\"},\"RepairPeriod\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairPeriod\"},\"ManufacturerId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ManufacturerId\"},\"ItemIdentificationMethodId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemIdentificationMethodId\"},\"CommodityTypeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CommodityTypeId\"},\"ItemSafetyClassificationId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSafetyClassificationId\"},\"StandardStorageUnitTypeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardStorageUnitTypeId\"},\"SecurityLevelId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SecurityLevelId\"},\"VendorId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VendorId\"},\"FamilyGroupId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"FamilyGroupId\"},\"HazardSeverityCategoryId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardSeverityCategoryId\"},\"DepreciationMethodId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DepreciationMethodId\"},\"ItemTypeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemTypeId\"},\"BarCodeId\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"BarCodeId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Item\",\"path\":\"Item.cdm.json/Item\"},\"description\":\"Something that is inventoried.\\n\\nA SKU, Stock keeping unit, refers to a specific item in a specific unit of measure.  \\n\\nFor example, if you distributed a specific chemical in both gallon containers and barrels then you would maintain the inventory as two SKUs even though they are both the same specific chemical.\\n\\nItems are classified as follows:\\n\\n- Tool\\n- Product\\n- Raw Material\\n- Kit\\n- Replacement Part\\n- Unit\\n- Miscellaneous Item\",\"primaryKey\":[\"ItemSku\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSku\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The Stock Keeping Unit identifier, which is typically used for inventory-related activities.\",\"isNullable\":false,\"name\":\"ItemSku\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Item.\",\"isNullable\":true,\"name\":\"ItemName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the Item.\",\"isNullable\":true,\"name\":\"ItemDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InformationLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies the care, use, preparation and handling of the product.\\n\\nExamples:\\n\\n- \\\"Keep out of direct sunlight…\\\"\\n- \\\"Keep out of reach of children…\\\"\",\"isNullable\":true,\"name\":\"InformationLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DescriptiveLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that describes significant characteristics and benefits.\",\"isNullable\":true,\"name\":\"DescriptiveLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WarningInformationText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The text of the warning label, if any, appearing upon the product.\",\"isNullable\":true,\"name\":\"WarningInformationText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GradeLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies product quality with letters, number or conditions.\\n\\nExamples:\\n\\n-  Grade A\\n-  Prime\\n-  #1\",\"isNullable\":true,\"name\":\"GradeLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UniversalProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":12,\"description\":\"A system that identifies products by type and by manufacturer.  \\n\\nA UPC consists of twelve (12) digits.  Six (6) indicate the Manufacturer and six (6) digits describe the product.\\n\\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \\n\\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.\",\"isNullable\":true,\"scale\":0,\"name\":\"UniversalProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EuropeanArticleNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\\n\\naka International Article Number (abbreviation of EAN retained)\",\"isNullable\":true,\"scale\":0,\"name\":\"EuropeanArticleNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"GlobalTradeItemNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalTradeItemNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemElectronicProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"EPC is the RFID version of the UPC barcode. \\nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \\nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \\nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.\",\"isNullable\":true,\"scale\":0,\"name\":\"ItemElectronicProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ComponentPartIdentifier\"},\"dataType\":\"string\",\"dataTypeLength\":30,\"description\":\"The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.\",\"isNullable\":true,\"name\":\"ComponentPartIdentifier\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PluCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":5,\"description\":\"PLU Codes are typically assigned to fresh produce but can also be assigned to other items as well.\",\"isNullable\":true,\"scale\":0,\"name\":\"PluCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EngineeringReferenceNumber\"},\"dataType\":\"integer\",\"description\":\"The number used by manufacturing or engineering when referencing the Product.\",\"isNullable\":true,\"name\":\"EngineeringReferenceNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CopyrightNumber\"},\"dataType\":\"string\",\"dataTypeLength\":18,\"description\":\"The number of the copyright granted.\\n\\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.\",\"isNullable\":true,\"name\":\"CopyrightNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlControlNumber\"},\"dataType\":\"string\",\"dataTypeLength\":4,\"description\":\"Any unit that connects to a source greater than 30 volts rms must be certified by Underwriter's Laboratories (UL) if it will be sold in the United States.\\n\\nThe UL control number identifies the manufacturer and certification classification.\",\"isNullable\":true,\"name\":\"UlControlNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"UlFileNumber\"},\"dataType\":\"string\",\"dataTypeLength\":7,\"description\":\"The UL file number indicates where report files can be found at Underwriters Laboratories.\",\"isNullable\":true,\"name\":\"UlFileNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the item.\",\"isNullable\":true,\"name\":\"ItemNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Product.\",\"isNullable\":true,\"name\":\"ProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"AssetIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the item becomes an asset once the item is put into service.\",\"isNullable\":true,\"name\":\"AssetIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemLength\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item length.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemLength\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWidth\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item width.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemWidth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemHeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item height.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemHeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LwhUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"LwhUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolume\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item volume.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemVolume\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemVolumeUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ItemVolumeUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard item weight.\",\"isNullable\":true,\"scale\":8,\"name\":\"ItemWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"WeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ShelfLifeDays\"},\"dataType\":\"integer\",\"description\":\"The amount of time that a product can be stored before it can no longer be safely consumed or sold.\",\"isNullable\":true,\"name\":\"ShelfLifeDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum temperature at which the item may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageTemperatureUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MinimumStorageTemperatureUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum temperature at which the item may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageTemperatureUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MaximumStorageTemperatureUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum storage humidity that the item may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStorageHumidityUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MinimumStorageHumidityUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum storage humidity that the item may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MaximumStorageHumidityUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"MaximumStorageHumidityUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardQuantityUnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"StandardQuantityUnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardCost\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The estimated or calculated cost to manufacture or produce the Product. Often used for calculating the value of the Item for inventory purposes.\",\"isNullable\":true,\"scale\":2,\"name\":\"StandardCost\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ListPrice\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard retail price of the Product before the application of any discount.\\n\\nThis is the price that normally appears in catalogs, on purchase orders and invoices.\",\"isNullable\":true,\"scale\":2,\"name\":\"ListPrice\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardWholesalePrice\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard, or default, price charged wholesalers for the Product.\",\"isNullable\":true,\"scale\":2,\"name\":\"StandardWholesalePrice\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TargetReturnPrice\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A price established as part of a strategy to yield a specific return on investment.\\n\\nTarget-Return Price = (unit cost) + ((desired return)*(invested capital))/unit sales\\n\\nThe Target-Return Price ignores competitor's pricing and price elasticity.\",\"isNullable\":true,\"scale\":2,\"name\":\"TargetReturnPrice\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MarginAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The difference between the price of a product and the cost to produce it.\",\"isNullable\":true,\"scale\":2,\"name\":\"MarginAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMinimumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"VerbalBidsRequiredForMinimumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VerbalBidsRequiredForMaximumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the verbal bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"VerbalBidsRequiredForMaximumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMinimumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"WrittenBidsRequiredForMinimumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"WrittenBidsRequiredForMaximumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the written bids are valid for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"WrittenBidsRequiredForMaximumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMinimumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"CompetitiveBidsRequiredForMinimumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CompetitiveBidsRequiredForMaximumAmountRange\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A flag or indicator denoting the competitive bids are required for the associated minimum/maximum quantity of Items.\",\"isNullable\":true,\"scale\":2,\"name\":\"CompetitiveBidsRequiredForMaximumAmountRange\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LotSizeQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The quantity of Item to be purchased or manufactured.  \\n\\nThe objective is to spread setup and ordering costs over a large number of pieces (Items) to reduce unit costs.\",\"isNullable\":true,\"scale\":2,\"name\":\"LotSizeQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumOrderQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The smallest order quantity which, in principle, is allowed.\",\"isNullable\":true,\"scale\":2,\"name\":\"MinimumOrderQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"MinimumStockQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"A control limit within a stock control system which could indicate the point at which an order should be placed, or indicate if stocks are too low, for a specific item.\",\"isNullable\":true,\"scale\":2,\"name\":\"MinimumStockQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveItemInventoryPeriodNumberOfDays\"},\"dataType\":\"integer\",\"description\":\"The number of days that the organization defines as the 'active item period'.\",\"isNullable\":true,\"name\":\"ActiveItemInventoryPeriodNumberOfDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"PutAwayRulesStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The internal rules and procedures for positioning stock in a warehouse or store after goods inward processing.\",\"isNullable\":true,\"name\":\"PutAwayRulesStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EurobrandIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Product carries a brand name that is marketed similarly throughout Europe.\",\"isNullable\":true,\"name\":\"EurobrandIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreMixedIndicator\"},\"dataType\":\"boolean\",\"description\":\"Determines whether or not the Item may be stored in a location that already contains other Items.\",\"isNullable\":true,\"name\":\"StoreMixedIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Determines whether or not the Item may be stored in a location that already contains a different lot of the same item.\",\"isNullable\":true,\"name\":\"StoreToExistingItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StoreToExistingLotIndicator\"},\"dataType\":\"boolean\",\"description\":\"Determines whether or not an Item may be stored in a location that already contains the same lot of the same Item.\",\"isNullable\":true,\"name\":\"StoreToExistingLotIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Item is purchased from just one vendor.\",\"isNullable\":true,\"name\":\"SoleSourceItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SoleSourceSupplierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The single vendor from whom the Item is purchased.\",\"isNullable\":true,\"name\":\"SoleSourceSupplierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"LifedItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"A consumable or repairable product for which the manufacturer has specified a finite life in either some form of time period or in a number of cycles or activities.\",\"isNullable\":true,\"name\":\"LifedItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"InStockOutOfStockIndicator\"},\"dataType\":\"boolean\",\"description\":\"The condition existing when a supply requisition cannot be filled from stock. Stock-out Rate-The number of stock-outs per hundred line items picked.\",\"isNullable\":true,\"name\":\"InStockOutOfStockIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardousMaterialIndicator\"},\"dataType\":\"boolean\",\"description\":\"Any substance that has been determined by the Occupational Safety and Health Administration (OSHA) as having the potential to cause a physical or health hazard. This is based on its potential for burning, exploding, or otherwise causing an injury to workers or the likelihood that exposure will result in acute or chronic health effects among employees\",\"isNullable\":true,\"name\":\"HazardousMaterialIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ActiveInventoryItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Any item or element of inventory which has been used or sold within a given period.\",\"isNullable\":true,\"name\":\"ActiveInventoryItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"EligibleForExportIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Product is eligible for export to foreign countries without restriction.\",\"isNullable\":true,\"name\":\"EligibleForExportIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CoManagedInventoryItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"A support arrangement similar to Vendor Managed Inventory but where replacement orders for the vendor-owned stock are agreed by the user prior to delivery\",\"isNullable\":true,\"name\":\"CoManagedInventoryItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RotableItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"An repairable inventory item that can be repeatedly restored to a fully serviceable condition and re-used over the normal life cycle of the parent equipment to which it is related. Such items have a repair lead time as well as a procurement lead time and normally have a serial number that is retained throughout the rotable life regardless of the extent of replacement of its component parts.\",\"isNullable\":true,\"name\":\"RotableItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ConsignmentItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Consignments can be used to keep track of inventory that you don't own, but at the time you sell it, you must pay for it.\",\"isNullable\":true,\"name\":\"ConsignmentItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SerializedItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Item is serialized.\",\"isNullable\":true,\"name\":\"SerializedItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"TrackSerialNumberIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Item must be tracked by Serial Number.\",\"isNullable\":true,\"name\":\"TrackSerialNumberIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairableItemIndicator\"},\"dataType\":\"boolean\",\"description\":\"An inventory item that is not normally consumed in use but one which will be repaired and re-used as part of the normal stock policy for that item. Such items have a repair lead-time as well as a procurement lead-time.\",\"isNullable\":true,\"name\":\"RepairableItemIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"RepairPeriod\"},\"dataType\":\"decimal\",\"dataTypeLength\":3,\"description\":\"The total out of service time, including transit time, from when a repairable component becomes unfit for use until the time it is returned to stock and is available for further use.\",\"isNullable\":true,\"scale\":0,\"name\":\"RepairPeriod\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ManufacturerId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Manufacturer.\",\"isNullable\":true,\"name\":\"ManufacturerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemIdentificationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Item Identification Method.\",\"isNullable\":true,\"name\":\"ItemIdentificationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"CommodityTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Commodity Type.\",\"isNullable\":true,\"name\":\"CommodityTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemSafetyClassificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Item Safety Classification.\",\"isNullable\":true,\"name\":\"ItemSafetyClassificationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"StandardStorageUnitTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Standard Storage Unit Type.\",\"isNullable\":true,\"name\":\"StandardStorageUnitTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"SecurityLevelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Item Security Level.\",\"isNullable\":true,\"name\":\"SecurityLevelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"VendorId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Vendor.\",\"isNullable\":true,\"name\":\"VendorId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"FamilyGroupId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Family Group.\",\"isNullable\":true,\"name\":\"FamilyGroupId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"HazardSeverityCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Hazard Severity Category.\",\"isNullable\":true,\"name\":\"HazardSeverityCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"DepreciationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Depreciation Method.\",\"isNullable\":true,\"name\":\"DepreciationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"ItemTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Item Type.\",\"isNullable\":true,\"name\":\"ItemTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Item.cdm.json/Item\",\"name\":\"BarCodeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Bar Code.\",\"isNullable\":true,\"name\":\"BarCodeId\"}]}}}",
								"Description": "Something that is inventoried.\n\nA SKU, Stock keeping unit, refers to a specific item in a specific unit of measure.  \n\nFor example, if you distributed a specific chemical in both gallon containers and barrels then you would maintain the inventory as two SKUs even though they are both the same specific chemical.\n\nItems are classified as follows:\n\n- Tool\n- Product\n- Raw Material\n- Kit\n- Replacement Part\n- Unit\n- Miscellaneous Item",
								"DisplayFolderInfo": "{\"name\":\"Inventory\",\"colorCode\":\"\"}",
								"PrimaryKeys": "ItemSku",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "2",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"ItemSku\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"ItemName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"InformationLabelText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DescriptiveLabelText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarningInformationText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GradeLabelText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UniversalProductCode\",\"type\":\"decimal(12,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EuropeanArticleNumber\",\"type\":\"decimal(13,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GlobalTradeItemNumber\",\"type\":\"decimal(14,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemElectronicProductCode\",\"type\":\"decimal(14,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ComponentPartIdentifier\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PluCode\",\"type\":\"decimal(5,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EngineeringReferenceNumber\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CopyrightNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UlControlNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UlFileNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AssetIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemLength\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemWidth\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemHeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LwhUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemVolume\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemVolumeUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemWeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WeightUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShelfLifeDays\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumStorageTemperature\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumStorageTemperatureUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumStorageTemperature\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumStorageTemperatureUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumStorageHumidity\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumStorageHumidityUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumStorageHumidity\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumStorageHumidityUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StandardQuantityUnitOfMeasureId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StandardCost\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ListPrice\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StandardWholesalePrice\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TargetReturnPrice\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MarginAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"VerbalBidsRequiredForMinimumAmountRange\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"VerbalBidsRequiredForMaximumAmountRange\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WrittenBidsRequiredForMinimumAmountRange\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WrittenBidsRequiredForMaximumAmountRange\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CompetitiveBidsRequiredForMinimumAmountRange\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CompetitiveBidsRequiredForMaximumAmountRange\",\"type\":\"decimal(18,2)\",\"nu",
								"spark.sql.sources.schema.part.1": "llable\":true,\"metadata\":{}},{\"name\":\"LotSizeQuantity\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumOrderQuantity\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumStockQuantity\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ActiveItemInventoryPeriodNumberOfDays\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PutAwayRulesStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EurobrandIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StoreMixedIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StoreToExistingItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StoreToExistingLotIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SoleSourceItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SoleSourceSupplierName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LifedItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"InStockOutOfStockIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"HazardousMaterialIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ActiveInventoryItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EligibleForExportIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CoManagedInventoryItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RotableItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ConsignmentItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SerializedItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TrackSerialNumberIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RepairableItemIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RepairPeriod\",\"type\":\"decimal(3,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ManufacturerId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemIdentificationMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommodityTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemSafetyClassificationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StandardStorageUnitTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SecurityLevelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"VendorId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FamilyGroupId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"HazardSeverityCategoryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DepreciationMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BarCodeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "40ebf521-1df8-42d6-99a3-13f23fdbb9dc",
							"Description": "Something that is inventoried.\n\nA SKU, Stock keeping unit, refers to a specific item in a specific unit of measure.  \n\nFor example, if you distributed a specific chemical in both gallon containers and barrels then you would maintain the inventory as two SKUs even though they are both the same specific chemical.\n\nItems are classified as follows:\n\n- Tool\n- Product\n- Raw Material\n- Kit\n- Replacement Part\n- Unit\n- Miscellaneous Item"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ManufacturingProduct",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "ProductId",
										"Description": "The unique identifier of a Product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductId"
										}
									},
									{
										"Name": "ProductName",
										"Description": "The name of the Product, which normally corresponds to the 'marketing name' of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductName"
										}
									},
									{
										"Name": "ProductShortDescription",
										"Description": "The short description of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductShortDescription"
										}
									},
									{
										"Name": "ProductDescription",
										"Description": "The description of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductDescription"
										}
									},
									{
										"Name": "ProductInternalName",
										"Description": "The internal name by which a Product is known.\n\nThis normally approximates the business name by which the public identifies the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductInternalName"
										}
									},
									{
										"Name": "ProductModelName",
										"Description": "The name of the Product Model.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductModelName"
										}
									},
									{
										"Name": "ProductBaseName",
										"Description": "The name of the Product, which normally corresponds to the 'marketing name' of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductBaseName"
										}
									},
									{
										"Name": "ProductCodeName",
										"Description": "The internal code name by which the Product is known within the company.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductCodeName"
										}
									},
									{
										"Name": "ProductGenericName",
										"Description": "The generic name by which the chemical is known.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductGenericName"
										}
									},
									{
										"Name": "ProductVersionNumber",
										"Description": "A version or release number associated with the product (of particular value for software releases).",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductVersionNumber"
										}
									},
									{
										"Name": "ProductModelId",
										"Description": "The unique identifier of a Model of the Product.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductModelId"
										}
									},
									{
										"Name": "ProductIntendedUse",
										"Description": "The intended use of the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductIntendedUse"
										}
									},
									{
										"Name": "IntroductionDate",
										"Description": "The date that the Product was introduced for sale.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "IntroductionDate"
										}
									},
									{
										"Name": "FirstDateManufactured",
										"Description": "The date that the Product was first manufactured by the Manufacturer.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "FirstDateManufactured"
										}
									},
									{
										"Name": "PlannedAbandonmentDate",
										"Description": "The planned date to discontinue marketing the product.    \n\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\n\nThere are three (3) strategies for abandoning a product:\n\n(1)  Reduced marketing and expenditures to maintain profits.\n\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\n\n(3)  Maintain the marketing level until the product is discontinued.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PlannedAbandonmentDate"
										}
									},
									{
										"Name": "ActualAbandonmentDate",
										"Description": "The actual date that the marketing of the product was discontinued. \n\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\n\nThere are three (3) strategies for abandoning a product:\n\n(1)  Reduced marketing and expenditures to maintain profits.\n\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\n\n(3)  Maintain the marketing level until the product is discontinued.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ActualAbandonmentDate"
										}
									},
									{
										"Name": "GlobalTradeItemNumber",
										"Description": "The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.\n\nA GTIN can be assigned to only one brick.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "GlobalTradeItemNumber"
										}
									},
									{
										"Name": "GtinName",
										"Description": "A note, comment or additional information regarding the Product GTIN.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "GtinName"
										}
									},
									{
										"Name": "EuropeanArticleNumber",
										"Description": "A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\n\naka International Article Number (abbreviation of EAN retained)",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "EuropeanArticleNumber"
										}
									},
									{
										"Name": "UniversalProductCode",
										"Description": "A system that identifies products by type and by manufacturer.  \n\nA UPC consists of eleven (11) digits.  Six (6) indicate the Manufacturer and five (5) digits describe the product.\n\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \n\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 12,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "UniversalProductCode"
										}
									},
									{
										"Name": "GpcBrickId",
										"Description": "The unique identifier of a GPC Brick.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "GpcBrickId"
										}
									},
									{
										"Name": "ItemElectronicProductCode",
										"Description": "EPC is the RFID version of the UPC barcode. \nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 14,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ItemElectronicProductCode"
										}
									},
									{
										"Name": "ComponentPartIdentifier",
										"Description": "The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 30,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ComponentPartIdentifier"
										}
									},
									{
										"Name": "UlFileNumber",
										"Description": "The UL file number indicates where report files can be found at Underwriters Laboratories.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 7,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "UlFileNumber"
										}
									},
									{
										"Name": "UlControlNumber",
										"Description": "Any unit that connects to a source greater than 30 volts rms must be certified by Underwriter's Laboratories (UL) if it will be sold in the United States.\n\nThe UL control number identifies the manufacturer and certification classification.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 4,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "UlControlNumber"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "StorageInstructions",
										"Description": "Statements regarding how the product should be stored.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "StorageInstructions"
										}
									},
									{
										"Name": "ShelfLifeDays",
										"Description": "The amount of time that a product can be stored before it can no longer be safely consumed or sold.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ShelfLifeDays"
										}
									},
									{
										"Name": "ConsumerStorageInstructions",
										"Description": "Statements regarding how the product should be stored by the consumer.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ConsumerStorageInstructions"
										}
									},
									{
										"Name": "ProductShippingInstructions",
										"Description": "Statements regarding how the product should be shipped.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductShippingInstructions"
										}
									},
									{
										"Name": "ConsumerUsageInstructions",
										"Description": "Statements regarding how the product should be used by the consumer.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ConsumerUsageInstructions"
										}
									},
									{
										"Name": "HealthClaimDescription",
										"Description": "A health claim regarding the product as per regulations of the target market.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "HealthClaimDescription"
										}
									},
									{
										"Name": "MarketingMessageDescription",
										"Description": "A market message that is present on the packaging of the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MarketingMessageDescription"
										}
									},
									{
										"Name": "BundledProductIndicator",
										"Description": "Indicates whether a Product is comprised of a bundle of other Products.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "BundledProductIndicator"
										}
									},
									{
										"Name": "InformationLabelText",
										"Description": "The label text that identifies the care, use, preparation and handling or the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "InformationLabelText"
										}
									},
									{
										"Name": "DescriptiveLabelText",
										"Description": "The label text that describes significant characteristics and benefits.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "DescriptiveLabelText"
										}
									},
									{
										"Name": "WarningInformationText",
										"Description": "The text of the warning label, if any, appearing upon the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "WarningInformationText"
										}
									},
									{
										"Name": "GradeLabelText",
										"Description": "The label text that identifies Product quality with letters, number or conditions.\n\nExamples:\n\n-  Grade A\n-  Prime\n-  #1",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "GradeLabelText"
										}
									},
									{
										"Name": "GovernmentWarningLabelText",
										"Description": "The US Government (or foreign government) label text that addressing the US legal requirements of the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "GovernmentWarningLabelText"
										}
									},
									{
										"Name": "DisposalConsiderationsStatement",
										"Description": "Provide descriptions of safe methods of disposal of surplus or waste resulting from foreseeable use. The dangers involved in their disposal should also be considered. \n\nIndicate appropriate methods of disposal, e.g., incineration, recycling, landfill, both for the substance or preparation and for any contaminated packing. \n\nRefer to the provisions related to waste. It is useful to remind the user that national or regional provisions may be in force.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "DisposalConsiderationsStatement"
										}
									},
									{
										"Name": "EnvironmentalHazardsStatement",
										"Description": "A statement of the environmental hazards of the associated AG Chemical product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "EnvironmentalHazardsStatement"
										}
									},
									{
										"Name": "SafetyGuidelinesStatement",
										"Description": "A statement of the safety guidelines associated with the product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "SafetyGuidelinesStatement"
										}
									},
									{
										"Name": "PatentNumber",
										"Description": "The patent that is associated with the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 12,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PatentNumber"
										}
									},
									{
										"Name": "PatentDate",
										"Description": "The date that the Patent was granted.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PatentDate"
										}
									},
									{
										"Name": "PatentExpirationDate",
										"Description": "The date that the patent is scheduled to expire.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PatentExpirationDate"
										}
									},
									{
										"Name": "Trademark",
										"Description": "A 'trademark' is a brand name or brand mark that is given legal protection.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "Trademark"
										}
									},
									{
										"Name": "ProductLogo",
										"Description": "A design, symbol or series of words that identifies the product.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductLogo"
										}
									},
									{
										"Name": "ProductSymbol",
										"Description": "A symbol by which the product is known.",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductSymbol"
										}
									},
									{
										"Name": "CopyrightNumber",
										"Description": "The unique identifier (number) of the copyright granted.\n\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 18,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "CopyrightNumber"
										}
									},
									{
										"Name": "CopyrightDate",
										"Description": "The date that the copyright was granted.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "CopyrightDate"
										}
									},
									{
										"Name": "ProductLicenserName",
										"Description": "The name of the company that receives a flat fee or royalty for selling the rights to use a trademark, Patent, manufacturing right or process for the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductLicenserName"
										}
									},
									{
										"Name": "EligibleForExportIndicator",
										"Description": "Indicates that the product is eligible for export to foreign countries without restriction.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "EligibleForExportIndicator"
										}
									},
									{
										"Name": "ProductExportRestrictionIndicator",
										"Description": "Indicates that exportation of the product is restricted.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductExportRestrictionIndicator"
										}
									},
									{
										"Name": "ProductExportRestrictionStartDate",
										"Description": "The period start date for which the associated restriction is in effect.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductExportRestrictionStartDate"
										}
									},
									{
										"Name": "ProductExportRestrictionEndDate",
										"Description": "The period end date for which the associated restriction is in effect.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductExportRestrictionEndDate"
										}
									},
									{
										"Name": "ProductExportRestrictionDescription",
										"Description": "A description or statement defining the export restriction(s) placed upon the Product.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductExportRestrictionDescription"
										}
									},
									{
										"Name": "BaseProductQuantity",
										"Description": "The number of base product items contained in the product packaging.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "BaseProductQuantity"
										}
									},
									{
										"Name": "ProductLength",
										"Description": "The standard product length.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductLength"
										}
									},
									{
										"Name": "ProductPlanogramLength",
										"Description": "The standard product length.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductPlanogramLength"
										}
									},
									{
										"Name": "ProductLengthUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductLengthUomId"
										}
									},
									{
										"Name": "ProductWidth",
										"Description": "The standard product width.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductWidth"
										}
									},
									{
										"Name": "ProductPlanogramWidth",
										"Description": "The standard product width.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductPlanogramWidth"
										}
									},
									{
										"Name": "ProductWidthUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductWidthUomId"
										}
									},
									{
										"Name": "ProductHeight",
										"Description": "The standard product height.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductHeight"
										}
									},
									{
										"Name": "ProductPlanogramHeight",
										"Description": "The standard product height.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductPlanogramHeight"
										}
									},
									{
										"Name": "ProductHeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductHeightUomId"
										}
									},
									{
										"Name": "ProductVolume",
										"Description": "The standard product volume.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductVolume"
										}
									},
									{
										"Name": "ProductVolumeUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductVolumeUomId"
										}
									},
									{
										"Name": "ProductNetWeight",
										"Description": "The net product weight.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductNetWeight"
										}
									},
									{
										"Name": "ProductNetWeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductNetWeightUomId"
										}
									},
									{
										"Name": "ProductGrossWeight",
										"Description": "The gross product weight.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductGrossWeight"
										}
									},
									{
										"Name": "ProductGrossWeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductGrossWeightUomId"
										}
									},
									{
										"Name": "ProductNetContent",
										"Description": "The standard product length.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductNetContent"
										}
									},
									{
										"Name": "NetContentUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "NetContentUomId"
										}
									},
									{
										"Name": "RecyclableProductIndicator",
										"Description": "Indicates a product that is recyclable when it is to be discarded.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "RecyclableProductIndicator"
										}
									},
									{
										"Name": "MinimumStorageTemperature",
										"Description": "The minimum temperature at which the product may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MinimumStorageTemperature"
										}
									},
									{
										"Name": "MaximumStorageTemperature",
										"Description": "The maximum temperature at which the product may be stored.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MaximumStorageTemperature"
										}
									},
									{
										"Name": "MinimumOperatingTemperature",
										"Description": "The minimum temperature at which the product may be operated.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MinimumOperatingTemperature"
										}
									},
									{
										"Name": "MaximumOperatingTemperature",
										"Description": "The maximum temperature at which the product may be operated.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MaximumOperatingTemperature"
										}
									},
									{
										"Name": "TemperatureUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "TemperatureUomId"
										}
									},
									{
										"Name": "MinimumStorageHumidity",
										"Description": "The minimum humidity that the product may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MinimumStorageHumidity"
										}
									},
									{
										"Name": "MaximumStorageHumidity",
										"Description": "The maximum humidity that the product may be stored at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MaximumStorageHumidity"
										}
									},
									{
										"Name": "MinimumOperatingHumidity",
										"Description": "The minimum humidity that the product may be operated at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MinimumOperatingHumidity"
										}
									},
									{
										"Name": "MaximumOperatingHumidity",
										"Description": "The maximum humidity that the product may be operated at.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "MaximumOperatingHumidity"
										}
									},
									{
										"Name": "HumidityUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "HumidityUomId"
										}
									},
									{
										"Name": "ReturnPolicyStatement",
										"Description": "A statement detailing the product return policy.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ReturnPolicyStatement"
										}
									},
									{
										"Name": "ReturnPolicyPeriodInDays",
										"Description": "The period in days allowed under the associated return policy.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ReturnPolicyPeriodInDays"
										}
									},
									{
										"Name": "ReplacementPolicyStatement",
										"Description": "A statement detailing the product replacement policy.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ReplacementPolicyStatement"
										}
									},
									{
										"Name": "ReplacementPeriodInDays",
										"Description": "The period in days allowed under the associated replacement policy.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ReplacementPeriodInDays"
										}
									},
									{
										"Name": "ExchangePolicyStatement",
										"Description": "A statement detailing the product exchange policy.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ExchangePolicyStatement"
										}
									},
									{
										"Name": "ExchangePolicyPeriodInDays",
										"Description": "The period in days allowed under the associated exchange policy.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ExchangePolicyPeriodInDays"
										}
									},
									{
										"Name": "WarrantyId",
										"Description": "The unique identifier of a Warranty.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "WarrantyId"
										}
									},
									{
										"Name": "ItemSku",
										"Description": "The Stock Keeping Unit identifier, which is typically used for inventory-related activities.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 20,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ItemSku"
										}
									},
									{
										"Name": "PrimaryBrandId",
										"Description": "The unique identifier of a Brand.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PrimaryBrandId"
										}
									},
									{
										"Name": "ProductTypeId",
										"Description": "The unique identifier of a Product Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "ProductTypeId"
										}
									},
									{
										"Name": "PackageTypeId",
										"Description": "The unique identifier of a Package Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PackageTypeId"
										}
									},
									{
										"Name": "PrimaryCountryOfOriginCountryId",
										"Description": "The unique identifier of the Country.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PrimaryCountryOfOriginCountryId"
										}
									},
									{
										"Name": "GeographicAreaOfOriginGeographicAreaId",
										"Description": "The unique identifier of a Geographic Area.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "GeographicAreaOfOriginGeographicAreaId"
										}
									},
									{
										"Name": "PrimaryColorId",
										"Description": "The unique identifier of a color.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ManufacturingProduct.cdm.json/ManufacturingProduct",
											"Name": "PrimaryColorId"
										}
									}
								],
								"ColumnSetEntityName": "dbc38c8f-3107-4e1c-856a-3b60310e872f",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/ManufacturingProduct",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/ManufacturingProduct",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProductId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductId\"},\"ProductName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductName\"},\"ProductShortDescription\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductShortDescription\"},\"ProductDescription\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductDescription\"},\"ProductInternalName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductInternalName\"},\"ProductModelName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductModelName\"},\"ProductBaseName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductBaseName\"},\"ProductCodeName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductCodeName\"},\"ProductGenericName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductGenericName\"},\"ProductVersionNumber\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductVersionNumber\"},\"ProductModelId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductModelId\"},\"ProductIntendedUse\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductIntendedUse\"},\"IntroductionDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"IntroductionDate\"},\"FirstDateManufactured\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"FirstDateManufactured\"},\"PlannedAbandonmentDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PlannedAbandonmentDate\"},\"ActualAbandonmentDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ActualAbandonmentDate\"},\"GlobalTradeItemNumber\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GlobalTradeItemNumber\"},\"GtinName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GtinName\"},\"EuropeanArticleNumber\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"EuropeanArticleNumber\"},\"UniversalProductCode\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"UniversalProductCode\"},\"GpcBrickId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GpcBrickId\"},\"ItemElectronicProductCode\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ItemElectronicProductCode\"},\"ComponentPartIdentifier\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ComponentPartIdentifier\"},\"UlFileNumber\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"UlFileNumber\"},\"UlControlNumber\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"UlControlNumber\"},\"ResponsibilityCenterId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ResponsibilityCenterId\"},\"StorageInstructions\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"StorageInstructions\"},\"ShelfLifeDays\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ShelfLifeDays\"},\"ConsumerStorageInstructions\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ConsumerStorageInstructions\"},\"ProductShippingInstructions\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductShippingInstructions\"},\"ConsumerUsageInstructions\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ConsumerUsageInstructions\"},\"HealthClaimDescription\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"HealthClaimDescription\"},\"MarketingMessageDescription\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MarketingMessageDescription\"},\"BundledProductIndicator\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"BundledProductIndicator\"},\"InformationLabelText\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"InformationLabelText\"},\"DescriptiveLabelText\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"DescriptiveLabelText\"},\"WarningInformationText\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"WarningInformationText\"},\"GradeLabelText\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GradeLabelText\"},\"GovernmentWarningLabelText\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GovernmentWarningLabelText\"},\"DisposalConsiderationsStatement\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"DisposalConsiderationsStatement\"},\"EnvironmentalHazardsStatement\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"EnvironmentalHazardsStatement\"},\"SafetyGuidelinesStatement\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"SafetyGuidelinesStatement\"},\"PatentNumber\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PatentNumber\"},\"PatentDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PatentDate\"},\"PatentExpirationDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PatentExpirationDate\"},\"Trademark\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"Trademark\"},\"ProductLogo\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLogo\"},\"ProductSymbol\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductSymbol\"},\"CopyrightNumber\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"CopyrightNumber\"},\"CopyrightDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"CopyrightDate\"},\"ProductLicenserName\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLicenserName\"},\"EligibleForExportIndicator\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"EligibleForExportIndicator\"},\"ProductExportRestrictionIndicator\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionIndicator\"},\"ProductExportRestrictionStartDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionStartDate\"},\"ProductExportRestrictionEndDate\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionEndDate\"},\"ProductExportRestrictionDescription\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionDescription\"},\"BaseProductQuantity\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"BaseProductQuantity\"},\"ProductLength\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLength\"},\"ProductPlanogramLength\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductPlanogramLength\"},\"ProductLengthUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLengthUomId\"},\"ProductWidth\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductWidth\"},\"ProductPlanogramWidth\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductPlanogramWidth\"},\"ProductWidthUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductWidthUomId\"},\"ProductHeight\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductHeight\"},\"ProductPlanogramHeight\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductPlanogramHeight\"},\"ProductHeightUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductHeightUomId\"},\"ProductVolume\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductVolume\"},\"ProductVolumeUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductVolumeUomId\"},\"ProductNetWeight\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductNetWeight\"},\"ProductNetWeightUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductNetWeightUomId\"},\"ProductGrossWeight\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductGrossWeight\"},\"ProductGrossWeightUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductGrossWeightUomId\"},\"ProductNetContent\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductNetContent\"},\"NetContentUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"NetContentUomId\"},\"RecyclableProductIndicator\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"RecyclableProductIndicator\"},\"MinimumStorageTemperature\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumStorageTemperature\"},\"MaximumStorageTemperature\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumStorageTemperature\"},\"MinimumOperatingTemperature\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumOperatingTemperature\"},\"MaximumOperatingTemperature\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumOperatingTemperature\"},\"TemperatureUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"TemperatureUomId\"},\"MinimumStorageHumidity\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumStorageHumidity\"},\"MaximumStorageHumidity\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumStorageHumidity\"},\"MinimumOperatingHumidity\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumOperatingHumidity\"},\"MaximumOperatingHumidity\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumOperatingHumidity\"},\"HumidityUomId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"HumidityUomId\"},\"ReturnPolicyStatement\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReturnPolicyStatement\"},\"ReturnPolicyPeriodInDays\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReturnPolicyPeriodInDays\"},\"ReplacementPolicyStatement\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReplacementPolicyStatement\"},\"ReplacementPeriodInDays\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReplacementPeriodInDays\"},\"ExchangePolicyStatement\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ExchangePolicyStatement\"},\"ExchangePolicyPeriodInDays\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ExchangePolicyPeriodInDays\"},\"WarrantyId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"WarrantyId\"},\"ItemSku\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ItemSku\"},\"PrimaryBrandId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PrimaryBrandId\"},\"ProductTypeId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductTypeId\"},\"PackageTypeId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PackageTypeId\"},\"PrimaryCountryOfOriginCountryId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PrimaryCountryOfOriginCountryId\"},\"GeographicAreaOfOriginGeographicAreaId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GeographicAreaOfOriginGeographicAreaId\"},\"PrimaryColorId\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PrimaryColorId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ManufacturingProduct\",\"path\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\"},\"description\":\"A product is anything that can be offered to a market that might satisfy a want or need by potential customers.    That product is the sum of all physical, psychological, symbolic, and service attributes associated with it.\\n\\nThere are two basic types of products:\\n\\n- Tangible (physical)\\n- Intangible (non-physical) such as services\\n\\nA service is a non-material or intangible product - such as professional consultancy, maintenance service, repair service etc.\\nEach product has its own benefits, application, brand name, and packaging that gives it its own identity and distinguishing characteristics.\\n\\nEvery business or organization has business rules that define precisely what a product is.    While we intuitively know what a product is, we must quantify that knowledge and associated business rules with consistent definitions that can be implemented within the organization in strategies and applications.\\n\\nA product typically goes through five stages of development:\\n\\n(1) Idea Stage - involving a thorough evaluation of the potential product\\n\\n(2) Concept Stage - determines customer acceptance by testing and presentation to consumers and distribution channel members.   Specific aspects regarding quality, dependability, reliability, warranty, packaging, service, pricing, terms of sale, sales and distribution channels, advertising and promotions are evaluated.\\n\\n(3) Product Development Stage - transforms the prototype product into an actual product for mass sale.   This stage requires close interaction between both marketing and manufacturing.\\n\\n(4) Test Marketing Stage - may or may not be used since it is an expensive and time-consuming process.  Test marketing involves evaluating various product options and alternatives.\\n\\n(5) Commercialization - It is very expensive to launch a new product so commercialization only applies to those specific products that are actually going to be sold to the market.\\n\\nProducts tend to be categorized as either:  Industrial goods and consumer goods\\n\\nIndustrial goods are used to produce other products .\\n\\nIndustrial goods may be further divided into:\\n\\n- Raw materials\\n- Equipment\\n- Pre-built materials \\n- Supplies.\\n\\nConsumer goods are intended for consumption by the general public.\\n\\nConsumer goods may be further divided into:\\n\\n- Durable goods\\n- Nondurable goods\\n- Packaged goods\\n\\nA product may be a member of a product family or product line.\\n\\nA product family is a grouping of products or services that are related to each other by common function, functionality, design platform or similar characteristics.\\n\\nMembers of a product family frequently have many common parts and assemblies.\\n\\nProduct families are the highest level of grouping for forecasting, capacity planning or related functions.\\n\\nEx:\\nThe Apple Macintosh family of products consists of the product lines:\\n- Mac mini\\n- MacBook Pro\\n- Mac Pro\\n\\nA product line is a grouping of products that are closely related in usage, functionality or marketing characteristics.\\n\\nA Product Family typically is created to address one or five functions:\\n\\n1. To increase profits and not erode the sales of existing products\\n\\n2. To attract additional Markets or Market Segments\\n\\n3. To counter competitor's products\\n\\n4. To fill a gap in an existing Product Family.\\n\\n5. To promote sales of other products in the family line\\n\\nLine Depth refers to the number of products in the product line.\\n\\nLine consistency refers to how closely related the products are that make up the product line.\\n\\nLine vulnerability refers to the percentage of sales or profits that are derived from only a few products in the product line.\\n\\nProduct width refers to the number of different product lines sold by a company.\\n\\nProduct mix refers to the total number of products sold in all product lines.\\n\\nLine extension refers to the adding of a new product to a line.\\n\\n\\\"Trading up or brand leveraging\\\" refers to adding a product of better quality to a product line than the other products in that line.\\n\\n\\\"Trading down\\\" refers to adding a product of lesser quality to a product line than the other products in that line.\\n\\nIf a line of products is sold with the same brand name, this is referred to as family branding.\\nStrategy and decisions regarding a product line are usually incorporated in a high-level marketing plan addressing product line strategy, sales, channels, distribution channels, pricing and related issues.\\nA product-line manager is responsible for a product line and supervises several product managers who are responsible for individual products within the line.\\nProduct-line managers typically have the following responsibilities:\\n- Expansion and composition of a product line\\n- Evaluate the effects of product mixes on the profitability of other items in the line\\n- Planning and allocation of resources to individual products in the line\\nA product is normally associated with a brand strategy - manufacturer, private or generic.\\n\\n1. Manufacturer-  or 'national' branding in which the brand is assigned by the manufacturer of the Product.\\n\\n2. Private - or 'dealer' branding in which the brand is assigned by the retailer or wholesaler of the Product.\\n\\n3. Generic - in which the Product is not marked with any identification.   Generic brands are a means for manufacturers to increase profits by saving on advertising, packaging or other costs associated with manufacturer or private branding.\\n\\nA brand is name, term, sign, symbol or design or a combination of these which identify the goods or services and differentiate them from those of competitors'\\n\\nA Trade mark is a brand or some part of the brand that is given legal protection because it is capable of exclusive appropriation and representation.\\n\\nManufacturers can use their own brands (known as Manufacturers' brands) or brands of their distributors (Distributors' brands).\\n\\nManufacturers/ distributors use brand names for a variety of reasons ranging from simple identification purposes to having legal protection for unique features of the products from imitations.\\n\\nBrands help consumers recognize certain quality parameters. In some cases, brands are just used to endow the product with unique story and character which itself can be a basis for product differentiation.\\n\\nIndividual brands have their own identity and the corporate or common name is not used to promote its equity.\\n\\nIndividual branding requires more expensive advertising and brand extensive brand creation investments.  By extension, each new brand does not benefit from the positive perceptions of earlier brands.\\n\\nBy contrast, family branding has several advantages.\\n\\nEach new product is quickly associated with the other products and brand in terms of quality and benefits.\\n\\nReduced or eliminated time for name identification and advertising for name recognition purposes.\",\"primaryKey\":[\"ProductId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Product.\",\"isNullable\":false,\"name\":\"ProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Product, which normally corresponds to the 'marketing name' of the Product.\",\"isNullable\":true,\"name\":\"ProductName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductShortDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The short description of the Product.\",\"isNullable\":true,\"name\":\"ProductShortDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the Product.\",\"isNullable\":true,\"name\":\"ProductDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductInternalName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The internal name by which a Product is known.\\n\\nThis normally approximates the business name by which the public identifies the Product.\",\"isNullable\":true,\"name\":\"ProductInternalName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductModelName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Product Model.\",\"isNullable\":true,\"name\":\"ProductModelName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductBaseName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Product, which normally corresponds to the 'marketing name' of the Product.\",\"isNullable\":true,\"name\":\"ProductBaseName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductCodeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The internal code name by which the Product is known within the company.\",\"isNullable\":true,\"name\":\"ProductCodeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductGenericName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The generic name by which the chemical is known.\",\"isNullable\":true,\"name\":\"ProductGenericName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductVersionNumber\"},\"dataType\":\"integer\",\"description\":\"A version or release number associated with the product (of particular value for software releases).\",\"isNullable\":true,\"name\":\"ProductVersionNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductModelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Model of the Product.\",\"isNullable\":true,\"name\":\"ProductModelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductIntendedUse\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The intended use of the product.\",\"isNullable\":true,\"name\":\"ProductIntendedUse\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"IntroductionDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Product was introduced for sale.\",\"isNullable\":true,\"name\":\"IntroductionDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"FirstDateManufactured\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Product was first manufactured by the Manufacturer.\",\"isNullable\":true,\"name\":\"FirstDateManufactured\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PlannedAbandonmentDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The planned date to discontinue marketing the product.    \\n\\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\\n\\nThere are three (3) strategies for abandoning a product:\\n\\n(1)  Reduced marketing and expenditures to maintain profits.\\n\\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\\n\\n(3)  Maintain the marketing level until the product is discontinued.\",\"isNullable\":true,\"name\":\"PlannedAbandonmentDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ActualAbandonmentDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The actual date that the marketing of the product was discontinued. \\n\\nAbandonment is a component in the decline stage of the product's life cycle characterized by a reduced market demand for the product and an increased number of competing products with similar characteristics.\\n\\nThere are three (3) strategies for abandoning a product:\\n\\n(1)  Reduced marketing and expenditures to maintain profits.\\n\\n(2)  Concentrating on the strongest market segments and eliminating the weaker market segments\\n\\n(3)  Maintain the marketing level until the product is discontinued.\",\"isNullable\":true,\"name\":\"ActualAbandonmentDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GlobalTradeItemNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"The Global Trade Item Number (GTIN) is an identifier for trade items that was developed by GS1.\\n\\nA GTIN can be assigned to only one brick.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalTradeItemNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GtinName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"A note, comment or additional information regarding the Product GTIN.\",\"isNullable\":true,\"name\":\"GtinName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"EuropeanArticleNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"A 13 digit barcoding standard which is a superset of the original 12-digit Universal Product Code (UPC).\\n\\naka International Article Number (abbreviation of EAN retained)\",\"isNullable\":true,\"scale\":0,\"name\":\"EuropeanArticleNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"UniversalProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":12,\"description\":\"A system that identifies products by type and by manufacturer.  \\n\\nA UPC consists of eleven (11) digits.  Six (6) indicate the Manufacturer and five (5) digits describe the product.\\n\\nUPCs appear on product packages as bar codes, which are graphic symbols that are read by optical scanner devices.   \\n\\nUPCs are assigned by the Uniform Code Council of Dayton, Ohio.\",\"isNullable\":true,\"scale\":0,\"name\":\"UniversalProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GpcBrickId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a GPC Brick.\",\"isNullable\":true,\"name\":\"GpcBrickId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ItemElectronicProductCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":14,\"description\":\"EPC is the RFID version of the UPC barcode. \\nEPC is intended to be used for specific product identification. However, EPC goes beyond UPC by not only identifying the product as an SKU, but also providing access to additional data about the origin and history of the specific units. \\nThe EPC tag itself identifies the manufacturer, product, version, and serial number. It's the serial number that takes EPC to the next level. \\nThis is the key to data related to specific lots/batches as well as potentially tracking the specific unit's history as it moves through the supply chain.\",\"isNullable\":true,\"scale\":0,\"name\":\"ItemElectronicProductCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ComponentPartIdentifier\"},\"dataType\":\"string\",\"dataTypeLength\":30,\"description\":\"The Component / Part Identifier (CPID) is used to identify components or parts that are used in the assembly of a larger item. The CPID is part of the GS1 system of standards.\",\"isNullable\":true,\"name\":\"ComponentPartIdentifier\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"UlFileNumber\"},\"dataType\":\"string\",\"dataTypeLength\":7,\"description\":\"The UL file number indicates where report files can be found at Underwriters Laboratories.\",\"isNullable\":true,\"name\":\"UlFileNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"UlControlNumber\"},\"dataType\":\"string\",\"dataTypeLength\":4,\"description\":\"Any unit that connects to a source greater than 30 volts rms must be certified by Underwriter's Laboratories (UL) if it will be sold in the United States.\\n\\nThe UL control number identifies the manufacturer and certification classification.\",\"isNullable\":true,\"name\":\"UlControlNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":false,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"StorageInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be stored.\",\"isNullable\":true,\"name\":\"StorageInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ShelfLifeDays\"},\"dataType\":\"integer\",\"description\":\"The amount of time that a product can be stored before it can no longer be safely consumed or sold.\",\"isNullable\":true,\"name\":\"ShelfLifeDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ConsumerStorageInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be stored by the consumer.\",\"isNullable\":true,\"name\":\"ConsumerStorageInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductShippingInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be shipped.\",\"isNullable\":true,\"name\":\"ProductShippingInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ConsumerUsageInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Statements regarding how the product should be used by the consumer.\",\"isNullable\":true,\"name\":\"ConsumerUsageInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"HealthClaimDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"A health claim regarding the product as per regulations of the target market.\",\"isNullable\":true,\"name\":\"HealthClaimDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MarketingMessageDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"A market message that is present on the packaging of the product.\",\"isNullable\":true,\"name\":\"MarketingMessageDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"BundledProductIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether a Product is comprised of a bundle of other Products.\",\"isNullable\":true,\"name\":\"BundledProductIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"InformationLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies the care, use, preparation and handling or the product.\",\"isNullable\":true,\"name\":\"InformationLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"DescriptiveLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that describes significant characteristics and benefits.\",\"isNullable\":true,\"name\":\"DescriptiveLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"WarningInformationText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The text of the warning label, if any, appearing upon the product.\",\"isNullable\":true,\"name\":\"WarningInformationText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GradeLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The label text that identifies Product quality with letters, number or conditions.\\n\\nExamples:\\n\\n-  Grade A\\n-  Prime\\n-  #1\",\"isNullable\":true,\"name\":\"GradeLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GovernmentWarningLabelText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The US Government (or foreign government) label text that addressing the US legal requirements of the Product.\",\"isNullable\":true,\"name\":\"GovernmentWarningLabelText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"DisposalConsiderationsStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Provide descriptions of safe methods of disposal of surplus or waste resulting from foreseeable use. The dangers involved in their disposal should also be considered. \\n\\nIndicate appropriate methods of disposal, e.g., incineration, recycling, landfill, both for the substance or preparation and for any contaminated packing. \\n\\nRefer to the provisions related to waste. It is useful to remind the user that national or regional provisions may be in force.\",\"isNullable\":true,\"name\":\"DisposalConsiderationsStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"EnvironmentalHazardsStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement of the environmental hazards of the associated AG Chemical product.\",\"isNullable\":true,\"name\":\"EnvironmentalHazardsStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"SafetyGuidelinesStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement of the safety guidelines associated with the product.\",\"isNullable\":true,\"name\":\"SafetyGuidelinesStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PatentNumber\"},\"dataType\":\"string\",\"dataTypeLength\":12,\"description\":\"The patent that is associated with the Product.\",\"isNullable\":true,\"name\":\"PatentNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PatentDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Patent was granted.\",\"isNullable\":true,\"name\":\"PatentDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PatentExpirationDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the patent is scheduled to expire.\",\"isNullable\":true,\"name\":\"PatentExpirationDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"Trademark\"},\"dataType\":\"binary\",\"description\":\"A 'trademark' is a brand name or brand mark that is given legal protection.\",\"isNullable\":true,\"name\":\"Trademark\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLogo\"},\"dataType\":\"binary\",\"description\":\"A design, symbol or series of words that identifies the product.\",\"isNullable\":true,\"name\":\"ProductLogo\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductSymbol\"},\"dataType\":\"binary\",\"description\":\"A symbol by which the product is known.\",\"isNullable\":true,\"name\":\"ProductSymbol\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"CopyrightNumber\"},\"dataType\":\"string\",\"dataTypeLength\":18,\"description\":\"The unique identifier (number) of the copyright granted.\\n\\nA copyright is legal protection given to a work so that it can only be published or sold by the copyright holder.\",\"isNullable\":true,\"name\":\"CopyrightNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"CopyrightDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the copyright was granted.\",\"isNullable\":true,\"name\":\"CopyrightDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLicenserName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the company that receives a flat fee or royalty for selling the rights to use a trademark, Patent, manufacturing right or process for the Product.\",\"isNullable\":true,\"name\":\"ProductLicenserName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"EligibleForExportIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the product is eligible for export to foreign countries without restriction.\",\"isNullable\":true,\"name\":\"EligibleForExportIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that exportation of the product is restricted.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionStartDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The period start date for which the associated restriction is in effect.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionStartDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionEndDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The period end date for which the associated restriction is in effect.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionEndDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductExportRestrictionDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"A description or statement defining the export restriction(s) placed upon the Product.\",\"isNullable\":true,\"name\":\"ProductExportRestrictionDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"BaseProductQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The number of base product items contained in the product packaging.\",\"isNullable\":true,\"scale\":2,\"name\":\"BaseProductQuantity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLength\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product length.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductLength\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductPlanogramLength\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product length.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductPlanogramLength\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductLengthUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductLengthUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductWidth\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product width.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductWidth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductPlanogramWidth\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product width.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductPlanogramWidth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductWidthUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductWidthUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductHeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product height.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductHeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductPlanogramHeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product height.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductPlanogramHeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductHeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductHeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductVolume\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard product volume.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductVolume\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductVolumeUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductVolumeUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductNetWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The net product weight.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductNetWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductNetWeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductNetWeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductGrossWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The gross product weight.\",\"isNullable\":true,\"scale\":8,\"name\":\"ProductGrossWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductGrossWeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ProductGrossWeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductNetContent\"},\"dataType\":\"integer\",\"description\":\"The standard product length.\",\"isNullable\":true,\"name\":\"ProductNetContent\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"NetContentUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"NetContentUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"RecyclableProductIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates a product that is recyclable when it is to be discarded.\",\"isNullable\":true,\"name\":\"RecyclableProductIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum temperature at which the product may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumStorageTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum temperature at which the product may be stored.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumOperatingTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum temperature at which the product may be operated.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumOperatingTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumOperatingTemperature\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum temperature at which the product may be operated.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumOperatingTemperature\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"TemperatureUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"TemperatureUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum humidity that the product may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumStorageHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum humidity that the product may be stored at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumStorageHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MinimumOperatingHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The minimum humidity that the product may be operated at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MinimumOperatingHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"MaximumOperatingHumidity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The maximum humidity that the product may be operated at.\",\"isNullable\":true,\"scale\":8,\"name\":\"MaximumOperatingHumidity\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"HumidityUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"HumidityUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReturnPolicyStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement detailing the product return policy.\",\"isNullable\":true,\"name\":\"ReturnPolicyStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReturnPolicyPeriodInDays\"},\"dataType\":\"integer\",\"description\":\"The period in days allowed under the associated return policy.\",\"isNullable\":true,\"name\":\"ReturnPolicyPeriodInDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReplacementPolicyStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement detailing the product replacement policy.\",\"isNullable\":true,\"name\":\"ReplacementPolicyStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ReplacementPeriodInDays\"},\"dataType\":\"integer\",\"description\":\"The period in days allowed under the associated replacement policy.\",\"isNullable\":true,\"name\":\"ReplacementPeriodInDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ExchangePolicyStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement detailing the product exchange policy.\",\"isNullable\":true,\"name\":\"ExchangePolicyStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ExchangePolicyPeriodInDays\"},\"dataType\":\"integer\",\"description\":\"The period in days allowed under the associated exchange policy.\",\"isNullable\":true,\"name\":\"ExchangePolicyPeriodInDays\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"WarrantyId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Warranty.\",\"isNullable\":true,\"name\":\"WarrantyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ItemSku\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The Stock Keeping Unit identifier, which is typically used for inventory-related activities.\",\"isNullable\":true,\"name\":\"ItemSku\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PrimaryBrandId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Brand.\",\"isNullable\":true,\"name\":\"PrimaryBrandId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"ProductTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Product Type.\",\"isNullable\":true,\"name\":\"ProductTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PackageTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Package Type.\",\"isNullable\":true,\"name\":\"PackageTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PrimaryCountryOfOriginCountryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Country.\",\"isNullable\":true,\"name\":\"PrimaryCountryOfOriginCountryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"GeographicAreaOfOriginGeographicAreaId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Geographic Area.\",\"isNullable\":false,\"name\":\"GeographicAreaOfOriginGeographicAreaId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"name\":\"PrimaryColorId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a color.\",\"isNullable\":true,\"name\":\"PrimaryColorId\"}]}}}",
								"Description": "A product is anything that can be offered to a market that might satisfy a want or need by potential customers.    That product is the sum of all physical, psychological, symbolic, and service attributes associated with it.\n\nThere are two basic types of products:\n\n- Tangible (physical)\n- Intangible (non-physical) such as services\n\nA service is a non-material or intangible product - such as professional consultancy, maintenance service, repair service etc.\nEach product has its own benefits, application, brand name, and packaging that gives it its own identity and distinguishing characteristics.\n\nEvery business or organization has business rules that define precisely what a product is.    While we intuitively know what a product is, we must quantify that knowledge and associated business rules with consistent definitions that can be implemented within the organization in strategies and applications.\n\nA product typically goes through five stages of development:\n\n(1) Idea Stage - involving a thorough evaluation of the potential product\n\n(2) Concept Stage - determines customer acceptance by testing and presentation to consumers and distribution channel members.   Specific aspects regarding quality, dependability, reliability, warranty, packaging, service, pricing, terms of sale, sales and distribution channels, advertising and promotions are evaluated.\n\n(3) Product Development Stage - transforms the prototype product into an actual product for mass sale.   This stage requires close interaction between both marketing and manufacturing.\n\n(4) Test Marketing Stage - may or may not be used since it is an expensive and time-consuming process.  Test marketing involves evaluating various product options and alternatives.\n\n(5) Commercialization - It is very expensive to launch a new product so commercialization only applies to those specific products that are actually going to be sold to the market.\n\nProducts tend to be categorized as either:  Industrial goods and consumer goods\n\nIndustrial goods are used to produce other products .\n\nIndustrial goods may be further divided into:\n\n- Raw materials\n- Equipment\n- Pre-built materials \n- Supplies.\n\nConsumer goods are intended for consumption by the general public.\n\nConsumer goods may be further divided into:\n\n- Durable goods\n- Nondurable goods\n- Packaged goods\n\nA product may be a member of a product family or product line.\n\nA product family is a grouping of products or services that are related to each other by common function, functionality, design platform or similar characteristics.\n\nMembers of a product family frequently have many common parts and assemblies.\n\nProduct families are the highest level of grouping for forecasting, capacity planning or related functions.\n\nEx:\nThe Apple Macintosh family of products consists of the product lines:\n- Mac mini\n- MacBook Pro\n- Mac Pro\n\nA product line is a grouping of products that are closely related in usage, functionality or marketing characteristics.\n\nA Product Family typically is created to address one or five functions:\n\n1. To increase profits and not erode the sales of existing products\n\n2. To attract additional Markets or Market Segments\n\n3. To counter competitor's products\n\n4. To fill a gap in an existing Product Family.\n\n5. To promote sales of other products in the family line\n\nLine Depth refers to the number of products in the product line.\n\nLine consistency refers to how closely related the products are that make up the product line.\n\nLine vulnerability refers to the percentage of sales or profits that are derived from only a few products in the product line.\n\nProduct width refers to the number of different product lines sold by a company.\n\nProduct mix refers to the total number of products sold in all product lines.\n\nLine extension refers to the adding of a new product to a line.\n\n\"Trading up or brand leveraging\" refers to adding a product of better quality to a product line than the other products in that line.\n\n\"Trading down\" refers to adding a product of lesser quality to a product line than the other products in that line.\n\nIf a line of products is sold with the same brand name, this is referred to as family branding.\nStrategy and decisions regarding a product line are usually incorporated in a high-level marketing plan addressing product line strategy, sales, channels, distribution channels, pricing and related issues.\nA product-line manager is responsible for a product line and supervises several product managers who are responsible for individual products within the line.\nProduct-line managers typically have the following responsibilities:\n- Expansion and composition of a product line\n- Evaluate the effects of product mixes on the profitability of other items in the line\n- Planning and allocation of resources to individual products in the line\nA product is normally associated with a brand strategy - manufacturer, private or generic.\n\n1. Manufacturer-  or 'national' branding in which the brand is assigned by the manufacturer of the Product.\n\n2. Private - or 'dealer' branding in which the brand is assigned by the retailer or wholesaler of the Product.\n\n3. Generic - in which the Product is not marked with any identification.   Generic brands are a means for manufacturers to increase profits by saving on advertising, packaging or other costs associated with manufacturer or private branding.\n\nA brand is name, term, sign, symbol or design or a combination of these which identify the goods or services and differentiate them from those of competitors'\n\nA Trade mark is a brand or some part of the brand that is given legal protection because it is capable of exclusive appropriation and representation.\n\nManufacturers can use their own brands (known as Manufacturers' brands) or brands of their distributors (Distributors' brands).\n\nManufacturers/ distributors use brand names for a variety of reasons ranging from simple identification purposes to having legal protection for unique features of the products from imitations.\n\nBrands help consumers recognize certain quality parameters. In some cases, brands are just used to endow the product with unique story and character which itself can be a basis for product differentiation.\n\nIndividual brands have their own identity and the corporate or common name is not used to promote its equity.\n\nIndividual branding requires more expensive advertising and brand extensive brand creation investments.  By extension, each new brand does not benefit from the positive perceptions of earlier brands.\n\nBy contrast, family branding has several advantages.\n\nEach new product is quickly associated with the other products and brand in terms of quality and benefits.\n\nReduced or eliminated time for name identification and advertising for name recognition purposes.",
								"DisplayFolderInfo": "{\"name\":\"Product\",\"colorCode\":\"\"}",
								"PrimaryKeys": "ProductId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "2",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"ProductId\",\"type\":\"long\",\"nullable\":false,\"metadata\":{}},{\"name\":\"ProductName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductShortDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductInternalName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductModelName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductBaseName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductCodeName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductGenericName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductVersionNumber\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductModelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductIntendedUse\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IntroductionDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FirstDateManufactured\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PlannedAbandonmentDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ActualAbandonmentDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GlobalTradeItemNumber\",\"type\":\"decimal(14,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GtinName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EuropeanArticleNumber\",\"type\":\"decimal(13,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UniversalProductCode\",\"type\":\"decimal(12,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GpcBrickId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemElectronicProductCode\",\"type\":\"decimal(14,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ComponentPartIdentifier\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UlFileNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UlControlNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResponsibilityCenterId\",\"type\":\"integer\",\"nullable\":false,\"metadata\":{}},{\"name\":\"StorageInstructions\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShelfLifeDays\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ConsumerStorageInstructions\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductShippingInstructions\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ConsumerUsageInstructions\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"HealthClaimDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MarketingMessageDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BundledProductIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"InformationLabelText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DescriptiveLabelText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarningInformationText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GradeLabelText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GovernmentWarningLabelText\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DisposalConsiderationsStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EnvironmentalHazardsStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SafetyGuidelinesStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PatentNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PatentDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PatentExpirationDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"Trademark\",\"type\":\"binary\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductLogo\",\"type\":\"binary\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductSymbol\",\"type\":\"binary\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CopyrightNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CopyrightDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductLicenserName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EligibleForExportIndicator\",\"type\":\"boole",
								"spark.sql.sources.schema.part.1": "an\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductExportRestrictionIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductExportRestrictionStartDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductExportRestrictionEndDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductExportRestrictionDescription\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BaseProductQuantity\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductLength\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductPlanogramLength\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductLengthUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductWidth\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductPlanogramWidth\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductWidthUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductHeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductPlanogramHeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductHeightUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductVolume\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductVolumeUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductNetWeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductNetWeightUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductGrossWeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductGrossWeightUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductNetContent\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"NetContentUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RecyclableProductIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumStorageTemperature\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumStorageTemperature\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumOperatingTemperature\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumOperatingTemperature\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TemperatureUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumStorageHumidity\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumStorageHumidity\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MinimumOperatingHumidity\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MaximumOperatingHumidity\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"HumidityUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ReturnPolicyStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ReturnPolicyPeriodInDays\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ReplacementPolicyStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ReplacementPeriodInDays\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ExchangePolicyStatement\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ExchangePolicyPeriodInDays\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarrantyId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ItemSku\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PrimaryBrandId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ProductTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PackageTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PrimaryCountryOfOriginCountryId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GeographicAreaOfOriginGeographicAreaId\",\"type\":\"integer\",\"nullable\":false,\"metadata\":{}},{\"name\":\"PrimaryColorId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "47710f4b-0b07-458b-b0e4-c2ac2bf8be1d",
							"Description": "A product is anything that can be offered to a market that might satisfy a want or need by potential customers.    That product is the sum of all physical, psychological, symbolic, and service attributes associated with it.\n\nThere are two basic types of products:\n\n- Tangible (physical)\n- Intangible (non-physical) such as services\n\nA service is a non-material or intangible product - such as professional consultancy, maintenance service, repair service etc.\nEach product has its own benefits, application, brand name, and packaging that gives it its own identity and distinguishing characteristics.\n\nEvery business or organization has business rules that define precisely what a product is.    While we intuitively know what a product is, we must quantify that knowledge and associated business rules with consistent definitions that can be implemented within the organization in strategies and applications.\n\nA product typically goes through five stages of development:\n\n(1) Idea Stage - involving a thorough evaluation of the potential product\n\n(2) Concept Stage - determines customer acceptance by testing and presentation to consumers and distribution channel members.   Specific aspects regarding quality, dependability, reliability, warranty, packaging, service, pricing, terms of sale, sales and distribution channels, advertising and promotions are evaluated.\n\n(3) Product Development Stage - transforms the prototype product into an actual product for mass sale.   This stage requires close interaction between both marketing and manufacturing.\n\n(4) Test Marketing Stage - may or may not be used since it is an expensive and time-consuming process.  Test marketing involves evaluating various product options and alternatives.\n\n(5) Commercialization - It is very expensive to launch a new product so commercialization only applies to those specific products that are actually going to be sold to the market.\n\nProducts tend to be categorized as either:  Industrial goods and consumer goods\n\nIndustrial goods are used to produce other products .\n\nIndustrial goods may be further divided into:\n\n- Raw materials\n- Equipment\n- Pre-built materials \n- Supplies.\n\nConsumer goods are intended for consumption by the general public.\n\nConsumer goods may be further divided into:\n\n- Durable goods\n- Nondurable goods\n- Packaged goods\n\nA product may be a member of a product family or product line.\n\nA product family is a grouping of products or services that are related to each other by common function, functionality, design platform or similar characteristics.\n\nMembers of a product family frequently have many common parts and assemblies.\n\nProduct families are the highest level of grouping for forecasting, capacity planning or related functions.\n\nEx:\nThe Apple Macintosh family of products consists of the product lines:\n- Mac mini\n- MacBook Pro\n- Mac Pro\n\nA product line is a grouping of products that are closely related in usage, functionality or marketing characteristics.\n\nA Product Family typically is created to address one or five functions:\n\n1. To increase profits and not erode the sales of existing products\n\n2. To attract additional Markets or Market Segments\n\n3. To counter competitor's products\n\n4. To fill a gap in an existing Product Family.\n\n5. To promote sales of other products in the family line\n\nLine Depth refers to the number of products in the product line.\n\nLine consistency refers to how closely related the products are that make up the product line.\n\nLine vulnerability refers to the percentage of sales or profits that are derived from only a few products in the product line.\n\nProduct width refers to the number of different product lines sold by a company.\n\nProduct mix refers to the total number of products sold in all product lines.\n\nLine extension refers to the adding of a new product to a line.\n\n\"Trading up or brand leveraging\" refers to adding a product of better quality to a product line than the other products in that line.\n\n\"Trading down\" refers to adding a product of lesser quality to a product line than the other products in that line.\n\nIf a line of products is sold with the same brand name, this is referred to as family branding.\nStrategy and decisions regarding a product line are usually incorporated in a high-level marketing plan addressing product line strategy, sales, channels, distribution channels, pricing and related issues.\nA product-line manager is responsible for a product line and supervises several product managers who are responsible for individual products within the line.\nProduct-line managers typically have the following responsibilities:\n- Expansion and composition of a product line\n- Evaluate the effects of product mixes on the profitability of other items in the line\n- Planning and allocation of resources to individual products in the line\nA product is normally associated with a brand strategy - manufacturer, private or generic.\n\n1. Manufacturer-  or 'national' branding in which the brand is assigned by the manufacturer of the Product.\n\n2. Private - or 'dealer' branding in which the brand is assigned by the retailer or wholesaler of the Product.\n\n3. Generic - in which the Product is not marked with any identification.   Generic brands are a means for manufacturers to increase profits by saving on advertising, packaging or other costs associated with manufacturer or private branding.\n\nA brand is name, term, sign, symbol or design or a combination of these which identify the goods or services and differentiate them from those of competitors'\n\nA Trade mark is a brand or some part of the brand that is given legal protection because it is capable of exclusive appropriation and representation.\n\nManufacturers can use their own brands (known as Manufacturers' brands) or brands of their distributors (Distributors' brands).\n\nManufacturers/ distributors use brand names for a variety of reasons ranging from simple identification purposes to having legal protection for unique features of the products from imitations.\n\nBrands help consumers recognize certain quality parameters. In some cases, brands are just used to endow the product with unique story and character which itself can be a basis for product differentiation.\n\nIndividual brands have their own identity and the corporate or common name is not used to promote its equity.\n\nIndividual branding requires more expensive advertising and brand extensive brand creation investments.  By extension, each new brand does not benefit from the positive perceptions of earlier brands.\n\nBy contrast, family branding has several advantages.\n\nEach new product is quickly associated with the other products and brand in terms of quality and benefits.\n\nReduced or eliminated time for name identification and advertising for name recognition purposes."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Order",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "OrderId",
										"Description": "The unique number that identifies an Order.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderId"
										}
									},
									{
										"Name": "OrderConfirmationNumber",
										"Description": "The order confirmation number provided to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderConfirmationNumber"
										}
									},
									{
										"Name": "OrderEnteredByEmployeeId",
										"Description": "The employee ID of the employee entering the Order into the order entry system.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderEnteredByEmployeeId"
										}
									},
									{
										"Name": "NumberOfOrderLines",
										"Description": "The number of Order Line Items associated with the Order.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "NumberOfOrderLines"
										}
									},
									{
										"Name": "OrderReceivedTimestamp",
										"Description": "The timestamp that the Order was received from the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderReceivedTimestamp"
										}
									},
									{
										"Name": "OrderEntryTimestamp",
										"Description": "The date that the Order was entered into the order entry system.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderEntryTimestamp"
										}
									},
									{
										"Name": "CustomerCreditCheckTimestamp",
										"Description": "The timestamp that the Customer/Customer Account had a credit check in regard to the Order amount.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "CustomerCreditCheckTimestamp"
										}
									},
									{
										"Name": "OrderConfirmationTimestamp",
										"Description": "The timestamp that the Order was confirmed to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderConfirmationTimestamp"
										}
									},
									{
										"Name": "OrderRequestedDeliveryDate",
										"Description": "The date that the Customer/Customer Account requested delivery of the Order.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderRequestedDeliveryDate"
										}
									},
									{
										"Name": "OrderCommittedDeliveryDate",
										"Description": "The date committed to the Customer/Customer Account for delivery of the Order.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderCommittedDeliveryDate"
										}
									},
									{
										"Name": "ShipmentConfirmationTimestamp",
										"Description": "The timestamp that confirmation of the Shipment was made to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ShipmentConfirmationTimestamp"
										}
									},
									{
										"Name": "OrderActualDeliveryTimestamp",
										"Description": "The actual timestamp of delivery of the Order to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderActualDeliveryTimestamp"
										}
									},
									{
										"Name": "OrderTotalRetailPriceAmount",
										"Description": "The total list price value of the ordered products = (list price per unit product price)x(quantity ordered) for each line item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTotalRetailPriceAmount"
										}
									},
									{
										"Name": "OrderTotalActualSalesPriceAmount",
										"Description": "The total actual price value of the ordered products = (actual selling price per unit product price)x(quantity ordered) for each line item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTotalActualSalesPriceAmount"
										}
									},
									{
										"Name": "OrderTotalAdjustmentPercentage",
										"Description": "The total percentage of adjustment applied to the Order.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTotalAdjustmentPercentage"
										}
									},
									{
										"Name": "OrderTotalAdjustmentAmount",
										"Description": "The total amount of adjustment applied to the Order.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTotalAdjustmentAmount"
										}
									},
									{
										"Name": "OrderTotalAmount",
										"Description": "The total value of the Order including Adjustment(s).",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTotalAmount"
										}
									},
									{
										"Name": "TotalShippingChargeAmount",
										"Description": "The total amount of shipping charge associated with the order.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "TotalShippingChargeAmount"
										}
									},
									{
										"Name": "OrderTotalTaxAmount",
										"Description": "The total amount of all taxes applied to the Order.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTotalTaxAmount"
										}
									},
									{
										"Name": "OrderTotalInvoicedAmount",
										"Description": "The total invoiced amount to the Customer/Customer Account = (per units selling price of products)x(quantity purchased) for all line items + all discounts + all rebates + adjustments/credits + taxes",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTotalInvoicedAmount"
										}
									},
									{
										"Name": "TotalGratuityAmount",
										"Description": "The total amount of gratuity paid.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "TotalGratuityAmount"
										}
									},
									{
										"Name": "TotalPaidAmount",
										"Description": "The total amount including gratuity.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "TotalPaidAmount"
										}
									},
									{
										"Name": "TotalCommissionsPayableAmount",
										"Description": "The total amount of commissions payable and due in regard to the Order.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "TotalCommissionsPayableAmount"
										}
									},
									{
										"Name": "SplitCommissionsIndicator",
										"Description": "Indicates that the commissions are to be split between two or more employees.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "SplitCommissionsIndicator"
										}
									},
									{
										"Name": "OrderBookedDate",
										"Description": "The date signifying that the order has all the needed information to be considered a firm order and to be processed.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderBookedDate"
										}
									},
									{
										"Name": "OrderBilledDate",
										"Description": "The date that the Order was billed.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderBilledDate"
										}
									},
									{
										"Name": "OrderBacklogReportedDate",
										"Description": "The date that the Order backlog was reported.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderBacklogReportedDate"
										}
									},
									{
										"Name": "OrderBacklogReleasedDate",
										"Description": "The date that the Order backlog was released/fulfilled.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderBacklogReleasedDate"
										}
									},
									{
										"Name": "OrderCancellationDate",
										"Description": "The date that the Order was cancelled.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderCancellationDate"
										}
									},
									{
										"Name": "OrderReturnedDate",
										"Description": "The date that the Order was returned.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderReturnedDate"
										}
									},
									{
										"Name": "ShipmentToName",
										"Description": "The name of the ship-to party.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ShipmentToName"
										}
									},
									{
										"Name": "ShipmentToLocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ShipmentToLocationId"
										}
									},
									{
										"Name": "ShipmentId",
										"Description": "The unique identifier of a Shipment.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ShipmentId"
										}
									},
									{
										"Name": "CarrierId",
										"Description": "The unique identifier of a Carrier.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "CarrierId"
										}
									},
									{
										"Name": "ShipmentMethodId",
										"Description": "The unique identifier of a Shipment Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ShipmentMethodId"
										}
									},
									{
										"Name": "RequestedShipmentCarrierName",
										"Description": "The name of the Carrier for the Shipment requested by the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "RequestedShipmentCarrierName"
										}
									},
									{
										"Name": "AlternateCarrierAcceptableIndicator",
										"Description": "Indicates that an alternate Carrier of the Shipment would be acceptable to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "AlternateCarrierAcceptableIndicator"
										}
									},
									{
										"Name": "ActualShipmentCarrierName",
										"Description": "The Carrier of the Shipment.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ActualShipmentCarrierName"
										}
									},
									{
										"Name": "ShipOrderCompleteIndicator",
										"Description": "Indicates that the Order is only to be shipped when complete - no partial shipments.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ShipOrderCompleteIndicator"
										}
									},
									{
										"Name": "TotalOrderWeight",
										"Description": "The total weight of the Order.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "TotalOrderWeight"
										}
									},
									{
										"Name": "WeightUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "WeightUomId"
										}
									},
									{
										"Name": "TotalOrderFreightChargeAmount",
										"Description": "The total order freight charges amount.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "TotalOrderFreightChargeAmount"
										}
									},
									{
										"Name": "EarliestDeliveryWindowTimestamp",
										"Description": "The earliest timestamp that the order should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "EarliestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "LatestDeliveryWindowTimestamp",
										"Description": "The latest timestamp that the order should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "LatestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "AcknowledgementRequiredIndicator",
										"Description": "Indicates that an acknowledgement  to the Customer/Customer Account is required for the Order.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "AcknowledgementRequiredIndicator"
										}
									},
									{
										"Name": "ExpediteOrderIndicator",
										"Description": "Indicates that the Order is to be expedited.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ExpediteOrderIndicator"
										}
									},
									{
										"Name": "DropShipmentIndicator",
										"Description": "Indicates that the Order is to be drop shipped.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "DropShipmentIndicator"
										}
									},
									{
										"Name": "ServiceOrderIndicator",
										"Description": "Indicates that the Order is for Service Products.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ServiceOrderIndicator"
										}
									},
									{
										"Name": "ProductOrderIndicator",
										"Description": "Indicates that the Order is for Products.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ProductOrderIndicator"
										}
									},
									{
										"Name": "OrderDeliveryInstructions",
										"Description": "Instructions related to the delivery of the Order.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderDeliveryInstructions"
										}
									},
									{
										"Name": "CustomerCreditCheckNote",
										"Description": "A note, comment or additional information regarding the Order credit check.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "CustomerCreditCheckNote"
										}
									},
									{
										"Name": "MessageToCustomer",
										"Description": "A message to the Customer/Customer Account regarding the Order.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "MessageToCustomer"
										}
									},
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "CustomerId"
										}
									},
									{
										"Name": "CustomerAccountId",
										"Description": "The unique identifier of a Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "CustomerAccountId"
										}
									},
									{
										"Name": "WarehouseId",
										"Description": "The unique identifier of a Warehouse.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "WarehouseId"
										}
									},
									{
										"Name": "StoreId",
										"Description": "The unique identifier of a Store.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "StoreId"
										}
									},
									{
										"Name": "CustomerIdentificationMethodId",
										"Description": "The unique identifier of a customer identification method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "CustomerIdentificationMethodId"
										}
									},
									{
										"Name": "PoNumber",
										"Description": "The unique identifier of a Purchase Order.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 18,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "PoNumber"
										}
									},
									{
										"Name": "MarketingEventId",
										"Description": "The unique identifier of a Marketing Event.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "MarketingEventId"
										}
									},
									{
										"Name": "AdvertisingEventId",
										"Description": "The unique identifier of an Advertising Event.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "AdvertisingEventId"
										}
									},
									{
										"Name": "SalesMethodId",
										"Description": "The unique identifier of a Sales Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "SalesMethodId"
										}
									},
									{
										"Name": "PaymentMethodId",
										"Description": "The unique identifier of a Payment Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "PaymentMethodId"
										}
									},
									{
										"Name": "BillingCycleId",
										"Description": "The unique identifier of a Billing Cycle.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "BillingCycleId"
										}
									},
									{
										"Name": "ContractId",
										"Description": "The unique identifier of a Contract.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ContractId"
										}
									},
									{
										"Name": "SalesChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "SalesChannelId"
										}
									},
									{
										"Name": "DistributionChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "DistributionChannelId"
										}
									},
									{
										"Name": "OrderTypeId",
										"Description": "The unique identifier of an Order Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderTypeId"
										}
									},
									{
										"Name": "OrderClassificationId",
										"Description": "The unique identifier of an Order Classification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderClassificationId"
										}
									},
									{
										"Name": "RejectionReasonId",
										"Description": "The unique identifier of a Rejection Reason.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "RejectionReasonId"
										}
									},
									{
										"Name": "OrderProcessingStatusId",
										"Description": "The unique identifier of an Order Processing Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "OrderProcessingStatusId"
										}
									},
									{
										"Name": "IsoCurrencyCode",
										"Description": "The ISO 4217 currency code.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 3,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "IsoCurrencyCode"
										}
									},
									{
										"Name": "PointOfSaleId",
										"Description": "The unique identifier of a Point-Of-Sale.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "PointOfSaleId"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "VendorId",
										"Description": "The unique identifier of a Vendor.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "VendorId"
										}
									},
									{
										"Name": "DeviceId",
										"Description": "The unique identifier of a Device.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "DeviceId"
										}
									},
									{
										"Name": "SoftwareProductId",
										"Description": "The unique identifier of a software product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "SoftwareProductId"
										}
									},
									{
										"Name": "SoftwareProductVersionNumber",
										"Description": "The version number of the software product.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "SoftwareProductVersionNumber"
										}
									},
									{
										"Name": "PromotionOfferId",
										"Description": "The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Order.cdm.json/Order",
											"Name": "PromotionOfferId"
										}
									}
								],
								"ColumnSetEntityName": "c0dbf849-ed47-44b9-8d42-ba7ca48a5254",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Order",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Order",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"OrderId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderId\"},\"OrderConfirmationNumber\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderConfirmationNumber\"},\"OrderEnteredByEmployeeId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderEnteredByEmployeeId\"},\"NumberOfOrderLines\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"NumberOfOrderLines\"},\"OrderReceivedTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderReceivedTimestamp\"},\"OrderEntryTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderEntryTimestamp\"},\"CustomerCreditCheckTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerCreditCheckTimestamp\"},\"OrderConfirmationTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderConfirmationTimestamp\"},\"OrderRequestedDeliveryDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderRequestedDeliveryDate\"},\"OrderCommittedDeliveryDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderCommittedDeliveryDate\"},\"ShipmentConfirmationTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentConfirmationTimestamp\"},\"OrderActualDeliveryTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderActualDeliveryTimestamp\"},\"OrderTotalRetailPriceAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalRetailPriceAmount\"},\"OrderTotalActualSalesPriceAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalActualSalesPriceAmount\"},\"OrderTotalAdjustmentPercentage\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalAdjustmentPercentage\"},\"OrderTotalAdjustmentAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalAdjustmentAmount\"},\"OrderTotalAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalAmount\"},\"TotalShippingChargeAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalShippingChargeAmount\"},\"OrderTotalTaxAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalTaxAmount\"},\"OrderTotalInvoicedAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalInvoicedAmount\"},\"TotalGratuityAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalGratuityAmount\"},\"TotalPaidAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalPaidAmount\"},\"TotalCommissionsPayableAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalCommissionsPayableAmount\"},\"SplitCommissionsIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SplitCommissionsIndicator\"},\"OrderBookedDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBookedDate\"},\"OrderBilledDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBilledDate\"},\"OrderBacklogReportedDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBacklogReportedDate\"},\"OrderBacklogReleasedDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBacklogReleasedDate\"},\"OrderCancellationDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderCancellationDate\"},\"OrderReturnedDate\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderReturnedDate\"},\"ShipmentToName\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentToName\"},\"ShipmentToLocationId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentToLocationId\"},\"ShipmentId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentId\"},\"CarrierId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CarrierId\"},\"ShipmentMethodId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentMethodId\"},\"RequestedShipmentCarrierName\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"RequestedShipmentCarrierName\"},\"AlternateCarrierAcceptableIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"AlternateCarrierAcceptableIndicator\"},\"ActualShipmentCarrierName\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ActualShipmentCarrierName\"},\"ShipOrderCompleteIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipOrderCompleteIndicator\"},\"TotalOrderWeight\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalOrderWeight\"},\"WeightUomId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"WeightUomId\"},\"TotalOrderFreightChargeAmount\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalOrderFreightChargeAmount\"},\"EarliestDeliveryWindowTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"LatestDeliveryWindowTimestamp\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"AcknowledgementRequiredIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"AcknowledgementRequiredIndicator\"},\"ExpediteOrderIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ExpediteOrderIndicator\"},\"DropShipmentIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"DropShipmentIndicator\"},\"ServiceOrderIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ServiceOrderIndicator\"},\"ProductOrderIndicator\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ProductOrderIndicator\"},\"OrderDeliveryInstructions\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderDeliveryInstructions\"},\"CustomerCreditCheckNote\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerCreditCheckNote\"},\"MessageToCustomer\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"MessageToCustomer\"},\"CustomerId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerId\"},\"CustomerAccountId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerAccountId\"},\"WarehouseId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"WarehouseId\"},\"StoreId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"StoreId\"},\"CustomerIdentificationMethodId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerIdentificationMethodId\"},\"PoNumber\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PoNumber\"},\"MarketingEventId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"MarketingEventId\"},\"AdvertisingEventId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"AdvertisingEventId\"},\"SalesMethodId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SalesMethodId\"},\"PaymentMethodId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PaymentMethodId\"},\"BillingCycleId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"BillingCycleId\"},\"ContractId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ContractId\"},\"SalesChannelId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SalesChannelId\"},\"DistributionChannelId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"DistributionChannelId\"},\"OrderTypeId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTypeId\"},\"OrderClassificationId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderClassificationId\"},\"RejectionReasonId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"RejectionReasonId\"},\"OrderProcessingStatusId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderProcessingStatusId\"},\"IsoCurrencyCode\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"IsoCurrencyCode\"},\"PointOfSaleId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PointOfSaleId\"},\"ResponsibilityCenterId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ResponsibilityCenterId\"},\"VendorId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"VendorId\"},\"DeviceId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"DeviceId\"},\"SoftwareProductId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SoftwareProductId\"},\"SoftwareProductVersionNumber\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SoftwareProductVersionNumber\"},\"PromotionOfferId\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PromotionOfferId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Order\",\"path\":\"Order.cdm.json/Order\"},\"description\":\"A document or commission by the customer to order products.\",\"primaryKey\":[\"OrderId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderId\"},\"dataType\":\"long\",\"description\":\"The unique number that identifies an Order.\",\"isNullable\":false,\"name\":\"OrderId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderConfirmationNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The order confirmation number provided to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"OrderConfirmationNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderEnteredByEmployeeId\"},\"dataType\":\"integer\",\"description\":\"The employee ID of the employee entering the Order into the order entry system.\",\"isNullable\":true,\"name\":\"OrderEnteredByEmployeeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"NumberOfOrderLines\"},\"dataType\":\"integer\",\"description\":\"The number of Order Line Items associated with the Order.\",\"isNullable\":true,\"name\":\"NumberOfOrderLines\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderReceivedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Order was received from the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"OrderReceivedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderEntryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The date that the Order was entered into the order entry system.\",\"isNullable\":true,\"name\":\"OrderEntryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerCreditCheckTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Customer/Customer Account had a credit check in regard to the Order amount.\",\"isNullable\":true,\"name\":\"CustomerCreditCheckTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderConfirmationTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Order was confirmed to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"OrderConfirmationTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderRequestedDeliveryDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Customer/Customer Account requested delivery of the Order.\",\"isNullable\":true,\"name\":\"OrderRequestedDeliveryDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderCommittedDeliveryDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date committed to the Customer/Customer Account for delivery of the Order.\",\"isNullable\":true,\"name\":\"OrderCommittedDeliveryDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentConfirmationTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that confirmation of the Shipment was made to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"ShipmentConfirmationTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderActualDeliveryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual timestamp of delivery of the Order to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"OrderActualDeliveryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalRetailPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total list price value of the ordered products = (list price per unit product price)x(quantity ordered) for each line item.\",\"isNullable\":true,\"scale\":2,\"name\":\"OrderTotalRetailPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalActualSalesPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total actual price value of the ordered products = (actual selling price per unit product price)x(quantity ordered) for each line item.\",\"isNullable\":true,\"scale\":2,\"name\":\"OrderTotalActualSalesPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalAdjustmentPercentage\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total percentage of adjustment applied to the Order.\",\"isNullable\":true,\"scale\":8,\"name\":\"OrderTotalAdjustmentPercentage\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalAdjustmentAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of adjustment applied to the Order.\",\"isNullable\":true,\"scale\":2,\"name\":\"OrderTotalAdjustmentAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total value of the Order including Adjustment(s).\",\"isNullable\":true,\"scale\":2,\"name\":\"OrderTotalAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalShippingChargeAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of shipping charge associated with the order.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalShippingChargeAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalTaxAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of all taxes applied to the Order.\",\"isNullable\":true,\"scale\":2,\"name\":\"OrderTotalTaxAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTotalInvoicedAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total invoiced amount to the Customer/Customer Account = (per units selling price of products)x(quantity purchased) for all line items + all discounts + all rebates + adjustments/credits + taxes\",\"isNullable\":true,\"scale\":2,\"name\":\"OrderTotalInvoicedAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalGratuityAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of gratuity paid.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalGratuityAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalPaidAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount including gratuity.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalPaidAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalCommissionsPayableAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of commissions payable and due in regard to the Order.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalCommissionsPayableAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SplitCommissionsIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the commissions are to be split between two or more employees.\",\"isNullable\":true,\"name\":\"SplitCommissionsIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBookedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date signifying that the order has all the needed information to be considered a firm order and to be processed.\",\"isNullable\":true,\"name\":\"OrderBookedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBilledDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Order was billed.\",\"isNullable\":true,\"name\":\"OrderBilledDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBacklogReportedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Order backlog was reported.\",\"isNullable\":true,\"name\":\"OrderBacklogReportedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderBacklogReleasedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Order backlog was released/fulfilled.\",\"isNullable\":true,\"name\":\"OrderBacklogReleasedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderCancellationDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Order was cancelled.\",\"isNullable\":true,\"name\":\"OrderCancellationDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderReturnedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Order was returned.\",\"isNullable\":true,\"name\":\"OrderReturnedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentToName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the ship-to party.\",\"isNullable\":true,\"name\":\"ShipmentToName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentToLocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"ShipmentToLocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Shipment.\",\"isNullable\":true,\"name\":\"ShipmentId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CarrierId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Carrier.\",\"isNullable\":true,\"name\":\"CarrierId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipmentMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Shipment Method.\",\"isNullable\":true,\"name\":\"ShipmentMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"RequestedShipmentCarrierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Carrier for the Shipment requested by the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"RequestedShipmentCarrierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"AlternateCarrierAcceptableIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that an alternate Carrier of the Shipment would be acceptable to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"AlternateCarrierAcceptableIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ActualShipmentCarrierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The Carrier of the Shipment.\",\"isNullable\":true,\"name\":\"ActualShipmentCarrierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ShipOrderCompleteIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Order is only to be shipped when complete - no partial shipments.\",\"isNullable\":true,\"name\":\"ShipOrderCompleteIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalOrderWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total weight of the Order.\",\"isNullable\":true,\"scale\":8,\"name\":\"TotalOrderWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"WeightUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"WeightUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"TotalOrderFreightChargeAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total order freight charges amount.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalOrderFreightChargeAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest timestamp that the order should be made available for delivery.\",\"isNullable\":true,\"name\":\"EarliestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest timestamp that the order should be made available for delivery.\",\"isNullable\":true,\"name\":\"LatestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"AcknowledgementRequiredIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that an acknowledgement  to the Customer/Customer Account is required for the Order.\",\"isNullable\":true,\"name\":\"AcknowledgementRequiredIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ExpediteOrderIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Order is to be expedited.\",\"isNullable\":true,\"name\":\"ExpediteOrderIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"DropShipmentIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Order is to be drop shipped.\",\"isNullable\":true,\"name\":\"DropShipmentIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ServiceOrderIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Order is for Service Products.\",\"isNullable\":true,\"name\":\"ServiceOrderIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ProductOrderIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Order is for Products.\",\"isNullable\":true,\"name\":\"ProductOrderIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderDeliveryInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Instructions related to the delivery of the Order.\",\"isNullable\":true,\"name\":\"OrderDeliveryInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerCreditCheckNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Order credit check.\",\"isNullable\":true,\"name\":\"CustomerCreditCheckNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"MessageToCustomer\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A message to the Customer/Customer Account regarding the Order.\",\"isNullable\":true,\"name\":\"MessageToCustomer\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":true,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerAccountId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer Account.\",\"isNullable\":true,\"name\":\"CustomerAccountId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"WarehouseId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Warehouse.\",\"isNullable\":true,\"name\":\"WarehouseId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"StoreId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Store.\",\"isNullable\":true,\"name\":\"StoreId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"CustomerIdentificationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a customer identification method.\",\"isNullable\":true,\"name\":\"CustomerIdentificationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PoNumber\"},\"dataType\":\"string\",\"dataTypeLength\":18,\"description\":\"The unique identifier of a Purchase Order.\",\"isNullable\":true,\"name\":\"PoNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"MarketingEventId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Marketing Event.\",\"isNullable\":true,\"name\":\"MarketingEventId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"AdvertisingEventId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Advertising Event.\",\"isNullable\":true,\"name\":\"AdvertisingEventId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SalesMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Sales Method.\",\"isNullable\":true,\"name\":\"SalesMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PaymentMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Payment Method.\",\"isNullable\":true,\"name\":\"PaymentMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"BillingCycleId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Billing Cycle.\",\"isNullable\":true,\"name\":\"BillingCycleId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ContractId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Contract.\",\"isNullable\":true,\"name\":\"ContractId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SalesChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"SalesChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"DistributionChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"DistributionChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Order Type.\",\"isNullable\":true,\"name\":\"OrderTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderClassificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Order Classification.\",\"isNullable\":true,\"name\":\"OrderClassificationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"RejectionReasonId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Rejection Reason.\",\"isNullable\":true,\"name\":\"RejectionReasonId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"OrderProcessingStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Order Processing Status.\",\"isNullable\":true,\"name\":\"OrderProcessingStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"IsoCurrencyCode\"},\"dataType\":\"string\",\"dataTypeLength\":3,\"description\":\"The ISO 4217 currency code.\",\"isNullable\":true,\"name\":\"IsoCurrencyCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PointOfSaleId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Point-Of-Sale.\",\"isNullable\":true,\"name\":\"PointOfSaleId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"VendorId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Vendor.\",\"isNullable\":true,\"name\":\"VendorId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"DeviceId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Device.\",\"isNullable\":true,\"name\":\"DeviceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SoftwareProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a software product.\",\"isNullable\":true,\"name\":\"SoftwareProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"SoftwareProductVersionNumber\"},\"dataType\":\"integer\",\"description\":\"The version number of the software product.\",\"isNullable\":true,\"name\":\"SoftwareProductVersionNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Order.cdm.json/Order\",\"name\":\"PromotionOfferId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.\",\"isNullable\":true,\"name\":\"PromotionOfferId\"}]}}}",
								"Description": "A document or commission by the customer to order products.",
								"DisplayFolderInfo": "{\"name\":\"Order\",\"colorCode\":\"\"}",
								"PrimaryKeys": "OrderId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "2",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"OrderId\",\"type\":\"long\",\"nullable\":false,\"metadata\":{}},{\"name\":\"OrderConfirmationNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderEnteredByEmployeeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"NumberOfOrderLines\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderReceivedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderEntryTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerCreditCheckTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderConfirmationTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderRequestedDeliveryDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderCommittedDeliveryDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentConfirmationTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderActualDeliveryTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTotalRetailPriceAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTotalActualSalesPriceAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTotalAdjustmentPercentage\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTotalAdjustmentAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTotalAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalShippingChargeAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTotalTaxAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTotalInvoicedAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalGratuityAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalPaidAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalCommissionsPayableAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SplitCommissionsIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderBookedDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderBilledDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderBacklogReportedDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderBacklogReleasedDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderCancellationDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderReturnedDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentToName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentToLocationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CarrierId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RequestedShipmentCarrierName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AlternateCarrierAcceptableIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ActualShipmentCarrierName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipOrderCompleteIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalOrderWeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WeightUomId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalOrderFreightChargeAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EarliestDeliveryWindowTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LatestDeliveryWindowTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AcknowledgementRequiredIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ExpediteOrderIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DropShipmentIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ServiceOrderIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"n",
								"spark.sql.sources.schema.part.1": "ame\":\"ProductOrderIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderDeliveryInstructions\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerCreditCheckNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MessageToCustomer\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerAccountId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarehouseId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StoreId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerIdentificationMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PoNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MarketingEventId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AdvertisingEventId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PaymentMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BillingCycleId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ContractId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesChannelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DistributionChannelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderClassificationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RejectionReasonId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"OrderProcessingStatusId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IsoCurrencyCode\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PointOfSaleId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResponsibilityCenterId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"VendorId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DeviceId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SoftwareProductId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SoftwareProductVersionNumber\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PromotionOfferId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "1c3acbf6-982f-4194-b446-a7ba9bbd6c9d",
							"Description": "A document or commission by the customer to order products."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Transaction",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "TransactionId",
										"Description": "The unique identifier of a Transaction.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionId"
										}
									},
									{
										"Name": "TransactionInitiatedTimestamp",
										"Description": "The timestamp the transaction was initiated.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionInitiatedTimestamp"
										}
									},
									{
										"Name": "TransactionCompletedTimestamp",
										"Description": "The timestamp that the transaction was completed or closed.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionCompletedTimestamp"
										}
									},
									{
										"Name": "TransactionReceivedTimestamp",
										"Description": "The timestamp that the Transaction was received.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionReceivedTimestamp"
										}
									},
									{
										"Name": "TransactionEntryTimestamp",
										"Description": "The timestamp that the Transaction was entered into the appropriate system for processing.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionEntryTimestamp"
										}
									},
									{
										"Name": "TransactionConfirmationTimestamp",
										"Description": "The timestamp that the Transaction was confirmed to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionConfirmationTimestamp"
										}
									},
									{
										"Name": "CreditCheckTimestamp",
										"Description": "The timestamp that the Customer/Customer Account had a credit check in regard to the Transaction amount.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CreditCheckTimestamp"
										}
									},
									{
										"Name": "RequestedDeliveryDate",
										"Description": "The date that the Customer/Customer Account requested delivery of the items.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "RequestedDeliveryDate"
										}
									},
									{
										"Name": "CommittedDeliveryDate",
										"Description": "The date committed to the Customer/Customer Account for delivery of the items.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CommittedDeliveryDate"
										}
									},
									{
										"Name": "ActualDeliveryTimestamp",
										"Description": "The actual timestamp of delivery of the items to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ActualDeliveryTimestamp"
										}
									},
									{
										"Name": "DeliveryConfirmationTimestamp",
										"Description": "The timestamp that confirmation of the delivery or Shipment was made to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DeliveryConfirmationTimestamp"
										}
									},
									{
										"Name": "TransactionAmount",
										"Description": "The amount associated with the transaction.\n\nEx:\nRefund = 'amount'\nCredit = 'amount'",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionAmount"
										}
									},
									{
										"Name": "ShipmentToName",
										"Description": "The name of the ship-to party.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipmentToName"
										}
									},
									{
										"Name": "ShipmentToLocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipmentToLocationId"
										}
									},
									{
										"Name": "TransactionConfirmationNumber",
										"Description": "The transaction confirmation number provided to confirm that the transaction was executed.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionConfirmationNumber"
										}
									},
									{
										"Name": "IdentificationCheckedIndicator",
										"Description": "Indicates whether the individual's identification was checked for any requirements for the transaction. For example: The individual is 21 years of age or older in order to purchase alcohol products.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "IdentificationCheckedIndicator"
										}
									},
									{
										"Name": "IdentificationId",
										"Description": "The unique identifier of the identification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "IdentificationId"
										}
									},
									{
										"Name": "TotalRetailPriceAmount",
										"Description": "The total list price value of the Transaction products = (list price per unit product price)x(quantity ordered) for each line item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalRetailPriceAmount"
										}
									},
									{
										"Name": "TotalAdjustmentPercentage",
										"Description": "The total percentage of adjustment(s) applied to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalAdjustmentPercentage"
										}
									},
									{
										"Name": "TotalAdjustmentAmount",
										"Description": "The total amount of adjustments applied to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalAdjustmentAmount"
										}
									},
									{
										"Name": "TotalTransactionSalesPriceAmount",
										"Description": "The total actual price value of the transaction item(s) = (actual selling price per unit product price)x(quantity) for each line item.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalTransactionSalesPriceAmount"
										}
									},
									{
										"Name": "TotalShippingChargeAmount",
										"Description": "The total amount of shipping charge associated with the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalShippingChargeAmount"
										}
									},
									{
										"Name": "TransactionTotalTaxAmount",
										"Description": "The total amount of all taxes applied to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTotalTaxAmount"
										}
									},
									{
										"Name": "TransactionRoundingAmount",
										"Description": "The amount of rounding applied to the transaction. This is typically done when the payment method is cash and the total invoice amount is rounded to an amount that is payable using legal tender. (e.g. 1 cent coin is no longer in legal circulation.)",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionRoundingAmount"
										}
									},
									{
										"Name": "TransactionTotalInvoicedAmount",
										"Description": "The total invoiced amount to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTotalInvoicedAmount"
										}
									},
									{
										"Name": "TotalCommissionsPayableAmount",
										"Description": "The total amount of commissions payable and due in regard to the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalCommissionsPayableAmount"
										}
									},
									{
										"Name": "SplitCommissionsIndicator",
										"Description": "Indicates that the commissions are to be split between two or more employees.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SplitCommissionsIndicator"
										}
									},
									{
										"Name": "RequestedShipmentCarrierName",
										"Description": "The name of the Carrier for the Shipment requested by the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "RequestedShipmentCarrierName"
										}
									},
									{
										"Name": "AlternateCarrierAcceptableIndicator",
										"Description": "Indicates that an alternate Carrier of the Shipment would be acceptable to the Customer/Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "AlternateCarrierAcceptableIndicator"
										}
									},
									{
										"Name": "ShipCompleteIndicator",
										"Description": "Indicates that the Transaction item(s) are only to be shipped when complete - no partial shipments.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipCompleteIndicator"
										}
									},
									{
										"Name": "AcknowledgementRequiredIndicator",
										"Description": "Indicates that an acknowledgement  to the Customer/Customer Account is required for the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "AcknowledgementRequiredIndicator"
										}
									},
									{
										"Name": "ExpediteTransactionIndicator",
										"Description": "Indicates that the Transaction is to be expedited.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ExpediteTransactionIndicator"
										}
									},
									{
										"Name": "DropShipmentIndicator",
										"Description": "Indicates that the Transaction item(s) are to be drop shipped.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DropShipmentIndicator"
										}
									},
									{
										"Name": "ActualShipmentCarrierName",
										"Description": "The Carrier of the Shipment.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ActualShipmentCarrierName"
										}
									},
									{
										"Name": "TotalWeight",
										"Description": "The total weight of the Transaction item(s).",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalWeight"
										}
									},
									{
										"Name": "TotalFreightChargeAmount",
										"Description": "The total freight charges amount.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TotalFreightChargeAmount"
										}
									},
									{
										"Name": "UnitOfMeasureId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "UnitOfMeasureId"
										}
									},
									{
										"Name": "EarliestDeliveryWindowTimestamp",
										"Description": "The earliest timestamp that the transaction should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "EarliestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "LatestDeliveryWindowTimestamp",
										"Description": "The latest timestamp that the transaction should be made available for delivery.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "LatestDeliveryWindowTimestamp"
										}
									},
									{
										"Name": "DeliveryInstructions",
										"Description": "Instructions related to the delivery of the Transaction item(s).",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DeliveryInstructions"
										}
									},
									{
										"Name": "CustomerCreditCheckNote",
										"Description": "A note, comment or additional information regarding the Transaction credit check.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerCreditCheckNote"
										}
									},
									{
										"Name": "MessageToCustomer",
										"Description": "A message to the Customer/Customer Account regarding the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "MessageToCustomer"
										}
									},
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerId"
										}
									},
									{
										"Name": "CustomerAccountId",
										"Description": "The unique identifier of a Customer Account.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerAccountId"
										}
									},
									{
										"Name": "PurchasingChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PurchasingChannelId"
										}
									},
									{
										"Name": "SalesChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SalesChannelId"
										}
									},
									{
										"Name": "DistributionChannelId",
										"Description": "The unique identifier of a Channel.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DistributionChannelId"
										}
									},
									{
										"Name": "MarketingEventId",
										"Description": "The unique identifier of a Marketing Event.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "MarketingEventId"
										}
									},
									{
										"Name": "AdvertisingEventId",
										"Description": "The unique identifier of an Advertising Event.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "AdvertisingEventId"
										}
									},
									{
										"Name": "PromotionId",
										"Description": "The unique identifier of a Promotion.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PromotionId"
										}
									},
									{
										"Name": "TransactionTypeId",
										"Description": "The unique identifier of a Transaction Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTypeId"
										}
									},
									{
										"Name": "BillingCycleId",
										"Description": "The unique identifier of a Billing Cycle.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "BillingCycleId"
										}
									},
									{
										"Name": "MerchantId",
										"Description": "The unique identifier of a Merchant.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "MerchantId"
										}
									},
									{
										"Name": "CustomerIdentificationMethodId",
										"Description": "The unique identifier of a customer identification method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "CustomerIdentificationMethodId"
										}
									},
									{
										"Name": "TransactionClassificationId",
										"Description": "The unique identifier of an Transaction Classification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionClassificationId"
										}
									},
									{
										"Name": "TransactionProcessingStatusId",
										"Description": "The unique identifier of a Transaction Processing Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionProcessingStatusId"
										}
									},
									{
										"Name": "IsoCurrencyCode",
										"Description": "The ISO 4217 currency code.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 3,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "IsoCurrencyCode"
										}
									},
									{
										"Name": "TransactionExecutionMethodId",
										"Description": "The unique identifier of a Transaction Execution Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionExecutionMethodId"
										}
									},
									{
										"Name": "TransactionPriorityId",
										"Description": "The unique identifier of a Transaction Priority.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionPriorityId"
										}
									},
									{
										"Name": "TransactionTaxStatusId",
										"Description": "The unique identifier of a Transaction Tax Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionTaxStatusId"
										}
									},
									{
										"Name": "WebPageUrl",
										"Description": "The unique address of any Web document.\n\nThe URL consists of:\nType of file (ex: http://)\nDomain name (ex: www. name.com)\nPath or directory to file (ex: /notes/internet)\nName of file (...name.html)",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2083,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "WebPageUrl"
										}
									},
									{
										"Name": "SessionId",
										"Description": "The unique identifier of a Session.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SessionId"
										}
									},
									{
										"Name": "WorkstationSessionId",
										"Description": "The unique identifier of a Workstation Session.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "WorkstationSessionId"
										}
									},
									{
										"Name": "PointOfSaleId",
										"Description": "The unique identifier of a POS.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PointOfSaleId"
										}
									},
									{
										"Name": "StoreId",
										"Description": "The unique identifier of a Store.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "StoreId"
										}
									},
									{
										"Name": "WarehouseId",
										"Description": "The unique identifier of a Warehouse.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "WarehouseId"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "TransactionNote",
										"Description": "A note, comment or additional information regarding the Transaction.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "TransactionNote"
										}
									},
									{
										"Name": "ShipmentMethodId",
										"Description": "The unique identifier of a Shipment Method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ShipmentMethodId"
										}
									},
									{
										"Name": "DeviceId",
										"Description": "The unique identifier of a Device.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "DeviceId"
										}
									},
									{
										"Name": "SoftwareProductId",
										"Description": "The unique identifier of a software product.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SoftwareProductId"
										}
									},
									{
										"Name": "SoftwareProductVersionNumber",
										"Description": "The version number of the software product.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "SoftwareProductVersionNumber"
										}
									},
									{
										"Name": "ApprovedByEmployeeId",
										"Description": "The unique identifier of an Employee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "ApprovedByEmployeeId"
										}
									},
									{
										"Name": "PromotionOfferId",
										"Description": "The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "PromotionOfferId"
										}
									},
									{
										"Name": "LoyaltyCardId",
										"Description": "The unique identifier of a Loyalty Card.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Transaction.cdm.json/Transaction",
											"Name": "LoyaltyCardId"
										}
									}
								],
								"ColumnSetEntityName": "d6d7ab4b-9d8d-479c-a1af-ae6bb0d1ff56",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Transaction",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Transaction",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"TransactionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionId\"},\"TransactionInitiatedTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionInitiatedTimestamp\"},\"TransactionCompletedTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionCompletedTimestamp\"},\"TransactionReceivedTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionReceivedTimestamp\"},\"TransactionEntryTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionEntryTimestamp\"},\"TransactionConfirmationTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationTimestamp\"},\"CreditCheckTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CreditCheckTimestamp\"},\"RequestedDeliveryDate\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedDeliveryDate\"},\"CommittedDeliveryDate\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CommittedDeliveryDate\"},\"ActualDeliveryTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualDeliveryTimestamp\"},\"DeliveryConfirmationTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryConfirmationTimestamp\"},\"TransactionAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionAmount\"},\"ShipmentToName\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToName\"},\"ShipmentToLocationId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToLocationId\"},\"TransactionConfirmationNumber\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationNumber\"},\"IdentificationCheckedIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationCheckedIndicator\"},\"IdentificationId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationId\"},\"TotalRetailPriceAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalRetailPriceAmount\"},\"TotalAdjustmentPercentage\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentPercentage\"},\"TotalAdjustmentAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentAmount\"},\"TotalTransactionSalesPriceAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalTransactionSalesPriceAmount\"},\"TotalShippingChargeAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalShippingChargeAmount\"},\"TransactionTotalTaxAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalTaxAmount\"},\"TransactionRoundingAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionRoundingAmount\"},\"TransactionTotalInvoicedAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalInvoicedAmount\"},\"TotalCommissionsPayableAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalCommissionsPayableAmount\"},\"SplitCommissionsIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SplitCommissionsIndicator\"},\"RequestedShipmentCarrierName\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedShipmentCarrierName\"},\"AlternateCarrierAcceptableIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AlternateCarrierAcceptableIndicator\"},\"ShipCompleteIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipCompleteIndicator\"},\"AcknowledgementRequiredIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AcknowledgementRequiredIndicator\"},\"ExpediteTransactionIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ExpediteTransactionIndicator\"},\"DropShipmentIndicator\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DropShipmentIndicator\"},\"ActualShipmentCarrierName\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualShipmentCarrierName\"},\"TotalWeight\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalWeight\"},\"TotalFreightChargeAmount\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalFreightChargeAmount\"},\"UnitOfMeasureId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"UnitOfMeasureId\"},\"EarliestDeliveryWindowTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"LatestDeliveryWindowTimestamp\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"DeliveryInstructions\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryInstructions\"},\"CustomerCreditCheckNote\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerCreditCheckNote\"},\"MessageToCustomer\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MessageToCustomer\"},\"CustomerId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerId\"},\"CustomerAccountId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerAccountId\"},\"PurchasingChannelId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PurchasingChannelId\"},\"SalesChannelId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SalesChannelId\"},\"DistributionChannelId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DistributionChannelId\"},\"MarketingEventId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MarketingEventId\"},\"AdvertisingEventId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AdvertisingEventId\"},\"PromotionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionId\"},\"TransactionTypeId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTypeId\"},\"BillingCycleId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"BillingCycleId\"},\"MerchantId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MerchantId\"},\"CustomerIdentificationMethodId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerIdentificationMethodId\"},\"TransactionClassificationId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionClassificationId\"},\"TransactionProcessingStatusId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionProcessingStatusId\"},\"IsoCurrencyCode\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IsoCurrencyCode\"},\"TransactionExecutionMethodId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionExecutionMethodId\"},\"TransactionPriorityId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionPriorityId\"},\"TransactionTaxStatusId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTaxStatusId\"},\"WebPageUrl\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WebPageUrl\"},\"SessionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SessionId\"},\"WorkstationSessionId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WorkstationSessionId\"},\"PointOfSaleId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PointOfSaleId\"},\"StoreId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"StoreId\"},\"WarehouseId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WarehouseId\"},\"ResponsibilityCenterId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ResponsibilityCenterId\"},\"TransactionNote\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionNote\"},\"ShipmentMethodId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentMethodId\"},\"DeviceId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeviceId\"},\"SoftwareProductId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductId\"},\"SoftwareProductVersionNumber\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductVersionNumber\"},\"ApprovedByEmployeeId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ApprovedByEmployeeId\"},\"PromotionOfferId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionOfferId\"},\"LoyaltyCardId\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LoyaltyCardId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Transaction\",\"path\":\"Transaction.cdm.json/Transaction\"},\"description\":\"The lowest level of executable work or customer activity.\\n\\nA transaction consists of one or more discrete events.\",\"primaryKey\":[\"TransactionId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Transaction.\",\"isNullable\":false,\"name\":\"TransactionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionInitiatedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp the transaction was initiated.\",\"isNullable\":true,\"name\":\"TransactionInitiatedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionCompletedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the transaction was completed or closed.\",\"isNullable\":true,\"name\":\"TransactionCompletedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionReceivedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Transaction was received.\",\"isNullable\":true,\"name\":\"TransactionReceivedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionEntryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Transaction was entered into the appropriate system for processing.\",\"isNullable\":true,\"name\":\"TransactionEntryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Transaction was confirmed to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"TransactionConfirmationTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CreditCheckTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Customer/Customer Account had a credit check in regard to the Transaction amount.\",\"isNullable\":true,\"name\":\"CreditCheckTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedDeliveryDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Customer/Customer Account requested delivery of the items.\",\"isNullable\":true,\"name\":\"RequestedDeliveryDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CommittedDeliveryDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date committed to the Customer/Customer Account for delivery of the items.\",\"isNullable\":true,\"name\":\"CommittedDeliveryDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualDeliveryTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual timestamp of delivery of the items to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"ActualDeliveryTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryConfirmationTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that confirmation of the delivery or Shipment was made to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"DeliveryConfirmationTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount associated with the transaction.\\n\\nEx:\\nRefund = 'amount'\\nCredit = 'amount'\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the ship-to party.\",\"isNullable\":true,\"name\":\"ShipmentToName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentToLocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"ShipmentToLocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionConfirmationNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The transaction confirmation number provided to confirm that the transaction was executed.\",\"isNullable\":true,\"name\":\"TransactionConfirmationNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationCheckedIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the individual's identification was checked for any requirements for the transaction. For example: The individual is 21 years of age or older in order to purchase alcohol products.\",\"isNullable\":true,\"name\":\"IdentificationCheckedIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IdentificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the identification.\",\"isNullable\":true,\"name\":\"IdentificationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalRetailPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total list price value of the Transaction products = (list price per unit product price)x(quantity ordered) for each line item.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalRetailPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentPercentage\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total percentage of adjustment(s) applied to the Transaction.\",\"isNullable\":true,\"scale\":8,\"name\":\"TotalAdjustmentPercentage\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalAdjustmentAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of adjustments applied to the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalAdjustmentAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalTransactionSalesPriceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total actual price value of the transaction item(s) = (actual selling price per unit product price)x(quantity) for each line item.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalTransactionSalesPriceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalShippingChargeAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of shipping charge associated with the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalShippingChargeAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalTaxAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of all taxes applied to the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionTotalTaxAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionRoundingAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount of rounding applied to the transaction. This is typically done when the payment method is cash and the total invoice amount is rounded to an amount that is payable using legal tender. (e.g. 1 cent coin is no longer in legal circulation.)\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionRoundingAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTotalInvoicedAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total invoiced amount to the Customer/Customer Account.\",\"isNullable\":true,\"scale\":2,\"name\":\"TransactionTotalInvoicedAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalCommissionsPayableAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total amount of commissions payable and due in regard to the Transaction.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalCommissionsPayableAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SplitCommissionsIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the commissions are to be split between two or more employees.\",\"isNullable\":true,\"name\":\"SplitCommissionsIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"RequestedShipmentCarrierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Carrier for the Shipment requested by the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"RequestedShipmentCarrierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AlternateCarrierAcceptableIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that an alternate Carrier of the Shipment would be acceptable to the Customer/Customer Account.\",\"isNullable\":true,\"name\":\"AlternateCarrierAcceptableIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipCompleteIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Transaction item(s) are only to be shipped when complete - no partial shipments.\",\"isNullable\":true,\"name\":\"ShipCompleteIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AcknowledgementRequiredIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that an acknowledgement  to the Customer/Customer Account is required for the Transaction.\",\"isNullable\":true,\"name\":\"AcknowledgementRequiredIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ExpediteTransactionIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Transaction is to be expedited.\",\"isNullable\":true,\"name\":\"ExpediteTransactionIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DropShipmentIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the Transaction item(s) are to be drop shipped.\",\"isNullable\":true,\"name\":\"DropShipmentIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ActualShipmentCarrierName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The Carrier of the Shipment.\",\"isNullable\":true,\"name\":\"ActualShipmentCarrierName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalWeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total weight of the Transaction item(s).\",\"isNullable\":true,\"scale\":8,\"name\":\"TotalWeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TotalFreightChargeAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The total freight charges amount.\",\"isNullable\":true,\"scale\":2,\"name\":\"TotalFreightChargeAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"UnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"UnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"EarliestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest timestamp that the transaction should be made available for delivery.\",\"isNullable\":true,\"name\":\"EarliestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LatestDeliveryWindowTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest timestamp that the transaction should be made available for delivery.\",\"isNullable\":true,\"name\":\"LatestDeliveryWindowTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeliveryInstructions\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Instructions related to the delivery of the Transaction item(s).\",\"isNullable\":true,\"name\":\"DeliveryInstructions\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerCreditCheckNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Transaction credit check.\",\"isNullable\":true,\"name\":\"CustomerCreditCheckNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MessageToCustomer\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A message to the Customer/Customer Account regarding the Transaction.\",\"isNullable\":true,\"name\":\"MessageToCustomer\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":true,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerAccountId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer Account.\",\"isNullable\":true,\"name\":\"CustomerAccountId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PurchasingChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"PurchasingChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SalesChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"SalesChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DistributionChannelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Channel.\",\"isNullable\":true,\"name\":\"DistributionChannelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MarketingEventId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Marketing Event.\",\"isNullable\":true,\"name\":\"MarketingEventId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"AdvertisingEventId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Advertising Event.\",\"isNullable\":true,\"name\":\"AdvertisingEventId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Promotion.\",\"isNullable\":true,\"name\":\"PromotionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Type.\",\"isNullable\":true,\"name\":\"TransactionTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"BillingCycleId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Billing Cycle.\",\"isNullable\":true,\"name\":\"BillingCycleId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"MerchantId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Merchant.\",\"isNullable\":true,\"name\":\"MerchantId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"CustomerIdentificationMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a customer identification method.\",\"isNullable\":true,\"name\":\"CustomerIdentificationMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionClassificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Transaction Classification.\",\"isNullable\":true,\"name\":\"TransactionClassificationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionProcessingStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Processing Status.\",\"isNullable\":true,\"name\":\"TransactionProcessingStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"IsoCurrencyCode\"},\"dataType\":\"string\",\"dataTypeLength\":3,\"description\":\"The ISO 4217 currency code.\",\"isNullable\":true,\"name\":\"IsoCurrencyCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionExecutionMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Execution Type.\",\"isNullable\":true,\"name\":\"TransactionExecutionMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionPriorityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Priority.\",\"isNullable\":true,\"name\":\"TransactionPriorityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionTaxStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Transaction Tax Status.\",\"isNullable\":true,\"name\":\"TransactionTaxStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WebPageUrl\"},\"dataType\":\"string\",\"dataTypeLength\":2083,\"description\":\"The unique address of any Web document.\\n\\nThe URL consists of:\\nType of file (ex: http://)\\nDomain name (ex: www. name.com)\\nPath or directory to file (ex: /notes/internet)\\nName of file (...name.html)\",\"isNullable\":true,\"name\":\"WebPageUrl\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SessionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Session.\",\"isNullable\":true,\"name\":\"SessionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WorkstationSessionId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Workstation Session.\",\"isNullable\":true,\"name\":\"WorkstationSessionId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PointOfSaleId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a POS.\",\"isNullable\":true,\"name\":\"PointOfSaleId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"StoreId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Store.\",\"isNullable\":true,\"name\":\"StoreId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"WarehouseId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Warehouse.\",\"isNullable\":true,\"name\":\"WarehouseId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"TransactionNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Transaction.\",\"isNullable\":true,\"name\":\"TransactionNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ShipmentMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Shipment Method.\",\"isNullable\":true,\"name\":\"ShipmentMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"DeviceId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Device.\",\"isNullable\":true,\"name\":\"DeviceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a software product.\",\"isNullable\":true,\"name\":\"SoftwareProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"SoftwareProductVersionNumber\"},\"dataType\":\"integer\",\"description\":\"The version number of the software product.\",\"isNullable\":true,\"name\":\"SoftwareProductVersionNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"ApprovedByEmployeeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employee.\",\"isNullable\":true,\"name\":\"ApprovedByEmployeeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"PromotionOfferId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Promotion Offer. The Promotion Offer ID is unique to each account or party that is offered to.\",\"isNullable\":true,\"name\":\"PromotionOfferId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Transaction.cdm.json/Transaction\",\"name\":\"LoyaltyCardId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Loyalty Card.\",\"isNullable\":true,\"name\":\"LoyaltyCardId\"}]}}}",
								"Description": "The lowest level of executable work or customer activity.\n\nA transaction consists of one or more discrete events.",
								"DisplayFolderInfo": "{\"name\":\"Transaction\",\"colorCode\":\"\"}",
								"PrimaryKeys": "TransactionId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "2",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"TransactionId\",\"type\":\"long\",\"nullable\":false,\"metadata\":{}},{\"name\":\"TransactionInitiatedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionCompletedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionReceivedTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionEntryTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionConfirmationTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CreditCheckTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RequestedDeliveryDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CommittedDeliveryDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ActualDeliveryTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DeliveryConfirmationTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentToName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentToLocationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionConfirmationNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IdentificationCheckedIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IdentificationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalRetailPriceAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalAdjustmentPercentage\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalAdjustmentAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalTransactionSalesPriceAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalShippingChargeAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionTotalTaxAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionRoundingAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionTotalInvoicedAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalCommissionsPayableAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SplitCommissionsIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"RequestedShipmentCarrierName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AlternateCarrierAcceptableIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipCompleteIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AcknowledgementRequiredIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ExpediteTransactionIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DropShipmentIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ActualShipmentCarrierName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalWeight\",\"type\":\"decimal(18,8)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalFreightChargeAmount\",\"type\":\"decimal(18,2)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"UnitOfMeasureId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"EarliestDeliveryWindowTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LatestDeliveryWindowTimestamp\",\"type\":\"timestamp\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DeliveryInstructions\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerCreditCheckNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MessageToCustomer\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerAccountId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PurchasingChannelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SalesChannelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DistributionChannelId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MarketingEventId\",\"type\"",
								"spark.sql.sources.schema.part.1": ":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AdvertisingEventId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PromotionId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BillingCycleId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"MerchantId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerIdentificationMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionClassificationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionProcessingStatusId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IsoCurrencyCode\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionExecutionMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionPriorityId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionTaxStatusId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WebPageUrl\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SessionId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WorkstationSessionId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PointOfSaleId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StoreId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarehouseId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResponsibilityCenterId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TransactionNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ShipmentMethodId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DeviceId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SoftwareProductId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SoftwareProductVersionNumber\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ApprovedByEmployeeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PromotionOfferId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LoyaltyCardId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "9a97144b-ac45-4b43-9faa-f0876fab6293",
							"Description": "The lowest level of executable work or customer activity.\n\nA transaction consists of one or more discrete events."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Vendor",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "VendorId",
										"Description": "The unique identifier of a Vendor.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "VendorId"
										}
									},
									{
										"Name": "VendorName",
										"Description": "The business name of the Vendor.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "VendorName"
										}
									},
									{
										"Name": "VendorNote",
										"Description": "A narrative, description or additional detail regarding the associated Vendor.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "VendorNote"
										}
									},
									{
										"Name": "VendorTypeId",
										"Description": "The unique identifier of a Vendor Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "VendorTypeId"
										}
									},
									{
										"Name": "VendorDateOfEstablishment",
										"Description": "The date that the Vendor was established.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "VendorDateOfEstablishment"
										}
									},
									{
										"Name": "StateOfVendorEstablishment",
										"Description": "The state in which the Vendor was established.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 64,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "StateOfVendorEstablishment"
										}
									},
									{
										"Name": "CountryOfVendorEstablishment",
										"Description": "The country in which the Vendor was established.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 64,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "CountryOfVendorEstablishment"
										}
									},
									{
										"Name": "StateOfVendorResidence",
										"Description": "The state in which the Vendor has it's primary business or official residence.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 64,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "StateOfVendorResidence"
										}
									},
									{
										"Name": "CountryOfVendorResidence",
										"Description": "The country in which the Vendor has it's primary business or official residence.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 64,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "CountryOfVendorResidence"
										}
									},
									{
										"Name": "FirstDateOfOperation",
										"Description": "The first date that the Vendor entered into normal business or operations.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "FirstDateOfOperation"
										}
									},
									{
										"Name": "CurrentManagementFirstControlDate",
										"Description": "The date that current management assumed control of the Vendor's normal business operations.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "CurrentManagementFirstControlDate"
										}
									},
									{
										"Name": "StockExchangeName",
										"Description": "The name of the stock exchange that the security is listed upon.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "StockExchangeName"
										}
									},
									{
										"Name": "ListedSecuritySymbol",
										"Description": "The security symbol of the Vendor, if any.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 8,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "ListedSecuritySymbol"
										}
									},
									{
										"Name": "BankruptcyIndicator",
										"Description": "Indicates that bankruptcy proceeding exist for the Vendor customer, which is a proceeding under the U.S. Bankruptcy Code, in which either a debtor files a bankruptcy petition and voluntarily seeks protection from creditors, or creditors file a bankruptcy petition against a debtor to force the debtor to pay debts owed to them.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "BankruptcyIndicator"
										}
									},
									{
										"Name": "SmallBusinessIndicator",
										"Description": "Indicates that business is a small business by SBA guidelines.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "SmallBusinessIndicator"
										}
									},
									{
										"Name": "ManufacturingIndicator",
										"Description": "Notes manufacturing operations occur at site.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "ManufacturingIndicator"
										}
									},
									{
										"Name": "ForeignOwnedIndicator",
										"Description": "Identifies companies with parent outside of the U.S.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "ForeignOwnedIndicator"
										}
									},
									{
										"Name": "DunsNumber",
										"Description": "The DUNS number is a nine-digit number issued by Dun & Bradstreet and assigned to each business location in the D&B database having a unique, separate, and distinct operation to businesses for the purpose of identifying them. The number as issued is random and the digits apparently have no significance as to their issuance.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 9,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunsNumber"
										}
									},
									{
										"Name": "DunBradstreetSingleLocationSubsidiary",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetSingleLocationSubsidiary"
										}
									},
									{
										"Name": "DunBradstreetHeadquarters",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetHeadquarters"
										}
									},
									{
										"Name": "DunBradstreetBranch",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetBranch"
										}
									},
									{
										"Name": "DunBradstreetDivision",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetDivision"
										}
									},
									{
										"Name": "DunBradstreetSubsidiary",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetSubsidiary"
										}
									},
									{
										"Name": "DunBradstreetParent",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetParent"
										}
									},
									{
										"Name": "DunBradstreetUltimate",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetUltimate"
										}
									},
									{
										"Name": "DunBradstreetGlobalUltimate",
										"Description": "There are eight (8) types of business relationships defined in D&B WorldBase:\n\nSingle Location Subsidiary\n\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \"single location\" and is not part of a corporate family.\n\nHeadquarters\n\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\n\nBranch\n\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\n\nDivision\n\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\n\nSubsidiary\n\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\n\nParent\n\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\n\nDomestic Ultimate\n\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\n\nGlobal Ultimate\n\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "DunBradstreetGlobalUltimate"
										}
									},
									{
										"Name": "LegalEntityFormId",
										"Description": "The unique identifier of the Legal Entity Form.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "LegalEntityFormId"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "LedgerId",
										"Description": "The unique identifier of a Ledger.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "LedgerId"
										}
									},
									{
										"Name": "LedgerAccountNumber",
										"Description": "The unique identifier of a Ledger Account.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "LedgerAccountNumber"
										}
									},
									{
										"Name": "NaicsNationalIndustryCode",
										"Description": "The unique identifier of a NAICS National Industry Code.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 6,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "NaicsNationalIndustryCode"
										}
									},
									{
										"Name": "SicIndustryCode",
										"Description": "The unique identifier of the SIC Industry.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 4,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "SicIndustryCode"
										}
									},
									{
										"Name": "AnzsicClassCode",
										"Description": "The unique identifier of an ANZSIC Class.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 4,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "AnzsicClassCode"
										}
									},
									{
										"Name": "IsoCurrencyCode",
										"Description": "The ISO 4217 currency code.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 3,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "IsoCurrencyCode"
										}
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Vendor.cdm.json/Vendor",
											"Name": "PartyId"
										}
									}
								],
								"ColumnSetEntityName": "6ecc4f57-cba5-43c6-97a6-ac2ab64e89c6",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Vendor",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Vendor",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"VendorId\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorId\"},\"VendorName\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorName\"},\"VendorNote\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorNote\"},\"VendorTypeId\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorTypeId\"},\"VendorDateOfEstablishment\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorDateOfEstablishment\"},\"StateOfVendorEstablishment\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"StateOfVendorEstablishment\"},\"CountryOfVendorEstablishment\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"CountryOfVendorEstablishment\"},\"StateOfVendorResidence\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"StateOfVendorResidence\"},\"CountryOfVendorResidence\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"CountryOfVendorResidence\"},\"FirstDateOfOperation\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"FirstDateOfOperation\"},\"CurrentManagementFirstControlDate\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"CurrentManagementFirstControlDate\"},\"StockExchangeName\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"StockExchangeName\"},\"ListedSecuritySymbol\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ListedSecuritySymbol\"},\"BankruptcyIndicator\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"BankruptcyIndicator\"},\"SmallBusinessIndicator\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"SmallBusinessIndicator\"},\"ManufacturingIndicator\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ManufacturingIndicator\"},\"ForeignOwnedIndicator\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ForeignOwnedIndicator\"},\"DunsNumber\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunsNumber\"},\"DunBradstreetSingleLocationSubsidiary\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetSingleLocationSubsidiary\"},\"DunBradstreetHeadquarters\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetHeadquarters\"},\"DunBradstreetBranch\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetBranch\"},\"DunBradstreetDivision\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetDivision\"},\"DunBradstreetSubsidiary\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetSubsidiary\"},\"DunBradstreetParent\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetParent\"},\"DunBradstreetUltimate\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetUltimate\"},\"DunBradstreetGlobalUltimate\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetGlobalUltimate\"},\"LegalEntityFormId\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"LegalEntityFormId\"},\"ResponsibilityCenterId\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ResponsibilityCenterId\"},\"LedgerId\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"LedgerId\"},\"LedgerAccountNumber\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"LedgerAccountNumber\"},\"NaicsNationalIndustryCode\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"NaicsNationalIndustryCode\"},\"SicIndustryCode\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"SicIndustryCode\"},\"AnzsicClassCode\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"AnzsicClassCode\"},\"IsoCurrencyCode\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"IsoCurrencyCode\"},\"PartyId\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"PartyId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Vendor\",\"path\":\"Vendor.cdm.json/Vendor\"},\"description\":\"A supplier of products, goods or services.\",\"primaryKey\":[\"VendorId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Vendor.\",\"isNullable\":false,\"name\":\"VendorId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The business name of the Vendor.\",\"isNullable\":true,\"name\":\"VendorName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A narrative, description or additional detail regarding the associated Vendor.\",\"isNullable\":true,\"name\":\"VendorNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Vendor Type.\",\"isNullable\":true,\"name\":\"VendorTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"VendorDateOfEstablishment\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the Vendor was established.\",\"isNullable\":true,\"name\":\"VendorDateOfEstablishment\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"StateOfVendorEstablishment\"},\"dataType\":\"string\",\"dataTypeLength\":64,\"description\":\"The state in which the Vendor was established.\",\"isNullable\":true,\"name\":\"StateOfVendorEstablishment\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"CountryOfVendorEstablishment\"},\"dataType\":\"string\",\"dataTypeLength\":64,\"description\":\"The country in which the Vendor was established.\",\"isNullable\":true,\"name\":\"CountryOfVendorEstablishment\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"StateOfVendorResidence\"},\"dataType\":\"string\",\"dataTypeLength\":64,\"description\":\"The state in which the Vendor has it's primary business or official residence.\",\"isNullable\":true,\"name\":\"StateOfVendorResidence\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"CountryOfVendorResidence\"},\"dataType\":\"string\",\"dataTypeLength\":64,\"description\":\"The country in which the Vendor has it's primary business or official residence.\",\"isNullable\":true,\"name\":\"CountryOfVendorResidence\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"FirstDateOfOperation\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The first date that the Vendor entered into normal business or operations.\",\"isNullable\":true,\"name\":\"FirstDateOfOperation\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"CurrentManagementFirstControlDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that current management assumed control of the Vendor's normal business operations.\",\"isNullable\":true,\"name\":\"CurrentManagementFirstControlDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"StockExchangeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the stock exchange that the security is listed upon.\",\"isNullable\":true,\"name\":\"StockExchangeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ListedSecuritySymbol\"},\"dataType\":\"string\",\"dataTypeLength\":8,\"description\":\"The security symbol of the Vendor, if any.\",\"isNullable\":true,\"name\":\"ListedSecuritySymbol\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"BankruptcyIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that bankruptcy proceeding exist for the Vendor customer, which is a proceeding under the U.S. Bankruptcy Code, in which either a debtor files a bankruptcy petition and voluntarily seeks protection from creditors, or creditors file a bankruptcy petition against a debtor to force the debtor to pay debts owed to them.\",\"isNullable\":true,\"name\":\"BankruptcyIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"SmallBusinessIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that business is a small business by SBA guidelines.\",\"isNullable\":true,\"name\":\"SmallBusinessIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ManufacturingIndicator\"},\"dataType\":\"boolean\",\"description\":\"Notes manufacturing operations occur at site.\",\"isNullable\":true,\"name\":\"ManufacturingIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ForeignOwnedIndicator\"},\"dataType\":\"boolean\",\"description\":\"Identifies companies with parent outside of the U.S.\",\"isNullable\":true,\"name\":\"ForeignOwnedIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunsNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":9,\"description\":\"The DUNS number is a nine-digit number issued by Dun & Bradstreet and assigned to each business location in the D&B database having a unique, separate, and distinct operation to businesses for the purpose of identifying them. The number as issued is random and the digits apparently have no significance as to their issuance.\",\"isNullable\":true,\"scale\":0,\"name\":\"DunsNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetSingleLocationSubsidiary\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetSingleLocationSubsidiary\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetHeadquarters\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetHeadquarters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetBranch\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetBranch\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetDivision\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetDivision\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetSubsidiary\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetSubsidiary\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetParent\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetParent\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetUltimate\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetUltimate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"DunBradstreetGlobalUltimate\"},\"dataType\":\"boolean\",\"description\":\"There are eight (8) types of business relationships defined in D&B WorldBase:\\n\\nSingle Location Subsidiary\\n\\nA single location subsidiary has reporting responsibilities to its parent; however, it does not have branches or subsidiaries reporting to it. Do not confuse this with a stand-alone business which is titled \\\"single location\\\" and is not part of a corporate family.\\n\\nHeadquarters\\n\\nA headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters is more that 50% owned by another corporation, it also will be a subsidiary. If it owns more that 50% of another corporation, then it is also a parent.\\n\\nBranch\\n\\nA branch is a secondary location of its headquarters. It has no legal responsibility for its debts, even though bills may be paid from the branch location. It will have the same legal business name as its headquarters, although branches frequently operate under a different trade style than the headquarters establishment. A branch may be located at the same address as the headquarters if it has a unique trade style. In such cases, the branch may appear to be a duplicate with a different D-U-N-S number than the headquarters record, which may confuse customers if they don't purchase the trade style field.\\n\\nDivision\\n\\nA division, like a branch, is a secondary location of a business. However, a division carries out specific business operations related to the headquarters under a divisional name. Divisions look similar to branches in D&B WorldBase and carry a branch code.\\n\\nSubsidiary\\n\\nA subsidiary is a corporation that is more than 50% owned by another corporation and will have a different legal business name from its parent company. A subsidiary may have branches and/or subsidiaries of its own. If it does, then its D-U-N-S Number appears in the headquarter/parent D-U-N-S Number field of its children.\\n\\nParent\\n\\nA parent is a corporation that owns more than 50 percent of another corporation. The parent company also may be a subsidiary of another corporation. If the parent also has branches, then it is also a headquarters.\\n\\nDomestic Ultimate\\n\\nThe Domestic Ultimate is a subsidiary within the global family tree which is the highest ranking member within a specific country.\\n\\nGlobal Ultimate\\n\\nThe Global Ultimate is the top most responsible entity within the global family tree. The Global Ultimate may have branches and/or subsidiaries reporting directly or indirectly to it.\",\"isNullable\":true,\"name\":\"DunBradstreetGlobalUltimate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"LegalEntityFormId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Legal Entity Form.\",\"isNullable\":true,\"name\":\"LegalEntityFormId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"LedgerId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Ledger.\",\"isNullable\":true,\"name\":\"LedgerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"LedgerAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The unique identifier of a Ledger Account.\",\"isNullable\":true,\"name\":\"LedgerAccountNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"NaicsNationalIndustryCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":6,\"description\":\"The unique identifier of a NAICS National Industry Code.\",\"isNullable\":true,\"scale\":0,\"name\":\"NaicsNationalIndustryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"SicIndustryCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":4,\"description\":\"The unique identifier of the SIC Industry.\",\"isNullable\":true,\"scale\":0,\"name\":\"SicIndustryCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"AnzsicClassCode\"},\"dataType\":\"decimal\",\"dataTypeLength\":4,\"description\":\"The unique identifier of an ANZSIC Class.\",\"isNullable\":true,\"scale\":0,\"name\":\"AnzsicClassCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"IsoCurrencyCode\"},\"dataType\":\"string\",\"dataTypeLength\":3,\"description\":\"The ISO 4217 currency code.\",\"isNullable\":true,\"name\":\"IsoCurrencyCode\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Vendor.cdm.json/Vendor\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"}]}}}",
								"Description": "A supplier of products, goods or services.",
								"DisplayFolderInfo": "{\"name\":\"Vendor\",\"colorCode\":\"\"}",
								"PrimaryKeys": "VendorId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"VendorId\",\"type\":\"long\",\"nullable\":false,\"metadata\":{}},{\"name\":\"VendorName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"VendorNote\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"VendorTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"VendorDateOfEstablishment\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StateOfVendorEstablishment\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CountryOfVendorEstablishment\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StateOfVendorResidence\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CountryOfVendorResidence\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"FirstDateOfOperation\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CurrentManagementFirstControlDate\",\"type\":\"date\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StockExchangeName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ListedSecuritySymbol\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"BankruptcyIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SmallBusinessIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ManufacturingIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ForeignOwnedIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunsNumber\",\"type\":\"decimal(9,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetSingleLocationSubsidiary\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetHeadquarters\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetBranch\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetDivision\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetSubsidiary\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetParent\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetUltimate\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"DunBradstreetGlobalUltimate\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LegalEntityFormId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ResponsibilityCenterId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LedgerId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LedgerAccountNumber\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"NaicsNationalIndustryCode\",\"type\":\"decimal(6,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"SicIndustryCode\",\"type\":\"decimal(4,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"AnzsicClassCode\",\"type\":\"decimal(4,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"IsoCurrencyCode\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PartyId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "d5b5e8d9-884d-467e-99e0-f28458d2495d",
							"Description": "A supplier of products, goods or services."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Warehouse",
							"EntityType": "TABLE",
							"TableType": "EXTERNAL",
							"Namespace": {
								"SchemaName": null,
								"DatabaseName": "Manufacturing_qwg"
							},
							"StorageDescriptor": {
								"Distribution": null,
								"Columns": [
									{
										"Name": "WarehouseId",
										"Description": "The unique identifier of a Warehouse.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "WarehouseId"
										}
									},
									{
										"Name": "WarehouseName",
										"Description": "The name of the Warehouse.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "WarehouseName"
										}
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "LocationId"
										}
									},
									{
										"Name": "GlobalLocationNumber",
										"Description": "The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 13,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "GlobalLocationNumber"
										}
									},
									{
										"Name": "WarehouseTelephoneNumber",
										"Description": "The Warehouse Telephone Number.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "WarehouseTelephoneNumber"
										}
									},
									{
										"Name": "WarehouseFaxNumber",
										"Description": "The Warehouse Fax Number.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "WarehouseFaxNumber"
										}
									},
									{
										"Name": "WarehouseEmailAddress",
										"Description": "The Warehouse email address.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "WarehouseEmailAddress"
										}
									},
									{
										"Name": "PickAndPackLeadTime",
										"Description": "The default time required to pick and pack an item at a warehouse.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "PickAndPackLeadTime"
										}
									},
									{
										"Name": "WarehouseOrderCutoffTime",
										"Description": "The latest time each day that new orders will be accepted for delivery for the next scheduled delivery day.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "WarehouseOrderCutoffTime"
										}
									},
									{
										"Name": "TotalFloorSpace",
										"Description": "The total floor space at the Warehouse.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "TotalFloorSpace"
										}
									},
									{
										"Name": "TotalFloorInventoryStorageSpace",
										"Description": "The total floor space at the Warehouse that is available for storage of inventory.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "TotalFloorInventoryStorageSpace"
										}
									},
									{
										"Name": "StorageSpaceUnitOfMeasureId",
										"Description": "The unit of measure for the size measurement of the Warehouse.\n\nEx:\n- square feet\n- square meter",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "StorageSpaceUnitOfMeasureId"
										}
									},
									{
										"Name": "ContractWarehouseIndicator",
										"Description": "A contract warehouse is a business that handles shipping, receiving, and storage of products on a contract basis.  \n\nContract warehouses will generally require a client to commit to a specific period of time (generally in years) for the services.  \n\nContracts may or may not require clients to purchase or subsidize storage and material-handling equipment.  \n\nFees for contract warehouses may be transaction and storage based, fixed, cost plus, or any combination.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "ContractWarehouseIndicator"
										}
									},
									{
										"Name": "StoreId",
										"Description": "The unique identifier of a Store.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "StoreId"
										}
									},
									{
										"Name": "CustomerId",
										"Description": "The unique identifier of a Customer.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "CustomerId"
										}
									},
									{
										"Name": "CustomerOwnedWarehouseIndicator",
										"Description": "Indicates whether the customer owns the warehouse.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "CustomerOwnedWarehouseIndicator"
										}
									},
									{
										"Name": "CustomerManagedWarehouseIndicator",
										"Description": "Indicates whether the customer manages the warehouse.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "CustomerManagedWarehouseIndicator"
										}
									},
									{
										"Name": "InventoryOwnedByCustomerIndicator",
										"Description": "Indicates whether the inventory stored at the warehouse inventory location is owned by the customer.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "InventoryOwnedByCustomerIndicator"
										}
									},
									{
										"Name": "WarehouseTypeId",
										"Description": "The unique identifier of a warehouse type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 0,
											"Precision": 0,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Warehouse.cdm.json/Warehouse",
											"Name": "WarehouseTypeId"
										}
									}
								],
								"ColumnSetEntityName": "d3049d67-0169-4aaa-ad06-a6c258ce4686",
								"Format": {
									"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
									"FormatType": "csv",
									"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
									"Properties": {
										"path": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Warehouse",
										"delimiter": ",",
										"firstRowAsHeader": "false",
										"multiLine": "false",
										"serialization.format": "1",
										"escape": "\\",
										"quote": "\"",
										"FormatTypeSetToDatabaseDefault": true,
										"header": "false"
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://wplushiramsynapsefs@wplushiramsynapseadlsv2.dfs.core.windows.net/Manufacturing_qwg/Warehouse",
									"Properties": {
										"LinkedServiceName": "wplushiramsynapse-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"WarehouseId\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseId\"},\"WarehouseName\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseName\"},\"LocationId\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"LocationId\"},\"GlobalLocationNumber\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"GlobalLocationNumber\"},\"WarehouseTelephoneNumber\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseTelephoneNumber\"},\"WarehouseFaxNumber\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseFaxNumber\"},\"WarehouseEmailAddress\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseEmailAddress\"},\"PickAndPackLeadTime\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"PickAndPackLeadTime\"},\"WarehouseOrderCutoffTime\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseOrderCutoffTime\"},\"TotalFloorSpace\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"TotalFloorSpace\"},\"TotalFloorInventoryStorageSpace\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"TotalFloorInventoryStorageSpace\"},\"StorageSpaceUnitOfMeasureId\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"StorageSpaceUnitOfMeasureId\"},\"ContractWarehouseIndicator\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"ContractWarehouseIndicator\"},\"StoreId\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"StoreId\"},\"CustomerId\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"CustomerId\"},\"CustomerOwnedWarehouseIndicator\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"CustomerOwnedWarehouseIndicator\"},\"CustomerManagedWarehouseIndicator\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"CustomerManagedWarehouseIndicator\"},\"InventoryOwnedByCustomerIndicator\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"InventoryOwnedByCustomerIndicator\"},\"WarehouseTypeId\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseTypeId\"}}}"
								},
								"Compressed": false,
								"SerDeInfo": null,
								"IsStoredAsSubdirectories": false
							},
							"Owner": null,
							"CreateTime": 0,
							"LastAccessTime": 0,
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"ViewOriginalText": null,
							"ViewExpandedText": null,
							"Origin": {
								"Type": "SPARK"
							},
							"OriginObjectId": null,
							"IsSharedEntity": false,
							"PublishStatus": "PUBLISHED",
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Warehouse\",\"path\":\"Warehouse.cdm.json/Warehouse\"},\"description\":\"A structure designated for storage of things or items.\\nA 'warehouse' is synonymous with 'stockroom'.\",\"primaryKey\":[\"WarehouseId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Warehouse.\",\"isNullable\":false,\"name\":\"WarehouseId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Warehouse.\",\"isNullable\":true,\"name\":\"WarehouseName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"GlobalLocationNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":13,\"description\":\"The Global Location Number (GLN) is a simple tool used to uniquely identify locations. It can be used to identify physical locations such as a warehouse, legal entities, or a function / department within a legal entity. The GLN is part of the GS1 system of standards.\",\"isNullable\":true,\"scale\":0,\"name\":\"GlobalLocationNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseTelephoneNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The Warehouse Telephone Number.\",\"isNullable\":true,\"scale\":0,\"name\":\"WarehouseTelephoneNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseFaxNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The Warehouse Fax Number.\",\"isNullable\":true,\"scale\":0,\"name\":\"WarehouseFaxNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseEmailAddress\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The Warehouse email address.\",\"isNullable\":true,\"name\":\"WarehouseEmailAddress\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"PickAndPackLeadTime\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The default time required to pick and pack an item at a warehouse.\",\"isNullable\":true,\"name\":\"PickAndPackLeadTime\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseOrderCutoffTime\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The latest time each day that new orders will be accepted for delivery for the next scheduled delivery day.\",\"isNullable\":true,\"name\":\"WarehouseOrderCutoffTime\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"TotalFloorSpace\"},\"dataType\":\"integer\",\"description\":\"The total floor space at the Warehouse.\",\"isNullable\":true,\"name\":\"TotalFloorSpace\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"TotalFloorInventoryStorageSpace\"},\"dataType\":\"integer\",\"description\":\"The total floor space at the Warehouse that is available for storage of inventory.\",\"isNullable\":true,\"name\":\"TotalFloorInventoryStorageSpace\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"StorageSpaceUnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The unit of measure for the size measurement of the Warehouse.\\n\\nEx:\\n- square feet\\n- square meter\",\"isNullable\":true,\"name\":\"StorageSpaceUnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"ContractWarehouseIndicator\"},\"dataType\":\"boolean\",\"description\":\"A contract warehouse is a business that handles shipping, receiving, and storage of products on a contract basis.  \\n\\nContract warehouses will generally require a client to commit to a specific period of time (generally in years) for the services.  \\n\\nContracts may or may not require clients to purchase or subsidize storage and material-handling equipment.  \\n\\nFees for contract warehouses may be transaction and storage based, fixed, cost plus, or any combination.\",\"isNullable\":true,\"name\":\"ContractWarehouseIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"StoreId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Store.\",\"isNullable\":true,\"name\":\"StoreId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"CustomerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Customer.\",\"isNullable\":true,\"name\":\"CustomerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"CustomerOwnedWarehouseIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the customer owns the warehouse.\",\"isNullable\":true,\"name\":\"CustomerOwnedWarehouseIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"CustomerManagedWarehouseIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the customer manages the warehouse.\",\"isNullable\":true,\"name\":\"CustomerManagedWarehouseIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"InventoryOwnedByCustomerIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the inventory stored at the warehouse inventory location is owned by the customer.\",\"isNullable\":true,\"name\":\"InventoryOwnedByCustomerIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Warehouse.cdm.json/Warehouse\",\"name\":\"WarehouseTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a warehouse type.\",\"isNullable\":true,\"name\":\"WarehouseTypeId\"}]}}}",
								"Description": "A structure designated for storage of things or items.\nA 'warehouse' is synonymous with 'stockroom'.",
								"DisplayFolderInfo": "{\"name\":\"Inventory\",\"colorCode\":\"\"}",
								"PrimaryKeys": "WarehouseId",
								"spark.sql.sources.provider": "csv",
								"x-ms-usageinfo": "AzureSynapseDatabaseTemplate",
								"spark.sql.sources.schema.numParts": "1",
								"spark.sql.sources.schema.part.0": "{\"type\":\"struct\",\"fields\":[{\"name\":\"WarehouseId\",\"type\":\"integer\",\"nullable\":false,\"metadata\":{}},{\"name\":\"WarehouseName\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"LocationId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"GlobalLocationNumber\",\"type\":\"decimal(13,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarehouseTelephoneNumber\",\"type\":\"decimal(15,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarehouseFaxNumber\",\"type\":\"decimal(15,0)\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarehouseEmailAddress\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"PickAndPackLeadTime\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarehouseOrderCutoffTime\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalFloorSpace\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"TotalFloorInventoryStorageSpace\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StorageSpaceUnitOfMeasureId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"ContractWarehouseIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"StoreId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerId\",\"type\":\"long\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerOwnedWarehouseIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"CustomerManagedWarehouseIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"InventoryOwnedByCustomerIndicator\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"WarehouseTypeId\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]}"
							},
							"ObjectVersion": 1,
							"ObjectId": "68b34b11-4ed4-4f9d-af75-c2abbd1fc674",
							"Description": "A structure designated for storage of things or items.\nA 'warehouse' is synonymous with 'stockroom'."
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-arnliiqmre",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Transaction",
							"ToTableName": "Order",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TransactionId",
									"ToColumnName": "OrderId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Transaction.cdm.json/Transaction\",\"toEntity\":\"Order.cdm.json/Order\",\"joinPairs\":[{\"fromAttribute\":\"TransactionId\",\"toAttribute\":\"OrderId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "42c6bc8d-34e7-40c2-82e3-60efeeb3cecc"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-brzalgvcwn",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Customer",
							"ToTableName": "Order",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "CustomerId",
									"ToColumnName": "CustomerId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Customer.cdm.json/Customer\",\"toEntity\":\"Order.cdm.json/Order\",\"joinPairs\":[{\"fromAttribute\":\"CustomerId\",\"toAttribute\":\"CustomerId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "78cd22b5-9fa7-4ea9-9a57-085e891e2ab7"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-daodmxajgu",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Vendor",
							"ToTableName": "Item",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "VendorId",
									"ToColumnName": "VendorId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Vendor.cdm.json/Vendor\",\"toEntity\":\"Item.cdm.json/Item\",\"joinPairs\":[{\"fromAttribute\":\"VendorId\",\"toAttribute\":\"VendorId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "e0df78f6-e4dd-4acf-923b-8af1b6913efa"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-dsekdprdrx",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Order",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "SalesChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Order.cdm.json/Order\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"SalesChannelId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "725dd57e-dfa2-49b2-86a9-a2bf769c0d3c"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-eeqdrnfufd",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Customer",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "CustomerId",
									"ToColumnName": "CustomerId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Customer.cdm.json/Customer\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"CustomerId\",\"toAttribute\":\"CustomerId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "af998ab9-4293-45a1-9707-5a926a954a27"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-ggvrnlavph",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Customer",
							"ToTableName": "Warehouse",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "CustomerId",
									"ToColumnName": "CustomerId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Customer.cdm.json/Customer\",\"toEntity\":\"Warehouse.cdm.json/Warehouse\",\"joinPairs\":[{\"fromAttribute\":\"CustomerId\",\"toAttribute\":\"CustomerId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "f5890b90-3716-4ebb-8175-d031872c02b2"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-iqtzshccdo",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Communication",
							"ToTableName": "Document",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "CommunicationId",
									"ToColumnName": "DocumentId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Communication.cdm.json/Communication\",\"toEntity\":\"Document.cdm.json/Document\",\"joinPairs\":[{\"fromAttribute\":\"CommunicationId\",\"toAttribute\":\"DocumentId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "91610ec6-b447-4d56-8747-8c84c8180856"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-kzapcfbyir",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Employee",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "EmployeeId",
									"ToColumnName": "ApprovedByEmployeeId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Employee.cdm.json/Employee\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"EmployeeId\",\"toAttribute\":\"ApprovedByEmployeeId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "c3fc8536-55bd-4bf3-ac5f-3d64e59543e3"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-lyvlhancpt",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "DistributionChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"DistributionChannelId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "a3dd3a05-326d-4430-8a5d-c39783018835"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-ohzxyshkip",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Item",
							"ToTableName": "ManufacturingProduct",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ItemSku",
									"ToColumnName": "ItemSku"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Item.cdm.json/Item\",\"toEntity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"joinPairs\":[{\"fromAttribute\":\"ItemSku\",\"toAttribute\":\"ItemSku\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "a9e5c8da-9760-4696-bb17-6d1d96eee1c9"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-rdclqksqtn",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Warehouse",
							"ToTableName": "Order",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "WarehouseId",
									"ToColumnName": "WarehouseId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Warehouse.cdm.json/Warehouse\",\"toEntity\":\"Order.cdm.json/Order\",\"joinPairs\":[{\"fromAttribute\":\"WarehouseId\",\"toAttribute\":\"WarehouseId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "7ca5d09a-cfba-488c-a3b6-6691e467b139"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-tlubjcwlvb",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Vendor",
							"ToTableName": "Order",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "VendorId",
									"ToColumnName": "VendorId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Vendor.cdm.json/Vendor\",\"toEntity\":\"Order.cdm.json/Order\",\"joinPairs\":[{\"fromAttribute\":\"VendorId\",\"toAttribute\":\"VendorId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "7d6a1c68-d716-45c8-bce2-b41a87319770"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-tnuyqfydur",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "PurchasingChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"PurchasingChannelId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "aa6133a9-4986-4d34-8223-4bed33db8e47"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-tsconzctgn",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Transaction",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "SalesChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Transaction.cdm.json/Transaction\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"SalesChannelId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "f4738ab3-c73d-443d-9fd8-d50f143be086"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-xnsxsrfndl",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ManufacturingProduct",
							"ToTableName": "Item",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProductId",
									"ToColumnName": "ProductId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ManufacturingProduct.cdm.json/ManufacturingProduct\",\"toEntity\":\"Item.cdm.json/Item\",\"joinPairs\":[{\"fromAttribute\":\"ProductId\",\"toAttribute\":\"ProductId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "7d0e421f-dabb-4e7e-a349-244fd33fb2fc"
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-zsbuealrrg",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "Manufacturing_qwg"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Channel",
							"ToTableName": "Order",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ChannelId",
									"ToColumnName": "DistributionChannelId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Channel.cdm.json/Channel\",\"toEntity\":\"Order.cdm.json/Order\",\"joinPairs\":[{\"fromAttribute\":\"ChannelId\",\"toAttribute\":\"DistributionChannelId\"}]}}"
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "77f5f4df-0d25-48f4-bac3-f099446fc5fa"
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/threetwo')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 5,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": true,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wplussynapsedw')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}